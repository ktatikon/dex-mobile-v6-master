{
  "version": 3,
  "sources": ["../../minimalistic-assert/index.js", "../../inherits/inherits_browser.js", "../../hash.js/lib/hash/utils.js", "../../hash.js/lib/hash/common.js", "../../hash.js/lib/hash/sha/common.js", "../../hash.js/lib/hash/sha/1.js", "../../hash.js/lib/hash/sha/256.js", "../../hash.js/lib/hash/sha/224.js", "../../hash.js/lib/hash/sha/512.js", "../../hash.js/lib/hash/sha/384.js", "../../hash.js/lib/hash/sha.js", "../../hash.js/lib/hash/ripemd.js", "../../hash.js/lib/hash/hmac.js", "../../hash.js/lib/hash.js", "../../@ethersproject/properties/src.ts/_version.ts", "../../@ethersproject/properties/src.ts/index.ts", "../../@ethersproject/abi/src.ts/_version.ts", "../../@ethersproject/abi/src.ts/coders/abstract-coder.ts", "../../@ethersproject/abi/src.ts/coders/address.ts", "../../@ethersproject/abi/src.ts/coders/anonymous.ts", "../../@ethersproject/abi/src.ts/coders/array.ts", "../../@ethersproject/abi/src.ts/coders/boolean.ts", "../../@ethersproject/abi/src.ts/coders/bytes.ts", "../../@ethersproject/abi/src.ts/coders/fixed-bytes.ts", "../../@ethersproject/abi/src.ts/coders/null.ts", "../../@ethersproject/abi/src.ts/coders/number.ts", "../../@ethersproject/abi/node_modules/@ethersproject/strings/src.ts/_version.ts", "../../@ethersproject/abi/node_modules/@ethersproject/strings/src.ts/utf8.ts", "../../@ethersproject/abi/node_modules/@ethersproject/strings/src.ts/idna.ts", "../../@ethersproject/abi/src.ts/coders/string.ts", "../../@ethersproject/abi/src.ts/coders/tuple.ts", "../../@ethersproject/abi/src.ts/fragments.ts", "../../@ethersproject/abi/src.ts/abi-coder.ts", "../../@ethersproject/hash/node_modules/@ethersproject/keccak256/src.ts/index.ts", "../../@ethersproject/hash/node_modules/@ethersproject/strings/src.ts/_version.ts", "../../@ethersproject/hash/node_modules/@ethersproject/strings/src.ts/utf8.ts", "../../@ethersproject/hash/node_modules/@ethersproject/strings/src.ts/idna.ts", "../../@ethersproject/hash/src.ts/id.ts", "../../@ethersproject/hash/src.ts/_version.ts", "../../@ethersproject/base64/src.ts/index.ts", "../../@ethersproject/base64/src.ts/browser-base64.ts", "../../@ethersproject/hash/src.ts/ens-normalize/decoder.ts", "../../@ethersproject/hash/src.ts/ens-normalize/include.ts", "../../@ethersproject/hash/src.ts/ens-normalize/lib.ts", "../../@ethersproject/hash/src.ts/namehash.ts", "../../@ethersproject/hash/src.ts/message.ts", "../../@ethersproject/hash/src.ts/typed-data.ts", "../../@ethersproject/abi/node_modules/@ethersproject/keccak256/src.ts/index.ts", "../../@ethersproject/abi/src.ts/interface.ts", "../../@ethersproject/solidity/node_modules/@ethersproject/keccak256/src.ts/index.ts", "../../@ethersproject/sha2/src.ts/browser-sha2.ts", "../../@ethersproject/sha2/src.ts/types.ts", "../../@ethersproject/sha2/src.ts/_version.ts", "../../@ethersproject/solidity/node_modules/@ethersproject/strings/src.ts/_version.ts", "../../@ethersproject/solidity/node_modules/@ethersproject/strings/src.ts/utf8.ts", "../../@ethersproject/solidity/node_modules/@ethersproject/strings/src.ts/idna.ts", "../../@ethersproject/solidity/src.ts/_version.ts", "../../@ethersproject/solidity/src.ts/index.ts"],
  "sourcesContent": ["module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n", "'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n", "'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n", "'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n", "'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n", "'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n", "var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n", "export const version = \"properties/5.8.0\";\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function defineReadOnly<T, K extends keyof T>(object: T, name: K, value: T[K]): void {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n\n// Crawl up the constructor chain to find a static method\nexport function getStatic<T>(ctor: any, key: string): T {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) { return ctor[key]; }\n        if (!ctor.prototype || typeof(ctor.prototype) !== \"object\") { break; }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n\nexport type Deferrable<T> = {\n    [ K in keyof T ]: T[K] | Promise<T[K]>;\n}\n\n\ntype Result = { key: string, value: any};\n\nexport async function resolveProperties<T>(object: Readonly<Deferrable<T>>): Promise<T> {\n    const promises: Array<Promise<Result>> = Object.keys(object).map((key) => {\n        const value = object[<keyof Deferrable<T>>key];\n        return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n    });\n\n    const results = await Promise.all(promises);\n\n    return results.reduce((accum, result) => {\n        accum[<keyof T>(result.key)] = result.value;\n        return accum;\n    }, <T>{ });\n}\n\nexport function checkProperties(object: any, properties: { [ name: string ]: boolean }): void {\n    if (!object || typeof(object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\n\nexport function shallowCopy<T>(object: T): T {\n    const result: any = {};\n    for (const key in object) { result[key] = object[key]; }\n    return result;\n}\n\nconst opaque: { [key: string]: boolean } = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\n\nfunction _isFrozen(object: any): boolean {\n\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof(object)]) { return true; }\n\n    if (Array.isArray(object) || typeof(object) === \"object\") {\n        if (!Object.isFrozen(object)) { return false; }\n\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value: any = null;\n            try {\n                value = object[keys[i]];\n            } catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n\n            if (!_isFrozen(value)) { return false; }\n        }\n\n        return true;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object: any): any {\n\n    if (_isFrozen(object)) { return object; }\n\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n\n    if (typeof(object) === \"object\") {\n        const result: { [ key: string ]: any } = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) { continue; }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n\n        return result;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\nexport function deepCopy<T>(object: T): T {\n    return _deepCopy(object);\n}\n\nexport class Description<T = any> {\n    constructor(info: { [ K in keyof T ]: T[K] }) {\n        for (const key in info) {\n            (<any>this)[key] = deepCopy(info[key]);\n        }\n    }\n}\n", "export const version = \"abi/5.8.0\";\n", "\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nexport interface Result extends ReadonlyArray<any> {\n    readonly [key: string]: any;\n}\n\nexport function checkResultErrors(result: Result): Array<{ path: Array<string | number>, error: Error }> {\n    // Find the first error (if any)\n    const errors: Array<{ path: Array<string | number>, error: Error }> = [ ];\n\n    const checkErrors = function(path: Array<string | number>, object: any): void {\n        if (!Array.isArray(object)) { return; }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n\n            try {\n                 checkErrors(childPath, object[key]);\n            } catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    }\n    checkErrors([ ], result);\n\n    return errors;\n\n}\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport abstract class Coder {\n\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    readonly name: string;\n\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    readonly type: string;\n\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    readonly localName: string;\n\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    readonly dynamic: boolean;\n\n    constructor(name: string, type: string, localName: string, dynamic: boolean) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n\n    _throwError(message: string, value: any): void {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n\n    abstract encode(writer: Writer, value: any): number;\n    abstract decode(reader: Reader): any;\n\n    abstract defaultValue(): any;\n}\n\nexport class Writer {\n    readonly wordSize: number;\n\n    _data: Array<Uint8Array>;\n    _dataLength: number;\n    _padding: Uint8Array;\n\n    constructor(wordSize?: number) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [ ];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n\n    get data(): string {\n        return hexConcat(this._data);\n    }\n    get length(): number { return this._dataLength; }\n\n    _writeData(data: Uint8Array): number {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n\n    appendWriter(writer: Writer): number {\n        return this._writeData(concat(writer._data));\n    }\n\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value: BytesLike): number {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([ bytes, this._padding.slice(paddingOffset) ])\n        }\n        return this._writeData(bytes);\n    }\n\n    _getValue(value: BigNumberish): Uint8Array {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([ this._padding.slice(bytes.length % this.wordSize), bytes ]);\n        }\n        return bytes;\n    }\n\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value: BigNumberish): number {\n        return this._writeData(this._getValue(value));\n    }\n\n    writeUpdatableValue(): (value: BigNumberish) => void {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value: BigNumberish) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\n\nexport class Reader {\n    readonly wordSize: number;\n    readonly allowLoose: boolean;\n\n    readonly _data: Uint8Array;\n    readonly _coerceFunc: CoerceFunc;\n\n    _offset: number;\n\n    constructor(data: BytesLike, wordSize?: number, coerceFunc?: CoerceFunc, allowLoose?: boolean) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n\n        this._offset = 0;\n    }\n\n    get data(): string { return hexlify(this._data); }\n    get consumed(): number { return this._offset; }\n\n    // The default Coerce function\n    static coerce(name: string, value: any): any {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) { value =  value.toNumber(); }\n        return value;\n    }\n\n    coerce(name: string, value: any): any {\n        if (this._coerceFunc) { return this._coerceFunc(name, value); }\n        return Reader.coerce(name, value);\n    }\n\n    _peekBytes(offset: number, length: number, loose?: boolean): Uint8Array {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            } else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength)\n    }\n\n    subReader(offset: number): Reader {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n\n    readBytes(length: number, loose?: boolean): Uint8Array {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n\n    readValue(): BigNumber {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n", "\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class AddressCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"address\", \"address\", localName, false);\n    }\n\n    defaultValue(): string {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n\n    encode(writer: Writer, value: string): number {\n        try {\n            value = getAddress(value)\n        } catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n\n", "\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\n\nexport function pack(writer: Writer, coders: ReadonlyArray<Coder>, values: Array<any> | { [ name: string ]: any }): number {\n    let arrayValues: Array<any> = null;\n\n    if (Array.isArray(values)) {\n       arrayValues = values;\n\n    } else if (values && typeof(values) === \"object\") {\n        let unique: { [ name: string ]: boolean } = { };\n\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            unique[name] = true;\n\n            return values[name];\n        });\n\n    } else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n\n    let updateFuncs: Array<(baseOffset: number) => void> = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset: number) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n\n        } else {\n            coder.encode(staticWriter, value);\n        }\n    });\n\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n\nexport function unpack(reader: Reader, coders: Array<Coder>): Result {\n    let values: any = [];\n\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n\n    coders.forEach((coder) => {\n        let value: any = null;\n\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n\n        } else {\n            try {\n                value = coder.decode(reader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) { accum[name] = 0; }\n            accum[name]++;\n        }\n        return accum;\n    }, <{ [ name: string ]: number }>{ });\n\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder: Coder, index: number) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) { return; }\n\n        if (name === \"length\") { name = \"_length\"; }\n\n        if (values[name] != null) { return; }\n\n        const value = values[index];\n\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        } else {\n            values[name] = value;\n        }\n    });\n\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n\n    return Object.freeze(values);\n}\n\n\nexport class ArrayCoder extends Coder {\n    readonly coder: Coder;\n    readonly length: number;\n\n    constructor(coder: Coder, length: number, localName: string) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length: \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n\n        this.coder = coder;\n        this.length = length;\n    }\n\n    defaultValue(): Array<any> {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n\n        const result: Array<any> = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n\n    encode(writer: Writer, value: Array<any>): number {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n\n        let count = this.length;\n\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName? (\" \"+ this.localName): \"\"));\n\n        let coders = [];\n        for (let i = 0; i < value.length; i++) { coders.push(this.coder); }\n\n        return pack(writer, coders, value);\n    }\n\n    decode(reader: Reader): any {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) { coders.push(new AnonymousCoder(this.coder)); }\n\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n\n", "\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, value: boolean): number {\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n\n", "\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\n\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n\n\n", "\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    readonly size: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, value: BytesLike): number {\n        let data = arrayify(value);\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n", "\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NullCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"null\", \"\", localName, false);\n    }\n\n    defaultValue(): null {\n        return null;\n    }\n\n    encode(writer: Writer, value: any): number {\n        if (value != null) { this._throwError(\"not null\", value); }\n        return writer.writeBytes([ ]);\n    }\n\n    decode(reader: Reader): any {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n", "\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NumberCoder extends Coder {\n    readonly size: number;\n    readonly signed: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        this.size = size;\n        this.signed = signed;\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, value: BigNumberish): number {\n        let v = BigNumber.from(value);\n\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        } else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n\n        return writer.writeValue(v);\n    }\n\n    decode(reader: Reader): any {\n        let value = reader.readValue().mask(this.size * 8);\n\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n\n        return reader.coerce(this.name, value);\n    }\n}\n\n", "export const version = \"strings/5.8.0\";\n", "\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n", "\"use strict\";\n\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\n\ntype Ranged = {\n    l: number,          // Lo value\n    h: number,          // High value (less the lo)\n    d?: number,         // Delta/stride (default: 1)\n    s?: number,         // Shift (default: 1)\n    e?: Array<number>   // Exceptions to skip\n};\n\ntype Table = { [ src: number ]: Array<number> };\n\nfunction bytes2(data: string): Array<number> {\n    if ((data.length % 4) !== 0) { throw new Error(\"bad data\"); }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\n\nfunction createTable(data: string, func?: (value: string) => Array<number>): Table {\n    if (!func) {\n        func = function(value: string) { return [ parseInt(value, 16) ]; }\n    }\n\n    let lo = 0;\n\n    let result: Table = { };\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n\n    return result;\n}\n\nfunction createRangeTable(data: string): Array<Ranged> {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        } else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\n\nfunction matchMap(value: number, ranges: Array<Ranged>): Ranged {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) { continue; }\n            return range;\n        }\n    }\n    return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\n\nconst Table_B_2_ranges: Array<Ranged> = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [ 23 ], l: 127 },\n    { h: 54, s: 1, e: [ 48 ], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [ 2, 6, 8 ], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [ 18, 24, 66 ], l: 19, d: 2 },\n    { h: 26, s: 32, e: [ 17 ], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [ 38 ], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [ 1, 4, 5, 7, 8, 11, 12, 17 ], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [ 2, 7, 8, 17 ], l: 52 },\n    { h: 24, s: -120023, e: [ 2, 7, 13, 15, 16, 17 ], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [ 17 ], l: 56 },\n    { h: 24, s: -119601, e: [ 17 ], l: 58 },\n    { h: 24, s: -119659, e: [ 17 ], l: 58 },\n    { h: 24, s: -119717, e: [ 17 ], l: 58 },\n    { h: 24, s: -119775, e: [ 17 ], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\n\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\n\nfunction flatten(values: Array<Array<number>>): Array<number> {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, [ ]);\n}\n\nexport function _nameprepTableA1(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nexport function _nameprepTableB2(codepoint: number): Array<number> {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) { return [ codepoint + range.s ]; }\n\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) { return codes; }\n\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) { return [ codepoint + shift[0] ]; }\n\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) { return complex; }\n\n    return null;\n}\n\nexport function _nameprepTableC(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\n\nexport function nameprep(value: string): string {\n\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) { return value.toLowerCase(); }\n\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) { return [ ]; }\n        if (code >= 0xfe00 && code <= 0xfe0f) { return [ ]; }\n\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) { return codesTableB2; }\n\n        // No Substitution\n        return [ code ];\n    }));\n\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n\n    // IDNA extras\n    let name = _toUtf8String(codes);\n\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n\n    return name;\n}\n\n", "\"use strict\";\n\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Reader, Writer } from \"./abstract-coder\";\nimport { DynamicBytesCoder } from \"./bytes\";\n\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n", "\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\n\nexport class TupleCoder extends Coder {\n    readonly coders: Array<Coder>;\n\n    constructor(coders: Array<Coder>, localName: string) {\n        let dynamic = false;\n        const types: Array<string> = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) { dynamic = true; }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n\n    defaultValue(): any {\n        const values: any = [ ];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) { accum[name] = 0; }\n                accum[name]++;\n            }\n            return accum;\n        }, <{ [ name: string ]: number }>{ });\n\n        // Add named values\n        this.coders.forEach((coder: Coder, index: number) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) { return; }\n\n            if (name === \"length\") { name = \"_length\"; }\n\n            if (values[name] != null) { return; }\n\n            values[name] = values[index];\n        });\n\n        return Object.freeze(values);\n    }\n\n    encode(writer: Writer, value: Array<any> | { [ name: string ]: any }): number {\n        return pack(writer, this.coders, value);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n\n", "\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport interface JsonFragmentType {\n    readonly name?: string;\n    readonly indexed?: boolean;\n    readonly type?: string;\n    readonly internalType?: any; // @TODO: in v6 reduce type\n    readonly components?: ReadonlyArray<JsonFragmentType>;\n}\n\nexport interface JsonFragment {\n    readonly name?: string;\n    readonly type?: string;\n\n    readonly anonymous?: boolean;\n\n    readonly payable?: boolean;\n    readonly constant?: boolean;\n    readonly stateMutability?: string;\n\n    readonly inputs?: ReadonlyArray<JsonFragmentType>;\n    readonly outputs?: ReadonlyArray<JsonFragmentType>;\n\n    readonly gas?: string;\n};\n\nconst _constructorGuard = { };\n\n// AST Node parser state\ntype ParseState = {\n    allowArray?: boolean,\n    allowName?: boolean,\n    allowParams?: boolean,\n    allowType?: boolean,\n    readArray?: boolean,\n};\n\n// AST Node\ntype ParseNode = {\n    parent?: any,\n    type?: string,\n    name?: string,\n    state?: ParseState,\n    indexed?: boolean,\n    components?: Array<ParseNode>\n};\n\nlet ModifiersBytes: { [ name: string ]: boolean } = { calldata: true, memory: true, storage: true };\nlet ModifiersNest: { [ name: string ]: boolean } = { calldata: true, memory: true };\nfunction checkModifier(type: string, name: string): boolean {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) { return true; }\n    } else if (type === \"address\") {\n        if (name === \"payable\") { return true; }\n    } else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) { return true; }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param: string, allowIndexed: boolean): ParseNode {\n\n    let originalParam = param;\n    function throwError(i: number) {\n        logger.throwArgumentError(`unexpected character at position ${ i }`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n\n    function newNode(parent: ParseNode): ParseNode {\n        let node: ParseNode = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) { node.indexed = false; }\n        return node\n    }\n\n    let parent: ParseNode = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                } else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [ newNode(node) ];\n                node = node.components[0];\n                break;\n\n            case \")\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let child = node;\n                node = node.parent;\n                if (!node) { throwError(i); }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n\n            case \",\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let sibling: ParseNode = newNode(node.parent);\n                 //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n\n            // Hit a space...\n            case \" \":\n\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) { throwError(i); }\n                            if (node.indexed) { throwError(i); }\n                            node.indexed = true;\n                            node.name = \"\";\n                        } else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        } else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n\n                break;\n\n            case \"[\":\n                if (!node.state.allowArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n\n            case \"]\":\n                if (!node.state.readArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                } else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                } else if (node.state.readArray) {\n                    node.type += c;\n                } else {\n                    throwError(i);\n               }\n        }\n    }\n\n    if (node.parent) { logger.throwArgumentError(\"unexpected eof\", \"param\", param); }\n\n    delete parent.state;\n\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) { throwError(originalParam.length - 7); }\n        if (node.indexed) { throwError(originalParam.length - 7); }\n        node.indexed = true;\n        node.name = \"\";\n    } else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n\n    parent.type = verifyType(parent.type);\n\n    return parent;\n}\n\nfunction populate(object: any, params: any) {\n    for (let key in params) { defineReadOnly(object, key, params[key]); }\n}\n\nexport const FormatTypes: { [ name: string ]: string } = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n\n    // JSON-format a la Solidity\n    json: \"json\"\n});\n\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nexport class ParamType {\n\n    // The local name of the parameter (of null if unbound)\n    readonly name: string;\n\n    // The fully qualified type (e.g. \"address\", \"tuple(address)\", \"uint256[3][]\"\n    readonly type: string;\n\n    // The base type (e.g. \"address\", \"tuple\", \"array\")\n    readonly baseType: string;\n\n    // Indexable Paramters ONLY (otherwise null)\n    readonly indexed: boolean;\n\n    // Tuples ONLY: (otherwise null)\n    //  - sub-components\n    readonly components: Array<ParamType>;\n\n    // Arrays ONLY: (otherwise null)\n    //  - length of the array (-1 for dynamic length)\n    //  - child type\n    readonly arrayLength: number;\n    readonly arrayChildren: ParamType;\n\n    readonly _isParamType: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) { logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new ParamType()\"\n        }); }\n        populate(this, params);\n\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        } else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\": this.type)\n            });\n        }\n\n        this._isParamType = true;\n\n        Object.freeze(this);\n    }\n\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            let result: any = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\": this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof(this.indexed) === \"boolean\") { result.indexed = this.indexed; }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n\n        let result = \"\";\n\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\": String(this.arrayLength)) + \"]\";\n        } else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map(\n                    (comp) => comp.format(format)\n                ).join((format === FormatTypes.full) ? \", \": \",\") + \")\";\n            } else {\n                result += this.type;\n            }\n        }\n\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) { result += \" indexed\"; }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n\n        return result;\n    }\n\n    static from(value: string | JsonFragmentType | ParamType, allowIndexed?: boolean): ParamType {\n        if (typeof(value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragmentType | ParamType): ParamType {\n        if (ParamType.isParamType(value)) { return value; }\n\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null: !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject): null)\n        });\n    }\n\n    static fromString(value: string, allowIndexed?: boolean): ParamType {\n        function ParamTypify(node: ParseNode): ParamType {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n\n    static isParamType(value: any): value is ParamType {\n        return !!(value != null && value._isParamType);\n    }\n};\n\nfunction parseParams(value: string, allowIndex: boolean): Array<ParamType> {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\n\ntype TypeCheck<T> = { -readonly [ K in keyof T ]: T[K] };\n\ninterface _Fragment {\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: ReadonlyArray<ParamType>;\n}\n\nexport abstract class Fragment {\n\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: Array<ParamType>;\n\n    readonly _isFragment: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n\n        this._isFragment = true;\n\n        Object.freeze(this);\n    }\n\n    abstract format(format?: string): string;\n\n    static from(value: Fragment | JsonFragment | string): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        if (typeof(value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n\n        return Fragment.fromObject(value);\n    }\n\n    static fromObject(value: Fragment | JsonFragment): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n\n    static fromString(value: string): Fragment {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n\n        if (value.split(\" \")[0] === \"event\") {\n           return EventFragment.fromString(value.substring(5).trim());\n        } else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        } else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        } else if (value.split(\" \")[0] === \"error\") {\n           return ErrorFragment.fromString(value.substring(5).trim());\n        }\n\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n\n    static isFragment(value: any): value is Fragment {\n        return !!(value && value._isFragment);\n    }\n}\n\ninterface _EventFragment extends _Fragment {\n    readonly anonymous: boolean;\n}\n\nexport class EventFragment extends Fragment {\n    readonly anonymous: boolean;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: EventFragment | JsonFragment | string): EventFragment {\n        if (typeof(value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragment | EventFragment): EventFragment {\n        if (EventFragment.isEventFragment(value)) { return value; }\n\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_EventFragment> = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n\n        return new EventFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): EventFragment {\n\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch(modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n\n    static isEventFragment(value: any): value is EventFragment {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\n\nfunction parseGas(value: string, params: any): string {\n    params.gas = null;\n\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n\n    return value;\n}\n\nfunction parseModifiers(value: string, params: any): void {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\n\ntype StateInputValue = {\n    constant?: boolean;\n    payable?: boolean;\n    stateMutability?: string;\n    type?: string;\n};\n\ntype StateOutputValue = {\n    constant: boolean;\n    payable: boolean;\n    stateMutability: string;\n};\n\nfunction verifyState(value: StateInputValue): StateOutputValue {\n    let result: any = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n    } else if (value.payable != null) {\n        result.payable = !!value.payable;\n\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n\n        result.constant = !!value.constant;\n\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        } else {\n            result.stateMutability = (result.payable ? \"payable\": \"nonpayable\");\n        }\n\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n\n    } else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\": \"payable\");\n\n    } else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n\n    return result;\n}\n\ninterface _ConstructorFragment extends _Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n}\n\nexport class ConstructorFragment extends Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n\n        let result = \"constructor(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n\n        return result.trim();\n    }\n\n    static from(value: ConstructorFragment | JsonFragment | string): ConstructorFragment {\n        if (typeof(value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ConstructorFragment | JsonFragment): ConstructorFragment {\n        if (ConstructorFragment.isConstructorFragment(value)) { return value; }\n\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n\n        const params: TypeCheck<_ConstructorFragment> = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): ConstructorFragment {\n        let params: any = { type: \"constructor\" };\n\n        value = parseGas(value, params);\n\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n\n        params.inputs = parseParams(parens[2].trim(), false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        return ConstructorFragment.fromObject(params);\n    }\n\n    static isConstructorFragment(value: any): value is ConstructorFragment {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\n\ninterface _FunctionFragment extends _ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n}\n\nexport class FunctionFragment extends ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            } else if (this.constant) {\n                result += \"view \";\n            }\n\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map(\n                    (output) => output.format(format)\n                ).join(\", \") + \") \";\n            }\n\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: FunctionFragment | JsonFragment | string): FunctionFragment {\n        if (typeof(value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n\n    static fromObject(value: FunctionFragment | JsonFragment): FunctionFragment {\n        if (FunctionFragment.isFunctionFragment(value)) { return value; }\n\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n\n        const params: TypeCheck<_FunctionFragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject): [ ]),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new FunctionFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): FunctionFragment {\n        let params: any = { type: \"function\" };\n        value = parseGas(value, params);\n\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        // We have outputs\n        if (comps.length > 1) {\n           let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        } else {\n            params.outputs = [ ];\n        }\n\n        return FunctionFragment.fromObject(params);\n    }\n\n    static isFunctionFragment(value: any): value is FunctionFragment {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n\n//export class StructFragment extends Fragment {\n//}\n\nfunction checkForbidden(fragment: ErrorFragment): ErrorFragment {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${ sig } error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\n\nexport class ErrorFragment extends Fragment {\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        return result.trim();\n    }\n\n    static from(value: ErrorFragment | JsonFragment | string): ErrorFragment {\n        if (typeof(value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ErrorFragment | JsonFragment): ErrorFragment {\n        if (ErrorFragment.isErrorFragment(value)) { return value; }\n\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_Fragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): [])\n        };\n\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n\n    static fromString(value: string): ErrorFragment {\n        let params: any = { type: \"error\" };\n\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n\n    static isErrorFragment(value: any): value is ErrorFragment {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\n\nfunction verifyType(type: string): string {\n\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    } else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n\n    // @TODO: more verification\n\n    return type;\n}\n\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value: string): string {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${ value }\"`, \"value\", value);\n    }\n    return value;\n}\n\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\n\nfunction splitNesting(value: string): Array<any> {\n    value = value.trim();\n\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        } else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            } else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) { result.push(accum); }\n\n    return result;\n}\n\n", "\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\n\nimport { ParamType } from \"./fragments\";\n\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport class AbiCoder {\n    readonly coerceFunc: CoerceFunc;\n\n    constructor(coerceFunc?: CoerceFunc) {\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n\n    _getCoder(param: ParamType): Coder {\n\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n\n    _getWordSize(): number { return 32; }\n\n    _getReader(data: Uint8Array, allowLoose?: boolean): Reader {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n\n    _getWriter(): Writer {\n        return new Writer(this._getWordSize());\n    }\n\n    getDefaultValue(types: ReadonlyArray<string | ParamType>): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n\n    encode(types: ReadonlyArray<string | ParamType>, values: ReadonlyArray<any>): string {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n\n    decode(types: ReadonlyArray<string | ParamType>, data: BytesLike, loose?: boolean): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\n\nexport const defaultAbiCoder: AbiCoder = new AbiCoder();\n\n", "\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n", "export const version = \"strings/5.8.0\";\n", "\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n", "\"use strict\";\n\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\n\ntype Ranged = {\n    l: number,          // Lo value\n    h: number,          // High value (less the lo)\n    d?: number,         // Delta/stride (default: 1)\n    s?: number,         // Shift (default: 1)\n    e?: Array<number>   // Exceptions to skip\n};\n\ntype Table = { [ src: number ]: Array<number> };\n\nfunction bytes2(data: string): Array<number> {\n    if ((data.length % 4) !== 0) { throw new Error(\"bad data\"); }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\n\nfunction createTable(data: string, func?: (value: string) => Array<number>): Table {\n    if (!func) {\n        func = function(value: string) { return [ parseInt(value, 16) ]; }\n    }\n\n    let lo = 0;\n\n    let result: Table = { };\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n\n    return result;\n}\n\nfunction createRangeTable(data: string): Array<Ranged> {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        } else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\n\nfunction matchMap(value: number, ranges: Array<Ranged>): Ranged {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) { continue; }\n            return range;\n        }\n    }\n    return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\n\nconst Table_B_2_ranges: Array<Ranged> = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [ 23 ], l: 127 },\n    { h: 54, s: 1, e: [ 48 ], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [ 2, 6, 8 ], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [ 18, 24, 66 ], l: 19, d: 2 },\n    { h: 26, s: 32, e: [ 17 ], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [ 38 ], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [ 1, 4, 5, 7, 8, 11, 12, 17 ], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [ 2, 7, 8, 17 ], l: 52 },\n    { h: 24, s: -120023, e: [ 2, 7, 13, 15, 16, 17 ], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [ 17 ], l: 56 },\n    { h: 24, s: -119601, e: [ 17 ], l: 58 },\n    { h: 24, s: -119659, e: [ 17 ], l: 58 },\n    { h: 24, s: -119717, e: [ 17 ], l: 58 },\n    { h: 24, s: -119775, e: [ 17 ], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\n\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\n\nfunction flatten(values: Array<Array<number>>): Array<number> {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, [ ]);\n}\n\nexport function _nameprepTableA1(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nexport function _nameprepTableB2(codepoint: number): Array<number> {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) { return [ codepoint + range.s ]; }\n\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) { return codes; }\n\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) { return [ codepoint + shift[0] ]; }\n\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) { return complex; }\n\n    return null;\n}\n\nexport function _nameprepTableC(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\n\nexport function nameprep(value: string): string {\n\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) { return value.toLowerCase(); }\n\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) { return [ ]; }\n        if (code >= 0xfe00 && code <= 0xfe0f) { return [ ]; }\n\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) { return codesTableB2; }\n\n        // No Substitution\n        return [ code ];\n    }));\n\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n\n    // IDNA extras\n    let name = _toUtf8String(codes);\n\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n\n    return name;\n}\n\n", "import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n", "export const version = \"hash/5.8.0\";\n", "\"use strict\";\n\nexport { decode, encode } from \"./base64\";\n", "\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n", "/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nexport type Numbers = Uint8Array | Array<number>;\nexport type NextFunc = (...args: Array<any>) => number;\n\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array: Array<any>, depth?: number): Array<any> {\n    if (depth == null) { depth = 1; }\n    const result: Array<any> = [];\n\n    const forEach = result.forEach;\n\n    const flatDeep = function (arr: Array<any>, depth: number) {\n        forEach.call(arr, function (val: any) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            } else {\n               result.push(val);\n            }\n        });\n    };\n\n    flatDeep(array, depth);\n    return result;\n}\n\nfunction fromEntries<T extends string | number | symbol = string | number | symbol, U = any>(array: Array<[T, U]>): Record<T, U> {\n    const result: Record<T, U> = <Record<T, U>>{ };\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\n\nexport function decode_arithmetic(bytes: Numbers): Array<number> {\n\tlet pos = 0;\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n\t\n\t// decode the frequency table\n\tlet symbol_count = u16();\n\tlet total = 1;\n\tlet acc = [0, 1]; // first symbol has frequency 1\n\tfor (let i = 1; i < symbol_count; i++) {\n\t\tacc.push(total += u16());\n\t}\n\n\t// skip the sized-payload that the last 3 symbols index into\n\tlet skip = u16();\n\tlet pos_payload = pos;\n\tpos += skip;\n\n\tlet read_width = 0;\n\tlet read_buffer = 0; \n\tfunction read_bit() {\n\t\tif (read_width == 0) {\n\t\t\t// this will read beyond end of buffer\n\t\t\t// but (undefined|0) => zero pad\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\n\t\t\tread_width = 8;\n\t\t}\n\t\treturn (read_buffer >> --read_width) & 1;\n\t}\n\n\tconst N = 31;\n\tconst FULL = 2**N;\n\tconst HALF = FULL >>> 1;\n\tconst QRTR = HALF >> 1;\n\tconst MASK = FULL - 1;\n\n\t// fill register\n\tlet register = 0;\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\n\n\tlet symbols = [];\n\tlet low = 0;\n\tlet range = FULL; // treat like a float\n\twhile (true) {\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\n\t\tlet start = 0;\n\t\tlet end = symbol_count;\n\t\twhile (end - start > 1) { // binary search\n\t\t\tlet mid = (start + end) >>> 1;\n\t\t\tif (value < acc[mid]) {\n\t\t\t\tend = mid;\n\t\t\t} else {\n\t\t\t\tstart = mid;\n\t\t\t}\n\t\t}\n\t\tif (start == 0) break; // first symbol is end mark\n\t\tsymbols.push(start);\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1\n\t\twhile (((a ^ b) & HALF) == 0) {\n\t\t\tregister = (register << 1) & MASK | read_bit();\n\t\t\ta = (a << 1) & MASK;\n\t\t\tb = (b << 1) & MASK | 1;\n\t\t}\n\t\twhile (a & ~b & QRTR) {\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n\t\t\ta = (a << 1) ^ HALF;\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\n\t\t}\n\t\tlow = a;\n\t\trange = 1 + b - a;\n\t}\n\tlet offset = symbol_count - 4;\n\treturn symbols.map(x => { // index into payload\n\t\tswitch (x - offset) {\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 1: return offset + bytes[pos_payload++];\n\t\t\tdefault: return x - 1;\n\t\t}\n\t});\n}\t\n\n\n// returns an iterator which returns the next symbol\nexport function read_payload(v: Numbers): NextFunc {\n\tlet pos = 0;\n\treturn () => v[pos++];\n}\nexport function read_compressed_payload(bytes: Numbers): NextFunc {\n\treturn read_payload(decode_arithmetic(bytes));\n}\n\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i: number): number { \n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\n}\n\nfunction read_counts(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0; i < n; i++) v[i] = 1 + next();\n\treturn v;\n}\n\nfunction read_ascending(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();\n\treturn v;\n}\n\nfunction read_deltas(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\n\treturn v;\n}\n\nexport function read_member_array(next: NextFunc, lookup?: Record<number, number>) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next: NextFunc): Record<number, Array<number>> {\n\tlet ret = [];\n\twhile (true) {\n\t\tlet w = next();\n\t\tif (w == 0) break;\n\t\tret.push(read_linear_table(w, next));\n\t}\n\twhile (true) {\n\t\tlet w = next() - 1;\n\t\tif (w < 0) break;\n\t\tret.push(read_replacement_table(w, next));\n\t}\n\treturn fromEntries<number, Array<number>>(flat(ret));\n}\n\nexport function read_zero_terminated_array(next: NextFunc): Array<number> {\n\tlet v = [];\n\twhile (true) {\n\t\tlet i = next();\n\t\tif (i == 0) break;\n\t\tv.push(i);\n\t}\n\treturn v;\n}\n\nfunction read_transposed(n: number, w: number, next: NextFunc): Array<Array<number>> {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\n\n\nfunction read_linear_table(w: number, next: NextFunc): Array<Array<number | Array<number>>> {\n\tlet dx = 1 + next();\n\tlet dy = next();\n\tlet vN = read_zero_terminated_array(next);\n\tlet m = read_transposed(vN.length, 1+w, next);\n\treturn flat(m.map((v, i) => {\n\t  const x = v[0], ys = v.slice(1);\n\t\t//let [x, ...ys] = v;\n\t\t//return Array(vN[i]).fill().map((_, j) => {\n\t\treturn Array(vN[i]).fill(undefined).map((_, j) => {\n\t\t\tlet j_dy = j * dy;\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\n\t\t});\n\t}));\n}\n\nfunction read_replacement_table(w: number, next: NextFunc): Array<[ number, Array<number> ]> {\n\tlet n = 1 + next();\n\tlet m = read_transposed(n, 1+w, next);\n\treturn m.map(v => [v[0], v.slice(1)]);\n}\n\nexport type Branch = {\n    set: Set<number>;\n    node: Node;\n};\n\nexport type Node = {\n    branches: Array<Branch>;\n    valid: number;\n    fe0f: boolean;\n    save: boolean;\n    check: boolean;\n};\n\nexport function read_emoji_trie(next: NextFunc): Node {\n\tlet sorted = read_member_array(next).sort((a, b) => a - b);\n\treturn read();\n\tfunction read(): Node {\n\t\tlet branches = [];\n\t\twhile (true) {\n\t\t\tlet keys = read_member_array(next, sorted);\n\t\t\tif (keys.length == 0) break;\n\t\t\tbranches.push({set: new Set(keys), node: read()});\n\t\t}\n    branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n \t\tlet temp = next();\n \t\tlet valid = temp % 3;\n \t\ttemp = (temp / 3)|0;\n \t\tlet fe0f = !!(temp & 1);\n \t\ttemp >>= 1;\n \t\tlet save = temp == 1;\n \t\tlet check = temp == 2;\n \t\treturn {branches, valid, fe0f, save, check};\n\t}\n}\n", "/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { decode } from \"@ethersproject/base64\";\n\nimport {read_compressed_payload} from './decoder.js';\n\nexport function getData(): () => number {\n    return read_compressed_payload(decode(''));\n}\n\n", "/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\n\nimport { getData } from './include.js';\nconst r = getData();\n\nimport {read_member_array, read_mapped_map, read_emoji_trie} from './decoder.js';\n\n// @TODO: This should be lazily loaded\n\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\n\nfunction explode_cp(name: string): Array<number> {\n    return toUtf8CodePoints(name);\n}\n\nfunction filter_fe0f(cps: Array<number>): Array<number> {\n    return cps.filter(cp => cp != 0xFE0F);\n}\n\nexport function ens_normalize_post_check(name: string): string {\n\tfor (let label of name.split('.')) {\n\t\tlet cps = explode_cp(label);\n\t\ttry {\n\t\t\tfor (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n\t\t\t\tif (cps[i] !== UNDERSCORE) {\n\t\t\t\t\tthrow new Error(`underscore only allowed at start`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n\t\t\t\tthrow new Error(`invalid label extension`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Invalid label \"${label}\": ${err.message}`);\n\t\t}\n\t}\n\treturn name;\n}\n\nexport function ens_normalize(name: string): string {\n\treturn ens_normalize_post_check(normalize(name, filter_fe0f));\n}\n\nfunction normalize(name: string, emoji_filter: (a: Array<number>) => Array<number>): string {\n\tlet input = explode_cp(name).reverse(); // flip for pop\n\tlet output = [];\n\twhile (input.length) {\t\t\n\t\tlet emoji = consume_emoji_reversed(input);\n\t\tif (emoji) {\n\t\t\toutput.push(...emoji_filter(emoji));\n\t\t\tcontinue;\n\t\t}\n\t\tlet cp = input.pop();\n\t\tif (VALID.has(cp)) {\n\t\t\toutput.push(cp);\n\t\t\tcontinue;\n\t\t} \n\t\tif (IGNORED.has(cp)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet cps = MAPPED[cp];\n\t\tif (cps) {\n\t\t\toutput.push(...cps);\n\t\t\tcontinue;\n\t\t}\n\t\tthrow new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n\t}\n\treturn ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\n\nfunction nfc(s: string): string {\n    return s.normalize('NFC');\n}\n\nfunction consume_emoji_reversed(cps: Array<number>, eaten?: Array<number>) {\n\tlet node = EMOJI_ROOT;\n\tlet emoji;\n\tlet saved;\n\tlet stack = [];\n\tlet pos = cps.length;\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\n\twhile (pos) {\n\t\tlet cp = cps[--pos];\n\t\tnode = node.branches.find(x => x.set.has(cp))?.node;\n\t\tif (!node) break;\n\t\tif (node.save) { // remember\n\t\t\tsaved = cp;\n\t\t} else if (node.check) { // check exclusion\n\t\t\tif (cp === saved) break;\n\t\t}\n\t\tstack.push(cp);\n\t\tif (node.fe0f) {\n\t\t\tstack.push(0xFE0F);\n\t\t\tif (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F\n\t\t}\n\t\tif (node.valid) { // this is a valid emoji (so far)\n\t\t\temoji = stack.slice(); // copy stack\n\t\t\tif (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n\t\t\tcps.length = pos; // truncate\n\t\t}\n\t}\n\treturn emoji;\n}\n", "import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { ens_normalize } from \"./ens-normalize/lib\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    if (comp.length === 0) { throw new Error(\"invalid ENS name; empty component\"); }\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) { throw new Error(\"invalid ENS name; empty component\"); }\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\nexport function ensNormalize(name: string): string {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\n\nexport function isValidName(name: string): boolean {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n\n    return hexlify(result);\n}\n\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n", "import { Bytes, concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n\nexport function hashMessage(message: Bytes | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\n", "import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n", "\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n", "\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\"\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\n\nimport { AbiCoder, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, JsonFragment, ParamType } from \"./fragments\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport { checkResultErrors, Result };\n\nexport class LogDescription extends Description<LogDescription> {\n    readonly eventFragment: EventFragment;\n    readonly name: string;\n    readonly signature: string;\n    readonly topic: string;\n    readonly args: Result\n}\n\nexport class TransactionDescription extends Description<TransactionDescription> {\n    readonly functionFragment: FunctionFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n    readonly value: BigNumber;\n}\n\nexport class ErrorDescription extends Description<ErrorDescription> {\n    readonly errorFragment: ErrorFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n}\n\nexport class Indexed extends Description<Indexed> {\n    readonly hash: string;\n    readonly _isIndexed: boolean;\n\n    static isIndexed(value: any): value is Indexed {\n        return !!(value && value._isIndexed);\n    }\n}\n\nconst BuiltinErrors: Record<string, { signature: string, inputs: Array<string>, name: string, reason?: boolean }> = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [ \"string\" ], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [ \"uint256\" ] }\n}\n\nfunction wrapAccessError(property: string, error: Error): Error {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${ property }`);\n    (<any>wrap).error = error;\n    return wrap;\n}\n\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    readonly fragments: ReadonlyArray<Fragment>;\n\n    readonly errors: { [ name: string ]: ErrorFragment };\n    readonly events: { [ name: string ]: EventFragment };\n    readonly functions: { [ name: string ]: FunctionFragment };\n    readonly structs: { [ name: string ]: any };\n\n    readonly deploy: ConstructorFragment;\n\n    readonly _abiCoder: AbiCoder;\n\n    readonly _isInterface: boolean;\n\n    constructor(fragments: string | ReadonlyArray<Fragment | JsonFragment | string>) {\n        let abi: ReadonlyArray<Fragment | JsonFragment | string> = [ ];\n        if (typeof(fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        } else {\n            abi = fragments;\n        }\n\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n\n        defineReadOnly(this, \"_abiCoder\", getStatic<() => AbiCoder>(new.target, \"getAbiCoder\")());\n\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"errors\", { });\n        defineReadOnly(this, \"events\", { });\n        defineReadOnly(this, \"structs\", { });\n\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket: { [ name: string ]: Fragment } = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", <ConstructorFragment>fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n\n            bucket[signature] = fragment;\n        });\n\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n\n    format(format?: string): string | Array<string> {\n        if (!format) { format = FormatTypes.full; }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n             return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n\n        return abi;\n    }\n\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder(): AbiCoder {\n        return defaultAbiCoder;\n    }\n\n    static getAddress(address: string): string {\n        return getAddress(address);\n    }\n\n    static getSighash(fragment: ErrorFragment | FunctionFragment): string {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n\n    static getEventTopic(eventFragment: EventFragment): string {\n        return id(eventFragment.format());\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash: string): FunctionFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n\n            return this.functions[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic: string): EventFragment {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n\n            return this.events[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash: string): ErrorFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n\n            return this.errors[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment: ErrorFragment | FunctionFragment | string): string {\n        if (typeof(fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            } catch (error) {\n                try {\n                    fragment = this.getError(<string>fragment);\n                } catch (_) {\n                    throw error;\n                }\n            }\n        }\n\n        return getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\")(fragment);\n    }\n\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment: EventFragment | string): string {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        return getStatic<(e: EventFragment) => string>(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n\n\n    _decodeParams(params: ReadonlyArray<ParamType>, data: BytesLike): Result {\n        return this._abiCoder.decode(params, data)\n    }\n\n    _encodeParams(params: ReadonlyArray<ParamType>, values: ReadonlyArray<any>): string {\n        return this._abiCoder.encode(params, values)\n    }\n\n    encodeDeploy(values?: ReadonlyArray<any>): string {\n        return this._encodeParams(this.deploy.inputs, values || [ ]);\n    }\n\n    decodeErrorResult(fragment: ErrorFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${ fragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n\n    encodeErrorResult(fragment: ErrorFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${ functionFragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        let bytes = arrayify(data);\n\n        let reason: string = null;\n        let message = \"\";\n        let errorArgs: Result = null;\n        let errorName: string = null;\n        let errorSignature: string = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                } catch (error) { }\n                break;\n\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) { reason = errorArgs[0]; }\n                    if (errorName === \"Error\") {\n                        message = `; VM Exception while processing transaction: reverted with reason string ${ JSON.stringify(errorArgs[0]) }`;\n                    } else if (errorName === \"Panic\") {\n                        message = `; VM Exception while processing transaction: reverted with panic code ${ errorArgs[0] }`;\n                    }\n                } else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    } catch (error) { }\n                }\n                break;\n            }\n        }\n\n        return logger.throwError(\"call revert exception\" + message, Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            data: hexlify(data), errorArgs, errorName, errorSignature, reason\n        });\n    }\n\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || [ ]));\n    }\n\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment: EventFragment | string, values: ReadonlyArray<any>): Array<string | Array<string>> {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            })\n        }\n\n        let topics: Array<string | Array<string>> = [];\n        if (!eventFragment.anonymous) { topics.push(this.getEventTopic(eventFragment)); }\n\n        const encodeTopic = (param: ParamType, value: any): string => {\n            if (param.type === \"string\") {\n                 return id(value);\n            } else if (param.type === \"bytes\") {\n                 return keccak256(hexlify(value));\n            }\n\n            if (param.type === \"bool\" && typeof(value) === \"boolean\") {\n                value = (value ? \"0x01\": \"0x00\");\n            }\n\n            if (param.type.match(/^u?int/)) {\n                value = BigNumber.from(value).toHexString();\n            }\n\n            // Check addresses are valid\n            if (param.type === \"address\") { this._abiCoder.encode( [ \"address\" ], [ value ]); }\n            return hexZeroPad(hexlify(value), 32);\n        };\n\n        values.forEach((value, index) => {\n\n            let param = (<EventFragment>eventFragment).inputs[index];\n\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n\n        return topics;\n    }\n\n    encodeEventLog(eventFragment: EventFragment | string, values: ReadonlyArray<any>): { data: string, topics: Array<string> } {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        const topics: Array<string> = [ ];\n\n        const dataTypes: Array<ParamType> = [ ];\n        const dataValues: Array<string> = [ ];\n\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value))\n                } else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value))\n                } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                } else {\n                    topics.push(this._abiCoder.encode([ param.type] , [ value ]));\n                }\n            } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n\n        return {\n            data: this._abiCoder.encode(dataTypes , dataValues),\n            topics: topics\n        };\n    }\n\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment: EventFragment | string, data: BytesLike, topics?: ReadonlyArray<string>): Result {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n\n        let indexed: Array<ParamType> = [];\n        let nonIndexed: Array<ParamType> = [];\n        let dynamic: Array<boolean> = [];\n\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                } else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)): null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n\n        let result: (Array<any> & { [ key: string ]: any }) = [ ];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n\n                } else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n\n                } else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    } catch (error) {\n                        result[index] = error;\n                    }\n                }\n            } else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                } catch (error) {\n                    result[index] = error;\n                }\n            }\n\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${ JSON.stringify(param.name) }`, value); }\n                    });\n                } else {\n                    result[param.name] = value;\n                }\n            }\n        });\n\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${ i }`, value); }\n                });\n            }\n        }\n\n        return Object.freeze(result);\n    }\n\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx: { data: string, value?: BigNumberish }): TransactionDescription {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log: { topics: Array<string>, data: string}): LogDescription {\n        let fragment = this.getEvent(log.topics[0]);\n\n        if (!fragment || fragment.anonymous) { return null; }\n\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n\n\n       return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n\n    parseError(data: BytesLike): ErrorDescription {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n\n\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n\n    static isInterface(value: any): value is Interface {\n        return !!(value && value._isInterface);\n    }\n}\n\n", "\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n", "\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n", "export enum SupportedAlgorithm { sha256 = \"sha256\", sha512 = \"sha512\" };\n\n", "export const version = \"sha2/5.8.0\";\n", "export const version = \"strings/5.8.0\";\n", "\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n", "\"use strict\";\n\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\n\ntype Ranged = {\n    l: number,          // Lo value\n    h: number,          // High value (less the lo)\n    d?: number,         // Delta/stride (default: 1)\n    s?: number,         // Shift (default: 1)\n    e?: Array<number>   // Exceptions to skip\n};\n\ntype Table = { [ src: number ]: Array<number> };\n\nfunction bytes2(data: string): Array<number> {\n    if ((data.length % 4) !== 0) { throw new Error(\"bad data\"); }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\n\nfunction createTable(data: string, func?: (value: string) => Array<number>): Table {\n    if (!func) {\n        func = function(value: string) { return [ parseInt(value, 16) ]; }\n    }\n\n    let lo = 0;\n\n    let result: Table = { };\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n\n    return result;\n}\n\nfunction createRangeTable(data: string): Array<Ranged> {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        } else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\n\nfunction matchMap(value: number, ranges: Array<Ranged>): Ranged {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) { continue; }\n            return range;\n        }\n    }\n    return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\n\nconst Table_B_2_ranges: Array<Ranged> = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [ 23 ], l: 127 },\n    { h: 54, s: 1, e: [ 48 ], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [ 2, 6, 8 ], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [ 18, 24, 66 ], l: 19, d: 2 },\n    { h: 26, s: 32, e: [ 17 ], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [ 38 ], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [ 1, 4, 5, 7, 8, 11, 12, 17 ], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [ 2, 7, 8, 17 ], l: 52 },\n    { h: 24, s: -120023, e: [ 2, 7, 13, 15, 16, 17 ], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [ 17 ], l: 56 },\n    { h: 24, s: -119601, e: [ 17 ], l: 58 },\n    { h: 24, s: -119659, e: [ 17 ], l: 58 },\n    { h: 24, s: -119717, e: [ 17 ], l: 58 },\n    { h: 24, s: -119775, e: [ 17 ], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\n\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\n\nfunction flatten(values: Array<Array<number>>): Array<number> {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, [ ]);\n}\n\nexport function _nameprepTableA1(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nexport function _nameprepTableB2(codepoint: number): Array<number> {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) { return [ codepoint + range.s ]; }\n\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) { return codes; }\n\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) { return [ codepoint + shift[0] ]; }\n\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) { return complex; }\n\n    return null;\n}\n\nexport function _nameprepTableC(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\n\nexport function nameprep(value: string): string {\n\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) { return value.toLowerCase(); }\n\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) { return [ ]; }\n        if (code >= 0xfe00 && code <= 0xfe0f) { return [ ]; }\n\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) { return codesTableB2; }\n\n        // No Substitution\n        return [ code ];\n    }));\n\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n\n    // IDNA extras\n    let name = _toUtf8String(codes);\n\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n\n    return name;\n}\n\n", "export const version = \"solidity/5.8.0\";\n", "\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\n\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nfunction _pack(type: string, value: any, isArray?: boolean): Uint8Array {\n    switch(type) {\n        case \"address\":\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\": \"0x00\");\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n    }\n\n    let match =  type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\")\n\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type)\n        }\n\n        if (isArray) { size = 256; }\n\n        value = BigNumber.from(value).toTwos(size);\n\n        return zeroPad(value, size / 8);\n    }\n\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type)\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${ type }`, \"value\", value)\n        }\n        if (isArray) { return arrayify((value + Zeros).substring(0, 66)); }\n        return value;\n    }\n\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${ type }`, \"value\", value)\n        }\n        const result: Array<Uint8Array> = [];\n        value.forEach(function(value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n\n    return logger.throwArgumentError(\"invalid type\", \"type\", type)\n}\n\n// @TODO: Array Enum\n\nexport function pack(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values)\n    }\n    const tight: Array<Uint8Array> = [];\n    types.forEach(function(type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\n\nexport function keccak256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashKeccak256(pack(types, values));\n}\n\nexport function sha256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashSha256(pack(types, values));\n}\n"],
  "mappings": "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",
  "names": ["r", "r", "r", "require_common", "require__", "require__", "require__", "r", "require__", "r", "hash", "hash", "version", "logger", "version", "logger", "version", "signed", "version", "logger", "version", "UnicodeNormalizationForm", "Utf8ErrorReason", "logger", "logger", "version", "logger", "parent", "node", "result", "logger", "logger", "version", "sha3", "version", "logger", "version", "UnicodeNormalizationForm", "Utf8ErrorReason", "errorFunc", "logger", "ignoreFunc", "Utf8ErrorReason", "replaceFunc", "Utf8ErrorFuncs", "getUtf8CodePoints", "toUtf8Bytes", "UnicodeNormalizationForm", "toUtf8CodePoints", "UnicodeNormalizationForm", "getUtf8CodePoints", "toUtf8Bytes", "bytes2", "createTable", "createRangeTable", "Table_A_1_ranges", "createRangeTable", "Table_B_1_flags", "Table_B_2_lut_abs", "createTable", "Table_B_2_lut_rel", "Table_B_2_complex", "bytes2", "Table_C_ranges", "createRangeTable", "toUtf8Bytes", "version", "depth", "toUtf8CodePoints", "logger", "version", "toUtf8Bytes", "logger", "toUtf8Bytes", "logger", "version", "NegativeOne", "Zero", "One", "MaxUint256", "signed", "name", "type", "value", "import_js_sha3", "keccak256", "sha3", "logger", "version", "logger", "keccak256", "value", "import_js_sha3", "keccak256", "sha3", "import_hash", "SupportedAlgorithm", "version", "logger", "version", "hash", "version", "logger", "version", "UnicodeNormalizationForm", "Utf8ErrorReason", "errorFunc", "logger", "ignoreFunc", "Utf8ErrorReason", "replaceFunc", "Utf8ErrorFuncs", "toUtf8Bytes", "UnicodeNormalizationForm", "logger", "bytes2", "createTable", "createRangeTable", "Table_A_1_ranges", "createRangeTable", "Table_B_1_flags", "Table_B_2_lut_abs", "createTable", "Table_B_2_lut_rel", "Table_B_2_complex", "bytes2", "Table_C_ranges", "createRangeTable", "version", "Zeros", "logger", "version", "toUtf8Bytes", "value", "pack", "keccak256", "sha256"]
}
