{"version":3,"file":"universal-router-sdk.cjs.development.js","sources":["../src/utils/routerCommands.ts","../src/utils/pathCurrency.ts","../src/entities/Command.ts","../src/utils/constants.ts","../src/utils/getCurrencyAddress.ts","../src/utils/numbers.ts","../src/entities/actions/uniswap.ts","../src/utils/inputTokens.ts","../src/swapRouter.ts","../src/entities/actions/unwrapWETH.ts","../src/utils/routerTradeAdapter.ts","../src/utils/commandParser.ts"],"sourcesContent":["import { defaultAbiCoder } from 'ethers/lib/utils'\n\n/**\n * CommandTypes\n * @description Flags that modify a command's execution\n * @enum {number}\n */\nexport enum CommandType {\n  V3_SWAP_EXACT_IN = 0x00,\n  V3_SWAP_EXACT_OUT = 0x01,\n  PERMIT2_TRANSFER_FROM = 0x02,\n  PERMIT2_PERMIT_BATCH = 0x03,\n  SWEEP = 0x04,\n  TRANSFER = 0x05,\n  PAY_PORTION = 0x06,\n\n  V2_SWAP_EXACT_IN = 0x08,\n  V2_SWAP_EXACT_OUT = 0x09,\n  PERMIT2_PERMIT = 0x0a,\n  WRAP_ETH = 0x0b,\n  UNWRAP_WETH = 0x0c,\n  PERMIT2_TRANSFER_FROM_BATCH = 0x0d,\n  BALANCE_CHECK_ERC20 = 0x0e,\n\n  V4_SWAP = 0x10,\n  V3_POSITION_MANAGER_PERMIT = 0x11,\n  V3_POSITION_MANAGER_CALL = 0x12,\n  V4_INITIALIZE_POOL = 0x13,\n  V4_POSITION_MANAGER_CALL = 0x14,\n\n  EXECUTE_SUB_PLAN = 0x21,\n}\n\nexport enum Subparser {\n  V3PathExactIn,\n  V3PathExactOut,\n}\n\nexport enum Parser {\n  Abi,\n  V4Actions,\n  V3Actions,\n}\n\nexport type ParamType = {\n  readonly name: string\n  readonly type: string\n  readonly subparser?: Subparser\n}\n\nexport type CommandDefinition =\n  | {\n      parser: Parser.Abi\n      params: ParamType[]\n    }\n  | {\n      parser: Parser.V4Actions\n    }\n  | {\n      parser: Parser.V3Actions\n    }\n\nconst ALLOW_REVERT_FLAG = 0x80\nconst REVERTIBLE_COMMANDS = new Set<CommandType>([CommandType.EXECUTE_SUB_PLAN])\n\nconst PERMIT_STRUCT =\n  '((address token,uint160 amount,uint48 expiration,uint48 nonce) details,address spender,uint256 sigDeadline)'\n\nconst PERMIT_BATCH_STRUCT =\n  '((address token,uint160 amount,uint48 expiration,uint48 nonce)[] details,address spender,uint256 sigDeadline)'\n\nconst POOL_KEY_STRUCT = '(address currency0,address currency1,uint24 fee,int24 tickSpacing,address hooks)'\n\nconst PERMIT2_TRANSFER_FROM_STRUCT = '(address from,address to,uint160 amount,address token)'\nconst PERMIT2_TRANSFER_FROM_BATCH_STRUCT = PERMIT2_TRANSFER_FROM_STRUCT + '[]'\n\nexport const COMMAND_DEFINITION: { [key in CommandType]: CommandDefinition } = {\n  // Batch Reverts\n  [CommandType.EXECUTE_SUB_PLAN]: {\n    parser: Parser.Abi,\n    params: [\n      { name: 'commands', type: 'bytes' },\n      { name: 'inputs', type: 'bytes[]' },\n    ],\n  },\n\n  // Permit2 Actions\n  [CommandType.PERMIT2_PERMIT]: {\n    parser: Parser.Abi,\n    params: [\n      { name: 'permit', type: PERMIT_STRUCT },\n      { name: 'signature', type: 'bytes' },\n    ],\n  },\n  [CommandType.PERMIT2_PERMIT_BATCH]: {\n    parser: Parser.Abi,\n    params: [\n      { name: 'permit', type: PERMIT_BATCH_STRUCT },\n      { name: 'signature', type: 'bytes' },\n    ],\n  },\n  [CommandType.PERMIT2_TRANSFER_FROM]: {\n    parser: Parser.Abi,\n    params: [\n      { name: 'token', type: 'address' },\n      { name: 'recipient', type: 'address' },\n      { name: 'amount', type: 'uint160' },\n    ],\n  },\n  [CommandType.PERMIT2_TRANSFER_FROM_BATCH]: {\n    parser: Parser.Abi,\n    params: [\n      {\n        name: 'transferFrom',\n        type: PERMIT2_TRANSFER_FROM_BATCH_STRUCT,\n      },\n    ],\n  },\n\n  // Uniswap Actions\n  [CommandType.V3_SWAP_EXACT_IN]: {\n    parser: Parser.Abi,\n    params: [\n      { name: 'recipient', type: 'address' },\n      { name: 'amountIn', type: 'uint256' },\n      { name: 'amountOutMin', type: 'uint256' },\n      { name: 'path', subparser: Subparser.V3PathExactIn, type: 'bytes' },\n      { name: 'payerIsUser', type: 'bool' },\n    ],\n  },\n  [CommandType.V3_SWAP_EXACT_OUT]: {\n    parser: Parser.Abi,\n    params: [\n      { name: 'recipient', type: 'address' },\n      { name: 'amountOut', type: 'uint256' },\n      { name: 'amountInMax', type: 'uint256' },\n      { name: 'path', subparser: Subparser.V3PathExactOut, type: 'bytes' },\n      { name: 'payerIsUser', type: 'bool' },\n    ],\n  },\n  [CommandType.V2_SWAP_EXACT_IN]: {\n    parser: Parser.Abi,\n    params: [\n      { name: 'recipient', type: 'address' },\n      { name: 'amountIn', type: 'uint256' },\n      { name: 'amountOutMin', type: 'uint256' },\n      { name: 'path', type: 'address[]' },\n      { name: 'payerIsUser', type: 'bool' },\n    ],\n  },\n  [CommandType.V2_SWAP_EXACT_OUT]: {\n    parser: Parser.Abi,\n    params: [\n      { name: 'recipient', type: 'address' },\n      { name: 'amountOut', type: 'uint256' },\n      { name: 'amountInMax', type: 'uint256' },\n      { name: 'path', type: 'address[]' },\n      { name: 'payerIsUser', type: 'bool' },\n    ],\n  },\n  [CommandType.V4_SWAP]: { parser: Parser.V4Actions },\n\n  // Token Actions and Checks\n  [CommandType.WRAP_ETH]: {\n    parser: Parser.Abi,\n    params: [\n      { name: 'recipient', type: 'address' },\n      { name: 'amount', type: 'uint256' },\n    ],\n  },\n  [CommandType.UNWRAP_WETH]: {\n    parser: Parser.Abi,\n    params: [\n      { name: 'recipient', type: 'address' },\n      { name: 'amountMin', type: 'uint256' },\n    ],\n  },\n  [CommandType.SWEEP]: {\n    parser: Parser.Abi,\n    params: [\n      { name: 'token', type: 'address' },\n      { name: 'recipient', type: 'address' },\n      { name: 'amountMin', type: 'uint256' },\n    ],\n  },\n  [CommandType.TRANSFER]: {\n    parser: Parser.Abi,\n    params: [\n      { name: 'token', type: 'address' },\n      { name: 'recipient', type: 'address' },\n      { name: 'value', type: 'uint256' },\n    ],\n  },\n  [CommandType.PAY_PORTION]: {\n    parser: Parser.Abi,\n    params: [\n      { name: 'token', type: 'address' },\n      { name: 'recipient', type: 'address' },\n      { name: 'bips', type: 'uint256' },\n    ],\n  },\n  [CommandType.BALANCE_CHECK_ERC20]: {\n    parser: Parser.Abi,\n    params: [\n      { name: 'owner', type: 'address' },\n      { name: 'token', type: 'address' },\n      { name: 'minBalance', type: 'uint256' },\n    ],\n  },\n  [CommandType.V4_INITIALIZE_POOL]: {\n    parser: Parser.Abi,\n    params: [\n      { name: 'poolKey', type: POOL_KEY_STRUCT },\n      { name: 'sqrtPriceX96', type: 'uint160' },\n    ],\n  },\n\n  // Position Actions\n  [CommandType.V3_POSITION_MANAGER_PERMIT]: { parser: Parser.V3Actions },\n  [CommandType.V3_POSITION_MANAGER_CALL]: { parser: Parser.V3Actions },\n  [CommandType.V4_POSITION_MANAGER_CALL]: { parser: Parser.V4Actions },\n}\n\nexport class RoutePlanner {\n  commands: string\n  inputs: string[]\n\n  constructor() {\n    this.commands = '0x'\n    this.inputs = []\n  }\n\n  addSubPlan(subplan: RoutePlanner): RoutePlanner {\n    this.addCommand(CommandType.EXECUTE_SUB_PLAN, [subplan.commands, subplan.inputs], true)\n    return this\n  }\n\n  addCommand(type: CommandType, parameters: any[], allowRevert = false): RoutePlanner {\n    let command = createCommand(type, parameters)\n    this.inputs.push(command.encodedInput)\n    if (allowRevert) {\n      if (!REVERTIBLE_COMMANDS.has(command.type)) {\n        throw new Error(`command type: ${command.type} cannot be allowed to revert`)\n      }\n      command.type = command.type | ALLOW_REVERT_FLAG\n    }\n\n    this.commands = this.commands.concat(command.type.toString(16).padStart(2, '0'))\n    return this\n  }\n}\n\nexport type RouterCommand = {\n  type: CommandType\n  encodedInput: string\n}\n\nexport function createCommand(type: CommandType, parameters: any[]): RouterCommand {\n  const commandDef = COMMAND_DEFINITION[type]\n  switch (commandDef.parser) {\n    case Parser.Abi:\n      const encodedInput = defaultAbiCoder.encode(\n        commandDef.params.map((abi) => abi.type),\n        parameters\n      )\n      return { type, encodedInput }\n    case Parser.V4Actions:\n      // v4 swap data comes pre-encoded at index 0\n      return { type, encodedInput: parameters[0] }\n    case Parser.V3Actions:\n      // v4 swap data comes pre-encoded at index 0\n      return { type, encodedInput: parameters[0] }\n  }\n}\n","import { Currency, Token } from '@uniswap/sdk-core'\nimport { Pool as V4Pool } from '@uniswap/v4-sdk'\nimport { TPool } from '@uniswap/router-sdk'\n\nexport function getPathCurrency(currency: Currency, pool: TPool): Currency {\n  // return currency if the currency matches a currency of the pool\n  if (pool.involvesToken(currency as Token)) {\n    return currency\n\n    // return if currency.wrapped if pool involves wrapped currency\n  } else if (pool.involvesToken(currency.wrapped as Token)) {\n    return currency.wrapped\n\n    // return native currency if pool involves native version of wrapped currency (only applies to V4)\n  } else if (pool instanceof V4Pool && pool.token0.wrapped.equals(currency)) {\n    return pool.token0\n  } else if (pool instanceof V4Pool && pool.token1.wrapped.equals(currency)) {\n    return pool.token1\n  } else {\n    throw new Error(`Expected currency ${currency.symbol} to be either ${pool.token0.symbol} or ${pool.token1.symbol}`)\n  }\n\n  return currency // this line needed for typescript to compile\n}\n","import { RoutePlanner } from '../utils/routerCommands'\n\nexport type TradeConfig = {\n  allowRevert: boolean\n}\n\nexport enum RouterActionType {\n  UniswapTrade = 'UniswapTrade',\n  UnwrapWETH = 'UnwrapWETH',\n}\n\n// interface for entities that can be encoded as a Universal Router command\nexport interface Command {\n  tradeType: RouterActionType\n  encode(planner: RoutePlanner, config: TradeConfig): void\n}\n","import { BigNumber } from 'ethers'\n\nexport enum UniversalRouterVersion {\n  V1_2 = '1.2',\n  V2_0 = '2.0',\n}\n\nexport type RouterConfig = {\n  address: string\n  creationBlock: number\n}\n\ntype ChainConfig = {\n  weth: string\n  routerConfigs: { [key in UniversalRouterVersion]: RouterConfig }\n}\n\nconst WETH_NOT_SUPPORTED_ON_CHAIN = '0x0000000000000000000000000000000000000000'\n\n// Todo: Change `CHAIN_CONFIGS` to pull the UR address with v4\nexport const CHAIN_CONFIGS: { [key: number]: ChainConfig } = {\n  // mainnet\n  [1]: {\n    weth: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD',\n        creationBlock: 17143817,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x66a9893cc07d91d95644aedd05d03f95e1dba8af',\n        creationBlock: 1737658355,\n      },\n    },\n  },\n  // goerli\n  [5]: {\n    weth: '0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD',\n        creationBlock: 8940568,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD',\n        creationBlock: 8940568,\n      },\n    },\n  },\n  // sepolia\n  [11155111]: {\n    weth: '0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD',\n        creationBlock: 3543575,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x3a9d48ab9751398bbfa63ad67599bb04e4bdf98b', // only update here and creation block below\n        creationBlock: 7259601,\n      },\n    },\n  },\n  // polygon\n  [137]: {\n    weth: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0xec7BE89e9d109e7e3Fec59c222CF297125FEFda2',\n        creationBlock: 52210153,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x1095692a6237d83c6a72f3f5efedb9a670c49223',\n        creationBlock: 1737492197,\n      },\n    },\n  },\n  //polygon mumbai\n  [80001]: {\n    weth: '0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD',\n        creationBlock: 35176052,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD',\n        creationBlock: 35176052,\n      },\n    },\n  },\n  //optimism\n  [10]: {\n    weth: '0x4200000000000000000000000000000000000006',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0xCb1355ff08Ab38bBCE60111F1bb2B784bE25D7e8',\n        creationBlock: 114702266,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x851116d9223fabed8e56c0e6b8ad0c31d98b3507',\n        creationBlock: 1737494278,\n      },\n    },\n  },\n  // optimism goerli\n  [420]: {\n    weth: '0x4200000000000000000000000000000000000006',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD',\n        creationBlock: 8887728,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD',\n        creationBlock: 8887728,\n      },\n    },\n  },\n  // arbitrum\n  [42161]: {\n    weth: '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x5E325eDA8064b456f4781070C0738d849c824258',\n        creationBlock: 169472836,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0xa51afafe0263b40edaef0df8781ea9aa03e381a3',\n        creationBlock: 1737487458,\n      },\n    },\n  },\n  // arbitrum goerli\n  [421613]: {\n    weth: '0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD',\n        creationBlock: 18815277,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD',\n        creationBlock: 18815277,\n      },\n    },\n  },\n  // celo\n  [42220]: {\n    weth: WETH_NOT_SUPPORTED_ON_CHAIN,\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x643770e279d5d0733f21d6dc03a8efbabf3255b4',\n        creationBlock: 21407637,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x643770e279d5d0733f21d6dc03a8efbabf3255b4',\n        creationBlock: 21407637,\n      },\n    },\n  },\n  // celo alfajores\n  [44787]: {\n    weth: WETH_NOT_SUPPORTED_ON_CHAIN,\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD',\n        creationBlock: 17566658,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD',\n        creationBlock: 17566658,\n      },\n    },\n  },\n  // binance smart chain\n  [56]: {\n    weth: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x4Dae2f939ACf50408e13d58534Ff8c2776d45265',\n        creationBlock: 35160263,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x1906c1d672b88cd1b9ac7593301ca990f94eae07',\n        creationBlock: 1737493275,\n      },\n    },\n  },\n  // avalanche\n  [43114]: {\n    weth: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x4Dae2f939ACf50408e13d58534Ff8c2776d45265',\n        creationBlock: 40237257,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x94b75331ae8d42c1b61065089b7d48fe14aa73b7',\n        creationBlock: 1737558236,\n      },\n    },\n  },\n  // base goerli\n  [84531]: {\n    weth: '0x4200000000000000000000000000000000000006',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0xd0872d928672ae2ff74bdb2f5130ac12229cafaf',\n        creationBlock: 6915289,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0xd0872d928672ae2ff74bdb2f5130ac12229cafaf',\n        creationBlock: 6915289,\n      },\n    },\n  },\n  // base mainnet\n  [8453]: {\n    weth: '0x4200000000000000000000000000000000000006',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD',\n        creationBlock: 9107268,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x6ff5693b99212da76ad316178a184ab56d299b43',\n        creationBlock: 1737491485,\n      },\n    },\n  },\n  // blast\n  [81457]: {\n    weth: '0x4300000000000000000000000000000000000004',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x643770E279d5D0733F21d6DC03A8efbABf3255B4',\n        creationBlock: 1116444,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0xeabbcb3e8e415306207ef514f660a3f820025be3',\n        creationBlock: 1737564586,\n      },\n    },\n  },\n  // zora\n  [7777777]: {\n    weth: '0x4200000000000000000000000000000000000006',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x2986d9721A49838ab4297b695858aF7F17f38014',\n        creationBlock: 11832155,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x3315ef7ca28db74abadc6c44570efdf06b04b020',\n        creationBlock: 1737562927,\n      },\n    },\n  },\n  [324]: {\n    weth: '0x5aea5775959fbc2557cc8789bc1bf90a239d9a91',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x28731BCC616B5f51dD52CF2e4dF0E78dD1136C06',\n        creationBlock: 12640979,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x28731BCC616B5f51dD52CF2e4dF0E78dD1136C06',\n        creationBlock: 12640979,\n      },\n    },\n  },\n  // worldchain\n  [480]: {\n    weth: '0x4200000000000000000000000000000000000006',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D',\n        creationBlock: 4063979,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x8ac7bee993bb44dab564ea4bc9ea67bf9eb5e743',\n        creationBlock: 1737559557,\n      },\n    },\n  },\n  [1301]: {\n    weth: '0x4200000000000000000000000000000000000006',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6',\n        creationBlock: 1241811,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0xf70536b3bcc1bd1a972dc186a2cf84cc6da6be5d',\n        creationBlock: 7100543,\n      },\n    },\n  },\n  // unichain mainnet\n  [130]: {\n    weth: '0x4200000000000000000000000000000000000006',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x4D73A4411CA1c660035e4AECC8270E5DdDEC8C17',\n        creationBlock: 23678,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0xef740bf23acae26f6492b10de645d6b98dc8eaf3',\n        creationBlock: 1737568156,\n      },\n    },\n  },\n  [10143]: {\n    weth: '0x760AfE86e5de5fa0Ee542fc7B7B713e1c5425701',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x3ae6d8a282d67893e17aa70ebffb33ee5aa65893',\n        creationBlock: 23678,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x3ae6d8a282d67893e17aa70ebffb33ee5aa65893',\n        creationBlock: 23678,\n      },\n    },\n  },\n  [84532]: {\n    weth: '0x4200000000000000000000000000000000000006',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x492e6456d9528771018deb9e87ef7750ef184104',\n        creationBlock: 20216585,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x492e6456d9528771018deb9e87ef7750ef184104',\n        creationBlock: 20216585,\n      },\n    },\n  },\n  [1868]: {\n    weth: '0x4200000000000000000000000000000000000006',\n    routerConfigs: {\n      [UniversalRouterVersion.V1_2]: {\n        address: '0x0e2850543f69f678257266e0907ff9a58b3f13de',\n        creationBlock: 3254782,\n      },\n      [UniversalRouterVersion.V2_0]: {\n        address: '0x0e2850543f69f678257266e0907ff9a58b3f13de',\n        creationBlock: 3254782,\n      },\n    },\n  },\n}\n\nexport const UNIVERSAL_ROUTER_ADDRESS = (version: UniversalRouterVersion, chainId: number): string => {\n  if (!(chainId in CHAIN_CONFIGS)) throw new Error(`Universal Router not deployed on chain ${chainId}`)\n  return CHAIN_CONFIGS[chainId].routerConfigs[version].address\n}\n\nexport const UNIVERSAL_ROUTER_CREATION_BLOCK = (version: UniversalRouterVersion, chainId: number): number => {\n  if (!(chainId in CHAIN_CONFIGS)) throw new Error(`Universal Router not deployed on chain ${chainId}`)\n  return CHAIN_CONFIGS[chainId].routerConfigs[version].creationBlock\n}\n\nexport const WETH_ADDRESS = (chainId: number): string => {\n  if (!(chainId in CHAIN_CONFIGS)) throw new Error(`Universal Router not deployed on chain ${chainId}`)\n\n  if (CHAIN_CONFIGS[chainId].weth == WETH_NOT_SUPPORTED_ON_CHAIN) throw new Error(`Chain ${chainId} does not have WETH`)\n\n  return CHAIN_CONFIGS[chainId].weth\n}\n\nexport const CONTRACT_BALANCE = BigNumber.from(2).pow(255)\nexport const ETH_ADDRESS = '0x0000000000000000000000000000000000000000'\nexport const E_ETH_ADDRESS = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\nexport const MAX_UINT256 = BigNumber.from(2).pow(256).sub(1)\nexport const MAX_UINT160 = BigNumber.from(2).pow(160).sub(1)\n\nexport const SENDER_AS_RECIPIENT = '0x0000000000000000000000000000000000000001'\nexport const ROUTER_AS_RECIPIENT = '0x0000000000000000000000000000000000000002'\n","import { Currency } from '@uniswap/sdk-core'\nimport { ETH_ADDRESS } from './constants'\n\nexport function getCurrencyAddress(currency: Currency): string {\n  return currency.isNative ? ETH_ADDRESS : currency.wrapped.address\n}\n","import { BigNumber } from 'ethers'\nimport JSBI from 'jsbi'\nimport bn from 'bignumber.js'\nimport { Percent } from '@uniswap/sdk-core'\nimport { toHex } from '@uniswap/v3-sdk'\n\nexport function expandTo18DecimalsBN(n: number): BigNumber {\n  // use bn intermediately to allow decimals in intermediate calculations\n  return BigNumber.from(new bn(n).times(new bn(10).pow(18)).toFixed())\n}\n\nexport function expandTo18Decimals(n: number): JSBI {\n  return JSBI.BigInt(BigNumber.from(n).mul(BigNumber.from(10).pow(18)).toString())\n}\n\nexport function encodeFeeBips(fee: Percent): string {\n  return toHex(fee.multiply(10_000).quotient)\n}\n","import { RoutePlanner, CommandType } from '../../utils/routerCommands'\nimport { Trade as V2Trade, Pair } from '@uniswap/v2-sdk'\nimport { Trade as V3Trade, Pool as V3Pool, encodeRouteToPath } from '@uniswap/v3-sdk'\nimport {\n  Route as V4Route,\n  Trade as V4Trade,\n  Pool as V4Pool,\n  V4Planner,\n  encodeRouteToPath as encodeV4RouteToPath,\n  Actions,\n} from '@uniswap/v4-sdk'\nimport {\n  Trade as RouterTrade,\n  MixedRouteTrade,\n  Protocol,\n  IRoute,\n  RouteV2,\n  RouteV3,\n  MixedRouteSDK,\n  MixedRoute,\n  SwapOptions as RouterSwapOptions,\n  getOutputOfPools,\n  encodeMixedRouteToPath,\n  partitionMixedRouteByProtocol,\n} from '@uniswap/router-sdk'\nimport { Permit2Permit } from '../../utils/inputTokens'\nimport { getPathCurrency } from '../../utils/pathCurrency'\nimport { Currency, TradeType, Token, CurrencyAmount, Percent } from '@uniswap/sdk-core'\nimport { Command, RouterActionType, TradeConfig } from '../Command'\nimport { SENDER_AS_RECIPIENT, ROUTER_AS_RECIPIENT, CONTRACT_BALANCE, ETH_ADDRESS } from '../../utils/constants'\nimport { getCurrencyAddress } from '../../utils/getCurrencyAddress'\nimport { encodeFeeBips } from '../../utils/numbers'\nimport { BigNumber, BigNumberish } from 'ethers'\nimport { TPool } from '@uniswap/router-sdk'\n\nexport type FlatFeeOptions = {\n  amount: BigNumberish\n  recipient: string\n}\n\n// the existing router permit object doesn't include enough data for permit2\n// so we extend swap options with the permit2 permit\n// when safe mode is enabled, the SDK will add an extra ETH sweep for security\n// when useRouterBalance is enabled the SDK will use the balance in the router for the swap\nexport type SwapOptions = Omit<RouterSwapOptions, 'inputTokenPermit'> & {\n  useRouterBalance?: boolean\n  inputTokenPermit?: Permit2Permit\n  flatFee?: FlatFeeOptions\n  safeMode?: boolean\n}\n\nconst REFUND_ETH_PRICE_IMPACT_THRESHOLD = new Percent(50, 100)\n\ninterface Swap<TInput extends Currency, TOutput extends Currency> {\n  route: IRoute<TInput, TOutput, TPool>\n  inputAmount: CurrencyAmount<TInput>\n  outputAmount: CurrencyAmount<TOutput>\n}\n\n// Wrapper for uniswap router-sdk trade entity to encode swaps for Universal Router\n// also translates trade objects from previous (v2, v3) SDKs\nexport class UniswapTrade implements Command {\n  readonly tradeType: RouterActionType = RouterActionType.UniswapTrade\n  readonly payerIsUser: boolean\n\n  constructor(public trade: RouterTrade<Currency, Currency, TradeType>, public options: SwapOptions) {\n    if (!!options.fee && !!options.flatFee) throw new Error('Only one fee option permitted')\n\n    if (this.inputRequiresWrap || this.inputRequiresUnwrap || this.options.useRouterBalance) {\n      this.payerIsUser = false\n    } else {\n      this.payerIsUser = true\n    }\n  }\n\n  get isAllV4(): boolean {\n    let result = true\n    for (const swap of this.trade.swaps) {\n      result = result && swap.route.protocol == Protocol.V4\n    }\n    return result\n  }\n\n  get inputRequiresWrap(): boolean {\n    if (this.isAllV4) {\n      return (\n        this.trade.inputAmount.currency.isNative &&\n        !(this.trade.swaps[0].route as unknown as V4Route<Currency, Currency>).pathInput.isNative\n      )\n    } else {\n      return this.trade.inputAmount.currency.isNative\n    }\n  }\n\n  get inputRequiresUnwrap(): boolean {\n    if (this.isAllV4) {\n      return (\n        !this.trade.inputAmount.currency.isNative &&\n        (this.trade.swaps[0].route as unknown as V4Route<Currency, Currency>).pathInput.isNative\n      )\n    }\n    return false\n  }\n\n  get outputRequiresWrap(): boolean {\n    if (this.isAllV4) {\n      return (\n        !this.trade.outputAmount.currency.isNative &&\n        (this.trade.swaps[0].route as unknown as V4Route<Currency, Currency>).pathOutput.isNative\n      )\n    }\n    return false\n  }\n\n  get outputRequiresUnwrap(): boolean {\n    if (this.isAllV4) {\n      return (\n        this.trade.outputAmount.currency.isNative &&\n        !(this.trade.swaps[0].route as unknown as V4Route<Currency, Currency>).pathOutput.isNative\n      )\n    } else {\n      return this.trade.outputAmount.currency.isNative\n    }\n  }\n\n  get outputRequiresTransition(): boolean {\n    return this.outputRequiresWrap || this.outputRequiresUnwrap\n  }\n\n  encode(planner: RoutePlanner, _config: TradeConfig): void {\n    // If the input currency is the native currency, we need to wrap it with the router as the recipient\n    if (this.inputRequiresWrap) {\n      // TODO: optimize if only one v2 pool we can directly send this to the pool\n      planner.addCommand(CommandType.WRAP_ETH, [\n        ROUTER_AS_RECIPIENT,\n        this.trade.maximumAmountIn(this.options.slippageTolerance).quotient.toString(),\n      ])\n    } else if (this.inputRequiresUnwrap) {\n      // send wrapped token to router to unwrap\n      planner.addCommand(CommandType.PERMIT2_TRANSFER_FROM, [\n        (this.trade.inputAmount.currency as Token).address,\n        ROUTER_AS_RECIPIENT,\n        this.trade.maximumAmountIn(this.options.slippageTolerance).quotient.toString(),\n      ])\n      planner.addCommand(CommandType.UNWRAP_WETH, [ROUTER_AS_RECIPIENT, 0])\n    }\n    // The overall recipient at the end of the trade, SENDER_AS_RECIPIENT uses the msg.sender\n    this.options.recipient = this.options.recipient ?? SENDER_AS_RECIPIENT\n\n    // flag for whether we want to perform slippage check on aggregate output of multiple routes\n    //   1. when there are >2 exact input trades. this is only a heuristic,\n    //      as it's still more gas-expensive even in this case, but has benefits\n    //      in that the reversion probability is lower\n    const performAggregatedSlippageCheck =\n      this.trade.tradeType === TradeType.EXACT_INPUT && this.trade.routes.length > 2\n    const routerMustCustody =\n      performAggregatedSlippageCheck || this.outputRequiresTransition || hasFeeOption(this.options)\n\n    for (const swap of this.trade.swaps) {\n      switch (swap.route.protocol) {\n        case Protocol.V2:\n          addV2Swap(planner, swap, this.trade.tradeType, this.options, this.payerIsUser, routerMustCustody)\n          break\n        case Protocol.V3:\n          addV3Swap(planner, swap, this.trade.tradeType, this.options, this.payerIsUser, routerMustCustody)\n          break\n        case Protocol.V4:\n          addV4Swap(planner, swap, this.trade.tradeType, this.options, this.payerIsUser, routerMustCustody)\n          break\n        case Protocol.MIXED:\n          addMixedSwap(planner, swap, this.trade.tradeType, this.options, this.payerIsUser, routerMustCustody)\n          break\n        default:\n          throw new Error('UNSUPPORTED_TRADE_PROTOCOL')\n      }\n    }\n\n    let minimumAmountOut: BigNumber = BigNumber.from(\n      this.trade.minimumAmountOut(this.options.slippageTolerance).quotient.toString()\n    )\n    // The router custodies for 3 reasons: to unwrap, to take a fee, and/or to do a slippage check\n    if (routerMustCustody) {\n      const pools = this.trade.swaps[0].route.pools\n      const pathOutputCurrencyAddress = getCurrencyAddress(\n        getPathCurrency(this.trade.outputAmount.currency, pools[pools.length - 1])\n      )\n\n      // If there is a fee, that percentage is sent to the fee recipient\n      // In the case where ETH is the output currency, the fee is taken in WETH (for gas reasons)\n      if (!!this.options.fee) {\n        const feeBips = encodeFeeBips(this.options.fee.fee)\n        planner.addCommand(CommandType.PAY_PORTION, [pathOutputCurrencyAddress, this.options.fee.recipient, feeBips])\n\n        // If the trade is exact output, and a fee was taken, we must adjust the amount out to be the amount after the fee\n        // Otherwise we continue as expected with the trade's normal expected output\n        if (this.trade.tradeType === TradeType.EXACT_OUTPUT) {\n          minimumAmountOut = minimumAmountOut.sub(minimumAmountOut.mul(feeBips).div(10000))\n        }\n      }\n\n      // If there is a flat fee, that absolute amount is sent to the fee recipient\n      // In the case where ETH is the output currency, the fee is taken in WETH (for gas reasons)\n      if (!!this.options.flatFee) {\n        const feeAmount = this.options.flatFee.amount\n        if (minimumAmountOut.lt(feeAmount)) throw new Error('Flat fee amount greater than minimumAmountOut')\n\n        planner.addCommand(CommandType.TRANSFER, [pathOutputCurrencyAddress, this.options.flatFee.recipient, feeAmount])\n\n        // If the trade is exact output, and a fee was taken, we must adjust the amount out to be the amount after the fee\n        // Otherwise we continue as expected with the trade's normal expected output\n        if (this.trade.tradeType === TradeType.EXACT_OUTPUT) {\n          minimumAmountOut = minimumAmountOut.sub(feeAmount)\n        }\n      }\n\n      // The remaining tokens that need to be sent to the user after the fee is taken will be caught\n      // by this if-else clause.\n      if (this.outputRequiresUnwrap) {\n        planner.addCommand(CommandType.UNWRAP_WETH, [this.options.recipient, minimumAmountOut])\n      } else if (this.outputRequiresWrap) {\n        planner.addCommand(CommandType.WRAP_ETH, [this.options.recipient, CONTRACT_BALANCE])\n      } else {\n        planner.addCommand(CommandType.SWEEP, [\n          getCurrencyAddress(this.trade.outputAmount.currency),\n          this.options.recipient,\n          minimumAmountOut,\n        ])\n      }\n    }\n\n    // for exactOutput swaps with native input or that perform an inputToken transition (wrap or unwrap)\n    // we need to send back the change to the user\n    if (this.trade.tradeType === TradeType.EXACT_OUTPUT || riskOfPartialFill(this.trade)) {\n      if (this.inputRequiresWrap) {\n        planner.addCommand(CommandType.UNWRAP_WETH, [this.options.recipient, 0])\n      } else if (this.inputRequiresUnwrap) {\n        planner.addCommand(CommandType.WRAP_ETH, [this.options.recipient, CONTRACT_BALANCE])\n      } else if (this.trade.inputAmount.currency.isNative) {\n        // must refund extra native currency sent along for native v4 trades (no input transition)\n        planner.addCommand(CommandType.SWEEP, [ETH_ADDRESS, this.options.recipient, 0])\n      }\n    }\n\n    if (this.options.safeMode) planner.addCommand(CommandType.SWEEP, [ETH_ADDRESS, this.options.recipient, 0])\n  }\n}\n\n// encode a uniswap v2 swap\nfunction addV2Swap<TInput extends Currency, TOutput extends Currency>(\n  planner: RoutePlanner,\n  { route, inputAmount, outputAmount }: Swap<TInput, TOutput>,\n  tradeType: TradeType,\n  options: SwapOptions,\n  payerIsUser: boolean,\n  routerMustCustody: boolean\n): void {\n  const trade = new V2Trade(\n    route as RouteV2<TInput, TOutput>,\n    tradeType == TradeType.EXACT_INPUT ? inputAmount : outputAmount,\n    tradeType\n  )\n\n  if (tradeType == TradeType.EXACT_INPUT) {\n    planner.addCommand(CommandType.V2_SWAP_EXACT_IN, [\n      // if native, we have to unwrap so keep in the router for now\n      routerMustCustody ? ROUTER_AS_RECIPIENT : options.recipient,\n      trade.maximumAmountIn(options.slippageTolerance).quotient.toString(),\n      // if router will custody funds, we do aggregated slippage check from router\n      routerMustCustody ? 0 : trade.minimumAmountOut(options.slippageTolerance).quotient.toString(),\n      route.path.map((token) => token.wrapped.address),\n      payerIsUser,\n    ])\n  } else if (tradeType == TradeType.EXACT_OUTPUT) {\n    planner.addCommand(CommandType.V2_SWAP_EXACT_OUT, [\n      routerMustCustody ? ROUTER_AS_RECIPIENT : options.recipient,\n      trade.minimumAmountOut(options.slippageTolerance).quotient.toString(),\n      trade.maximumAmountIn(options.slippageTolerance).quotient.toString(),\n      route.path.map((token) => token.wrapped.address),\n      payerIsUser,\n    ])\n  }\n}\n\n// encode a uniswap v3 swap\nfunction addV3Swap<TInput extends Currency, TOutput extends Currency>(\n  planner: RoutePlanner,\n  { route, inputAmount, outputAmount }: Swap<TInput, TOutput>,\n  tradeType: TradeType,\n  options: SwapOptions,\n  payerIsUser: boolean,\n  routerMustCustody: boolean\n): void {\n  const trade = V3Trade.createUncheckedTrade({\n    route: route as RouteV3<TInput, TOutput>,\n    inputAmount,\n    outputAmount,\n    tradeType,\n  })\n\n  const path = encodeRouteToPath(route as RouteV3<TInput, TOutput>, trade.tradeType === TradeType.EXACT_OUTPUT)\n  if (tradeType == TradeType.EXACT_INPUT) {\n    planner.addCommand(CommandType.V3_SWAP_EXACT_IN, [\n      routerMustCustody ? ROUTER_AS_RECIPIENT : options.recipient,\n      trade.maximumAmountIn(options.slippageTolerance).quotient.toString(),\n      routerMustCustody ? 0 : trade.minimumAmountOut(options.slippageTolerance).quotient.toString(),\n      path,\n      payerIsUser,\n    ])\n  } else if (tradeType == TradeType.EXACT_OUTPUT) {\n    planner.addCommand(CommandType.V3_SWAP_EXACT_OUT, [\n      routerMustCustody ? ROUTER_AS_RECIPIENT : options.recipient,\n      trade.minimumAmountOut(options.slippageTolerance).quotient.toString(),\n      trade.maximumAmountIn(options.slippageTolerance).quotient.toString(),\n      path,\n      payerIsUser,\n    ])\n  }\n}\n\nfunction addV4Swap<TInput extends Currency, TOutput extends Currency>(\n  planner: RoutePlanner,\n  { inputAmount, outputAmount, route }: Swap<TInput, TOutput>,\n  tradeType: TradeType,\n  options: SwapOptions,\n  payerIsUser: boolean,\n  routerMustCustody: boolean\n): void {\n  // create a deep copy of pools since v4Planner encoding tampers with array\n  const pools = route.pools.map((p) => p) as V4Pool[]\n  const v4Route = new V4Route(pools, inputAmount.currency, outputAmount.currency)\n  const trade = V4Trade.createUncheckedTrade({\n    route: v4Route,\n    inputAmount,\n    outputAmount,\n    tradeType,\n  })\n\n  const slippageToleranceOnSwap =\n    routerMustCustody && tradeType == TradeType.EXACT_INPUT ? undefined : options.slippageTolerance\n\n  const v4Planner = new V4Planner()\n  v4Planner.addTrade(trade, slippageToleranceOnSwap)\n  v4Planner.addSettle(trade.route.pathInput, payerIsUser)\n  v4Planner.addTake(\n    trade.route.pathOutput,\n    routerMustCustody ? ROUTER_AS_RECIPIENT : options.recipient ?? SENDER_AS_RECIPIENT\n  )\n  planner.addCommand(CommandType.V4_SWAP, [v4Planner.finalize()])\n}\n\n// encode a mixed route swap, i.e. including both v2 and v3 pools\nfunction addMixedSwap<TInput extends Currency, TOutput extends Currency>(\n  planner: RoutePlanner,\n  swap: Swap<TInput, TOutput>,\n  tradeType: TradeType,\n  options: SwapOptions,\n  payerIsUser: boolean,\n  routerMustCustody: boolean\n): void {\n  const route = swap.route as MixedRoute<TInput, TOutput>\n  const inputAmount = swap.inputAmount\n  const outputAmount = swap.outputAmount\n  const tradeRecipient = routerMustCustody ? ROUTER_AS_RECIPIENT : options.recipient ?? SENDER_AS_RECIPIENT\n\n  // single hop, so it can be reduced to plain swap logic for one protocol version\n  if (route.pools.length === 1) {\n    if (route.pools[0] instanceof V4Pool) {\n      return addV4Swap(planner, swap, tradeType, options, payerIsUser, routerMustCustody)\n    } else if (route.pools[0] instanceof V3Pool) {\n      return addV3Swap(planner, swap, tradeType, options, payerIsUser, routerMustCustody)\n    } else if (route.pools[0] instanceof Pair) {\n      return addV2Swap(planner, swap, tradeType, options, payerIsUser, routerMustCustody)\n    } else {\n      throw new Error('Invalid route type')\n    }\n  }\n\n  const trade = MixedRouteTrade.createUncheckedTrade({\n    route: route as MixedRoute<TInput, TOutput>,\n    inputAmount,\n    outputAmount,\n    tradeType,\n  })\n\n  const amountIn = trade.maximumAmountIn(options.slippageTolerance, inputAmount).quotient.toString()\n  const amountOut = routerMustCustody\n    ? 0\n    : trade.minimumAmountOut(options.slippageTolerance, outputAmount).quotient.toString()\n\n  // logic from\n  // https://github.com/Uniswap/router-sdk/blob/d8eed164e6c79519983844ca8b6a3fc24ebcb8f8/src/swapRouter.ts#L276\n  const sections = partitionMixedRouteByProtocol(route as MixedRoute<TInput, TOutput>)\n  const isLastSectionInRoute = (i: number) => {\n    return i === sections.length - 1\n  }\n\n  let inputToken = route.pathInput\n\n  for (let i = 0; i < sections.length; i++) {\n    const section = sections[i]\n    const routePool = section[0]\n    const outputToken = getOutputOfPools(section, inputToken)\n    const subRoute = new MixedRoute(new MixedRouteSDK([...section], inputToken, outputToken))\n\n    let nextInputToken\n    let swapRecipient\n\n    if (isLastSectionInRoute(i)) {\n      nextInputToken = outputToken\n      swapRecipient = tradeRecipient\n    } else {\n      const nextPool = sections[i + 1][0]\n      nextInputToken = getPathCurrency(outputToken, nextPool)\n\n      const v2PoolIsSwapRecipient = nextPool instanceof Pair && outputToken.equals(nextInputToken)\n      swapRecipient = v2PoolIsSwapRecipient ? (nextPool as Pair).liquidityToken.address : ROUTER_AS_RECIPIENT\n    }\n\n    if (routePool instanceof V4Pool) {\n      const v4Planner = new V4Planner()\n      const v4SubRoute = new V4Route(section as V4Pool[], subRoute.input, subRoute.output)\n\n      v4Planner.addSettle(inputToken, payerIsUser && i === 0, (i == 0 ? amountIn : CONTRACT_BALANCE) as BigNumber)\n      v4Planner.addAction(Actions.SWAP_EXACT_IN, [\n        {\n          currencyIn: inputToken.isNative ? ETH_ADDRESS : inputToken.address,\n          path: encodeV4RouteToPath(v4SubRoute),\n          amountIn: 0, // denotes open delta, amount set in v4Planner.addSettle()\n          amountOutMinimum: !isLastSectionInRoute(i) ? 0 : amountOut,\n        },\n      ])\n      v4Planner.addTake(outputToken, swapRecipient)\n\n      planner.addCommand(CommandType.V4_SWAP, [v4Planner.finalize()])\n    } else if (routePool instanceof V3Pool) {\n      planner.addCommand(CommandType.V3_SWAP_EXACT_IN, [\n        swapRecipient, // recipient\n        i == 0 ? amountIn : CONTRACT_BALANCE, // amountIn\n        !isLastSectionInRoute(i) ? 0 : amountOut, // amountOut\n        encodeMixedRouteToPath(subRoute), // path\n        payerIsUser && i === 0, // payerIsUser\n      ])\n    } else if (routePool instanceof Pair) {\n      planner.addCommand(CommandType.V2_SWAP_EXACT_IN, [\n        swapRecipient, // recipient\n        i === 0 ? amountIn : CONTRACT_BALANCE, // amountIn\n        !isLastSectionInRoute(i) ? 0 : amountOut, // amountOutMin\n        subRoute.path.map((token) => token.wrapped.address), // path\n        payerIsUser && i === 0,\n      ])\n    } else {\n      throw new Error('Unexpected Pool Type')\n    }\n\n    // perform a token transition (wrap/unwrap if necessary)\n    if (!isLastSectionInRoute(i)) {\n      if (outputToken.isNative && !nextInputToken.isNative) {\n        planner.addCommand(CommandType.WRAP_ETH, [ROUTER_AS_RECIPIENT, CONTRACT_BALANCE])\n      } else if (!outputToken.isNative && nextInputToken.isNative) {\n        planner.addCommand(CommandType.UNWRAP_WETH, [ROUTER_AS_RECIPIENT, 0])\n      }\n    }\n\n    inputToken = nextInputToken\n  }\n}\n\n// if price impact is very high, there's a chance of hitting max/min prices resulting in a partial fill of the swap\nfunction riskOfPartialFill(trade: RouterTrade<Currency, Currency, TradeType>): boolean {\n  return trade.priceImpact.greaterThan(REFUND_ETH_PRICE_IMPACT_THRESHOLD)\n}\n\nfunction hasFeeOption(swapOptions: SwapOptions): boolean {\n  return !!swapOptions.fee || !!swapOptions.flatFee\n}\n","import invariant from 'tiny-invariant'\nimport { ethers } from 'ethers'\nimport { validateAndParseAddress, BigintIsh } from '@uniswap/sdk-core'\nimport { NFTPermitOptions, NonfungiblePositionManager } from '@uniswap/v3-sdk'\nimport { PermitSingle } from '@uniswap/permit2-sdk'\nimport { CommandType, RoutePlanner } from './routerCommands'\nimport { ROUTER_AS_RECIPIENT } from './constants'\n\nexport interface Permit2Permit extends PermitSingle {\n  signature: string\n}\n\nexport type ApproveProtocol = {\n  token: string\n  protocol: string\n}\n\nexport type Permit2TransferFrom = {\n  token: string\n  amount: string\n  recipient?: string\n}\n\nexport type InputTokenOptions = {\n  permit2Permit?: Permit2Permit\n  permit2TransferFrom?: Permit2TransferFrom\n}\n\nconst SIGNATURE_LENGTH = 65\nconst EIP_2098_SIGNATURE_LENGTH = 64\n\nexport function encodePermit(planner: RoutePlanner, permit2: Permit2Permit): void {\n  let signature = permit2.signature\n\n  const length = ethers.utils.arrayify(permit2.signature).length\n  // signature data provided for EIP-1271 may have length different from ECDSA signature\n  if (length === SIGNATURE_LENGTH || length === EIP_2098_SIGNATURE_LENGTH) {\n    // sanitizes signature to cover edge cases of malformed EIP-2098 sigs and v used as recovery id\n    signature = ethers.utils.joinSignature(ethers.utils.splitSignature(permit2.signature))\n  }\n\n  planner.addCommand(CommandType.PERMIT2_PERMIT, [permit2, signature])\n}\n\nexport function encodeV3PositionPermit(planner: RoutePlanner, permit: NFTPermitOptions, tokenId: BigintIsh): void {\n  const calldata = NonfungiblePositionManager.INTERFACE.encodeFunctionData('permit', [\n    validateAndParseAddress(permit.spender),\n    tokenId,\n    permit.deadline,\n    permit.v,\n    permit.r,\n    permit.s,\n  ])\n\n  planner.addCommand(CommandType.V3_POSITION_MANAGER_PERMIT, [calldata])\n}\n\n// Handles the encoding of commands needed to gather input tokens for a trade\n// Approval: The router approving another address to take tokens.\n//   note: Only seaport and sudoswap support this action. Approvals are left open.\n// Permit: A Permit2 signature-based Permit to allow the router to access a user's tokens\n// Transfer: A Permit2 TransferFrom of tokens from a user to either the router or another address\nexport function encodeInputTokenOptions(planner: RoutePlanner, options: InputTokenOptions) {\n  // first ensure that all tokens provided for encoding are the same\n  if (!!options.permit2TransferFrom && !!options.permit2Permit)\n    invariant(options.permit2TransferFrom.token === options.permit2Permit.details.token, `inconsistent token`)\n\n  // if this order has a options.permit2Permit, encode it\n  if (!!options.permit2Permit) {\n    encodePermit(planner, options.permit2Permit)\n  }\n\n  if (!!options.permit2TransferFrom) {\n    planner.addCommand(CommandType.PERMIT2_TRANSFER_FROM, [\n      options.permit2TransferFrom.token,\n      options.permit2TransferFrom.recipient ? options.permit2TransferFrom.recipient : ROUTER_AS_RECIPIENT,\n      options.permit2TransferFrom.amount,\n    ])\n  }\n}\n","import invariant from 'tiny-invariant'\nimport UniversalRouter from '@uniswap/universal-router/artifacts/contracts/UniversalRouter.sol/UniversalRouter.json'\nimport { Interface } from '@ethersproject/abi'\nimport { BigNumber, BigNumberish } from 'ethers'\nimport {\n  MethodParameters,\n  Multicall,\n  Position as V3Position,\n  NonfungiblePositionManager as V3PositionManager,\n  RemoveLiquidityOptions as V3RemoveLiquidityOptions,\n} from '@uniswap/v3-sdk'\nimport {\n  Position as V4Position,\n  V4PositionManager,\n  AddLiquidityOptions as V4AddLiquidityOptions,\n  MintOptions,\n  Pool as V4Pool,\n  PoolKey,\n} from '@uniswap/v4-sdk'\nimport { Trade as RouterTrade } from '@uniswap/router-sdk'\nimport { Currency, TradeType, Percent, CHAIN_TO_ADDRESSES_MAP, SupportedChainsType } from '@uniswap/sdk-core'\nimport { UniswapTrade, SwapOptions } from './entities/actions/uniswap'\nimport { RoutePlanner, CommandType } from './utils/routerCommands'\nimport { encodePermit, encodeV3PositionPermit } from './utils/inputTokens'\nimport { UNIVERSAL_ROUTER_ADDRESS, UniversalRouterVersion } from './utils/constants'\n\nexport type SwapRouterConfig = {\n  sender?: string // address\n  deadline?: BigNumberish\n}\n\nexport interface MigrateV3ToV4Options {\n  inputPosition: V3Position\n  outputPosition: V4Position\n  v3RemoveLiquidityOptions: V3RemoveLiquidityOptions\n  v4AddLiquidityOptions: V4AddLiquidityOptions\n}\n\nfunction isMint(options: V4AddLiquidityOptions): options is MintOptions {\n  return Object.keys(options).some((k) => k === 'recipient')\n}\n\nexport abstract class SwapRouter {\n  public static INTERFACE: Interface = new Interface(UniversalRouter.abi)\n\n  public static swapCallParameters(\n    trades: RouterTrade<Currency, Currency, TradeType>,\n    options: SwapOptions\n  ): MethodParameters {\n    // TODO: use permit if signature included in swapOptions\n    const planner = new RoutePlanner()\n\n    const trade: UniswapTrade = new UniswapTrade(trades, options)\n\n    const inputCurrency = trade.trade.inputAmount.currency\n    invariant(!(inputCurrency.isNative && !!options.inputTokenPermit), 'NATIVE_INPUT_PERMIT')\n\n    if (options.inputTokenPermit) {\n      encodePermit(planner, options.inputTokenPermit)\n    }\n\n    const nativeCurrencyValue = inputCurrency.isNative\n      ? BigNumber.from(trade.trade.maximumAmountIn(options.slippageTolerance).quotient.toString())\n      : BigNumber.from(0)\n\n    trade.encode(planner, { allowRevert: false })\n    return SwapRouter.encodePlan(planner, nativeCurrencyValue, {\n      deadline: options.deadlineOrPreviousBlockhash ? BigNumber.from(options.deadlineOrPreviousBlockhash) : undefined,\n    })\n  }\n\n  /**\n   * Builds the call parameters for a migration from a V3 position to a V4 position.\n   * Some requirements of the parameters:\n   *   - v3RemoveLiquidityOptions.collectOptions.recipient must equal v4PositionManager\n   *   - v3RemoveLiquidityOptions.liquidityPercentage must be 100%\n   *   - input pool and output pool must have the same tokens\n   *   - V3 NFT must be approved, or valid inputV3NFTPermit must be provided with UR as spender\n   */\n  public static migrateV3ToV4CallParameters(\n    options: MigrateV3ToV4Options,\n    positionManagerOverride?: string\n  ): MethodParameters {\n    const v4Pool: V4Pool = options.outputPosition.pool\n    const v3Token0 = options.inputPosition.pool.token0\n    const v3Token1 = options.inputPosition.pool.token1\n    const v4PositionManagerAddress =\n      positionManagerOverride ?? CHAIN_TO_ADDRESSES_MAP[v4Pool.chainId as SupportedChainsType].v4PositionManagerAddress\n\n    // owner of the v3 nft must be the receiver of the v4 nft\n\n    // validate the parameters\n    if (v4Pool.currency0.isNative) {\n      invariant(\n        (v4Pool.currency0.wrapped.equals(v3Token0) && v4Pool.currency1.equals(v3Token1)) ||\n          (v4Pool.currency0.wrapped.equals(v3Token1) && v4Pool.currency1.equals(v3Token0)),\n        'TOKEN_MISMATCH'\n      )\n    } else {\n      invariant(v3Token0 === v4Pool.token0, 'TOKEN0_MISMATCH')\n      invariant(v3Token1 === v4Pool.token1, 'TOKEN1_MISMATCH')\n    }\n\n    invariant(\n      options.v3RemoveLiquidityOptions.liquidityPercentage.equalTo(new Percent(100, 100)),\n      'FULL_REMOVAL_REQUIRED'\n    )\n    invariant(options.v3RemoveLiquidityOptions.burnToken == true, 'BURN_TOKEN_REQUIRED')\n    invariant(\n      options.v3RemoveLiquidityOptions.collectOptions.recipient === v4PositionManagerAddress,\n      'RECIPIENT_NOT_POSITION_MANAGER'\n    )\n    invariant(isMint(options.v4AddLiquidityOptions), 'MINT_REQUIRED')\n    invariant(options.v4AddLiquidityOptions.migrate, 'MIGRATE_REQUIRED')\n\n    const planner = new RoutePlanner()\n\n    // to prevent reentrancy by the pool hook, we initialize the v4 pool before moving funds\n    if (options.v4AddLiquidityOptions.createPool) {\n      const poolKey: PoolKey = V4Pool.getPoolKey(\n        v4Pool.currency0,\n        v4Pool.currency1,\n        v4Pool.fee,\n        v4Pool.tickSpacing,\n        v4Pool.hooks\n      )\n      planner.addCommand(CommandType.V4_INITIALIZE_POOL, [poolKey, v4Pool.sqrtRatioX96.toString()])\n      // remove createPool setting, so that it doesnt get encoded again later\n      delete options.v4AddLiquidityOptions.createPool\n    }\n\n    // add position permit to the universal router planner\n    if (options.v3RemoveLiquidityOptions.permit) {\n      // permit spender should be UR\n      const universalRouterAddress = UNIVERSAL_ROUTER_ADDRESS(\n        UniversalRouterVersion.V2_0,\n        options.inputPosition.pool.chainId as SupportedChainsType\n      )\n      invariant(universalRouterAddress == options.v3RemoveLiquidityOptions.permit.spender, 'INVALID_SPENDER')\n      // don't need to transfer it because v3posm uses isApprovedOrOwner()\n      encodeV3PositionPermit(planner, options.v3RemoveLiquidityOptions.permit, options.v3RemoveLiquidityOptions.tokenId)\n      // remove permit so that multicall doesnt add it again\n      delete options.v3RemoveLiquidityOptions.permit\n    }\n\n    // encode v3 withdraw\n    const v3RemoveParams: MethodParameters = V3PositionManager.removeCallParameters(\n      options.inputPosition,\n      options.v3RemoveLiquidityOptions\n    )\n    const v3Calls: string[] = Multicall.decodeMulticall(v3RemoveParams.calldata)\n\n    for (const v3Call of v3Calls) {\n      // slice selector - 0x + 4 bytes = 10 characters\n      const selector = v3Call.slice(0, 10)\n      invariant(\n        selector == V3PositionManager.INTERFACE.getSighash('collect') ||\n          selector == V3PositionManager.INTERFACE.getSighash('decreaseLiquidity') ||\n          selector == V3PositionManager.INTERFACE.getSighash('burn'),\n        'INVALID_V3_CALL: ' + selector\n      )\n      planner.addCommand(CommandType.V3_POSITION_MANAGER_CALL, [v3Call])\n    }\n\n    // encode v4 mint\n    const v4AddParams = V4PositionManager.addCallParameters(options.outputPosition, options.v4AddLiquidityOptions)\n    // only modifyLiquidities can be called by the UniversalRouter\n    const selector = v4AddParams.calldata.slice(0, 10)\n    invariant(selector == V4PositionManager.INTERFACE.getSighash('modifyLiquidities'), 'INVALID_V4_CALL: ' + selector)\n\n    planner.addCommand(CommandType.V4_POSITION_MANAGER_CALL, [v4AddParams.calldata])\n\n    return SwapRouter.encodePlan(planner, BigNumber.from(0), {\n      deadline: BigNumber.from(options.v4AddLiquidityOptions.deadline),\n    })\n  }\n\n  /**\n   * Encodes a planned route into a method name and parameters for the Router contract.\n   * @param planner the planned route\n   * @param nativeCurrencyValue the native currency value of the planned route\n   * @param config the router config\n   */\n  private static encodePlan(\n    planner: RoutePlanner,\n    nativeCurrencyValue: BigNumber,\n    config: SwapRouterConfig = {}\n  ): MethodParameters {\n    const { commands, inputs } = planner\n    const functionSignature = !!config.deadline ? 'execute(bytes,bytes[],uint256)' : 'execute(bytes,bytes[])'\n    const parameters = !!config.deadline ? [commands, inputs, config.deadline] : [commands, inputs]\n    const calldata = SwapRouter.INTERFACE.encodeFunctionData(functionSignature, parameters)\n    return { calldata, value: nativeCurrencyValue.toHexString() }\n  }\n}\n","import invariant from 'tiny-invariant'\nimport { BigNumberish } from 'ethers'\nimport { RoutePlanner, CommandType } from '../../utils/routerCommands'\nimport { encodeInputTokenOptions, Permit2Permit } from '../../utils/inputTokens'\nimport { Command, RouterActionType, TradeConfig } from '../Command'\nimport { ROUTER_AS_RECIPIENT, WETH_ADDRESS } from '../../utils/constants'\n\nexport class UnwrapWETH implements Command {\n  readonly tradeType: RouterActionType = RouterActionType.UnwrapWETH\n  readonly permit2Data?: Permit2Permit\n  readonly wethAddress: string\n  readonly amount: BigNumberish\n\n  constructor(amount: BigNumberish, chainId: number, permit2?: Permit2Permit) {\n    this.wethAddress = WETH_ADDRESS(chainId)\n    this.amount = amount\n\n    if (!!permit2) {\n      invariant(\n        permit2.details.token.toLowerCase() === this.wethAddress.toLowerCase(),\n        `must be permitting WETH address: ${this.wethAddress}`\n      )\n      invariant(permit2.details.amount >= amount, `Did not permit enough WETH for unwrapWETH transaction`)\n      this.permit2Data = permit2\n    }\n  }\n\n  encode(planner: RoutePlanner, _: TradeConfig): void {\n    encodeInputTokenOptions(planner, {\n      permit2Permit: this.permit2Data,\n      permit2TransferFrom: {\n        token: this.wethAddress,\n        amount: this.amount.toString(),\n      },\n    })\n    planner.addCommand(CommandType.UNWRAP_WETH, [ROUTER_AS_RECIPIENT, this.amount])\n  }\n}\n","import { MixedRouteSDK, Trade as RouterTrade } from '@uniswap/router-sdk'\nimport { Currency, CurrencyAmount, Ether, Token, TradeType } from '@uniswap/sdk-core'\nimport { Pair, Route as V2Route } from '@uniswap/v2-sdk'\nimport { Pool as V3Pool, Route as V3Route, FeeAmount } from '@uniswap/v3-sdk'\nimport { Pool as V4Pool, Route as V4Route } from '@uniswap/v4-sdk'\nimport { BigNumber } from 'ethers'\nimport { ETH_ADDRESS, E_ETH_ADDRESS } from './constants'\n\nexport type TokenInRoute = {\n  address: string\n  chainId: number\n  symbol: string\n  decimals: string\n  name?: string\n  buyFeeBps?: string\n  sellFeeBps?: string\n}\n\nexport enum PoolType {\n  V2Pool = 'v2-pool',\n  V3Pool = 'v3-pool',\n  V4Pool = 'v4-pool',\n}\n\nexport type V2Reserve = {\n  token: TokenInRoute\n  quotient: string\n}\n\nexport type V2PoolInRoute = {\n  type: PoolType.V2Pool\n  address?: string\n  tokenIn: TokenInRoute\n  tokenOut: TokenInRoute\n  reserve0: V2Reserve\n  reserve1: V2Reserve\n  amountIn?: string\n  amountOut?: string\n}\n\nexport type V3PoolInRoute = {\n  type: PoolType.V3Pool\n  address?: string\n  tokenIn: TokenInRoute\n  tokenOut: TokenInRoute\n  sqrtRatioX96: string\n  liquidity: string\n  tickCurrent: string\n  fee: string\n  amountIn?: string\n  amountOut?: string\n}\n\nexport type V4PoolInRoute = {\n  type: PoolType.V4Pool\n  address?: string\n  tokenIn: TokenInRoute\n  tokenOut: TokenInRoute\n  fee: string\n  tickSpacing: string\n  hooks: string\n  liquidity: string\n  sqrtRatioX96: string\n  tickCurrent: string\n  amountIn?: string\n  amountOut?: string\n}\n\nexport type PartialClassicQuote = {\n  // We need tokenIn/Out to support native currency\n  tokenIn: string\n  tokenOut: string\n  tradeType: TradeType\n  route: Array<(V4PoolInRoute | V3PoolInRoute | V2PoolInRoute)[]>\n}\n\ninterface RouteResult {\n  routev4: V4Route<Currency, Currency> | null\n  routev3: V3Route<Currency, Currency> | null\n  routev2: V2Route<Currency, Currency> | null\n  mixedRoute: MixedRouteSDK<Currency, Currency> | null\n  inputAmount: CurrencyAmount<Currency>\n  outputAmount: CurrencyAmount<Currency>\n}\n\nexport const isNativeCurrency = (address: string) =>\n  address.toLowerCase() === ETH_ADDRESS.toLowerCase() || address.toLowerCase() === E_ETH_ADDRESS.toLowerCase()\n\n// Helper class to convert routing-specific quote entities to RouterTrade entities\n// the returned RouterTrade can then be used to build the UniswapTrade entity in this package\nexport class RouterTradeAdapter {\n  // Generate a RouterTrade using fields from a classic quote response\n  static fromClassicQuote(quote: PartialClassicQuote) {\n    const { route, tokenIn, tokenOut } = quote\n\n    if (!route) throw new Error('Expected route to be present')\n    if (!route.length) throw new Error('Expected there to be at least one route')\n    if (route.some((r) => !r.length)) throw new Error('Expected all routes to have at least one pool')\n    const firstRoute = route[0]\n\n    const tokenInData = firstRoute[0].tokenIn\n    const tokenOutData = firstRoute[firstRoute.length - 1].tokenOut\n\n    if (!tokenInData || !tokenOutData) throw new Error('Expected both tokenIn and tokenOut to be present')\n    if (tokenInData.chainId !== tokenOutData.chainId)\n      throw new Error('Expected tokenIn and tokenOut to be have same chainId')\n\n    const parsedCurrencyIn = RouterTradeAdapter.toCurrency(isNativeCurrency(tokenIn), tokenInData)\n    const parsedCurrencyOut = RouterTradeAdapter.toCurrency(isNativeCurrency(tokenOut), tokenOutData)\n\n    const typedRoutes: RouteResult[] = route.map((subRoute) => {\n      const rawAmountIn = subRoute[0].amountIn\n      const rawAmountOut = subRoute[subRoute.length - 1].amountOut\n\n      if (!rawAmountIn || !rawAmountOut) {\n        throw new Error('Expected both raw amountIn and raw amountOut to be present')\n      }\n\n      const inputAmount = CurrencyAmount.fromRawAmount(parsedCurrencyIn, rawAmountIn)\n      const outputAmount = CurrencyAmount.fromRawAmount(parsedCurrencyOut, rawAmountOut)\n\n      const isOnlyV2 = RouterTradeAdapter.isVersionedRoute<V2PoolInRoute>(PoolType.V2Pool, subRoute)\n      const isOnlyV3 = RouterTradeAdapter.isVersionedRoute<V3PoolInRoute>(PoolType.V3Pool, subRoute)\n      const isOnlyV4 = RouterTradeAdapter.isVersionedRoute<V4PoolInRoute>(PoolType.V4Pool, subRoute)\n      return {\n        routev4: isOnlyV4\n          ? new V4Route(\n              (subRoute as V4PoolInRoute[]).map(RouterTradeAdapter.toV4Pool),\n              parsedCurrencyIn,\n              parsedCurrencyOut\n            )\n          : null,\n        routev3: isOnlyV3\n          ? new V3Route(\n              (subRoute as V3PoolInRoute[]).map(RouterTradeAdapter.toV3Pool),\n              parsedCurrencyIn,\n              parsedCurrencyOut\n            )\n          : null,\n        routev2: isOnlyV2\n          ? new V2Route(\n              (subRoute as V2PoolInRoute[]).map(RouterTradeAdapter.toPair),\n              parsedCurrencyIn,\n              parsedCurrencyOut\n            )\n          : null,\n        mixedRoute:\n          !isOnlyV4 && !isOnlyV3 && !isOnlyV2\n            ? new MixedRouteSDK(subRoute.map(RouterTradeAdapter.toPoolOrPair), parsedCurrencyIn, parsedCurrencyOut)\n            : null,\n        inputAmount,\n        outputAmount,\n      }\n    })\n\n    return new RouterTrade({\n      v2Routes: typedRoutes\n        .filter((route) => route.routev2)\n        .map((route) => ({\n          routev2: route.routev2 as V2Route<Currency, Currency>,\n          inputAmount: route.inputAmount,\n          outputAmount: route.outputAmount,\n        })),\n      v3Routes: typedRoutes\n        .filter((route) => route.routev3)\n        .map((route) => ({\n          routev3: route.routev3 as V3Route<Currency, Currency>,\n          inputAmount: route.inputAmount,\n          outputAmount: route.outputAmount,\n        })),\n      v4Routes: typedRoutes\n        .filter((route) => route.routev4)\n        .map((route) => ({\n          routev4: route.routev4 as V4Route<Currency, Currency>,\n          inputAmount: route.inputAmount,\n          outputAmount: route.outputAmount,\n        })),\n      mixedRoutes: typedRoutes\n        .filter((route) => route.mixedRoute)\n        .map((route) => ({\n          mixedRoute: route.mixedRoute as MixedRouteSDK<Currency, Currency>,\n          inputAmount: route.inputAmount,\n          outputAmount: route.outputAmount,\n        })),\n      tradeType: quote.tradeType,\n    })\n  }\n\n  private static toCurrency(isNative: boolean, token: TokenInRoute): Currency {\n    if (isNative) {\n      return Ether.onChain(token.chainId)\n    }\n    return this.toToken(token)\n  }\n\n  private static toPoolOrPair = (pool: V4PoolInRoute | V3PoolInRoute | V2PoolInRoute): V4Pool | V3Pool | Pair => {\n    switch (pool.type) {\n      case PoolType.V4Pool:\n        return RouterTradeAdapter.toV4Pool(pool)\n      case PoolType.V3Pool:\n        return RouterTradeAdapter.toV3Pool(pool)\n      case PoolType.V2Pool:\n        return RouterTradeAdapter.toPair(pool)\n      default:\n        throw new Error('Invalid pool type')\n    }\n  }\n\n  private static toToken(token: TokenInRoute): Token {\n    const { chainId, address, decimals, symbol, buyFeeBps, sellFeeBps } = token\n    return new Token(\n      chainId,\n      address,\n      parseInt(decimals.toString()),\n      symbol,\n      /* name */ undefined,\n      false,\n      buyFeeBps ? BigNumber.from(buyFeeBps) : undefined,\n      sellFeeBps ? BigNumber.from(sellFeeBps) : undefined\n    )\n  }\n\n  private static toV3Pool({ fee, sqrtRatioX96, liquidity, tickCurrent, tokenIn, tokenOut }: V3PoolInRoute): V3Pool {\n    return new V3Pool(\n      RouterTradeAdapter.toToken(tokenIn),\n      RouterTradeAdapter.toToken(tokenOut),\n      parseInt(fee) as FeeAmount,\n      sqrtRatioX96,\n      liquidity,\n      parseInt(tickCurrent)\n    )\n  }\n\n  private static toV4Pool(pool: V4PoolInRoute): V4Pool {\n    const parsedCurrencyIn = RouterTradeAdapter.toCurrency(isNativeCurrency(pool.tokenIn.address), pool.tokenIn)\n    const parsedCurrencyOut = RouterTradeAdapter.toCurrency(isNativeCurrency(pool.tokenOut.address), pool.tokenOut)\n    return new V4Pool(\n      parsedCurrencyIn,\n      parsedCurrencyOut,\n      parseInt(pool.fee) as FeeAmount,\n      parseInt(pool.tickSpacing),\n      pool.hooks,\n      pool.sqrtRatioX96,\n      pool.liquidity,\n      parseInt(pool.tickCurrent)\n    )\n  }\n\n  private static toPair = ({ reserve0, reserve1 }: V2PoolInRoute): Pair => {\n    return new Pair(\n      CurrencyAmount.fromRawAmount(RouterTradeAdapter.toToken(reserve0.token), reserve0.quotient),\n      CurrencyAmount.fromRawAmount(RouterTradeAdapter.toToken(reserve1.token), reserve1.quotient)\n    )\n  }\n\n  private static isVersionedRoute<T extends V2PoolInRoute | V3PoolInRoute | V4PoolInRoute>(\n    type: PoolType,\n    route: (V3PoolInRoute | V2PoolInRoute | V4PoolInRoute)[]\n  ): route is T[] {\n    return route.every((pool) => pool.type === type)\n  }\n}\n","import { ethers } from 'ethers'\nimport UniversalRouter from '@uniswap/universal-router/artifacts/contracts/UniversalRouter.sol/UniversalRouter.json'\nimport { Interface } from '@ethersproject/abi'\nimport { V4BaseActionsParser, V4RouterAction } from '@uniswap/v4-sdk'\nimport { CommandType, CommandDefinition, COMMAND_DEFINITION, Subparser, Parser } from '../utils/routerCommands'\n\nexport type Param = {\n  readonly name: string\n  readonly value: any\n}\n\nexport type UniversalRouterCommand = {\n  readonly commandName: string\n  readonly commandType: CommandType\n  readonly params: readonly Param[]\n}\n\nexport type UniversalRouterCall = {\n  readonly commands: readonly UniversalRouterCommand[]\n}\n\nexport type V3PathItem = {\n  readonly tokenIn: string\n  readonly tokenOut: string\n  readonly fee: number\n}\n\nexport interface CommandsDefinition {\n  [key: number]: CommandDefinition\n}\n\n// Parses UniversalRouter V2 commands\nexport abstract class CommandParser {\n  public static INTERFACE: Interface = new Interface(UniversalRouter.abi)\n\n  public static parseCalldata(calldata: string): UniversalRouterCall {\n    const genericParser = new GenericCommandParser(COMMAND_DEFINITION)\n    const txDescription = CommandParser.INTERFACE.parseTransaction({ data: calldata })\n    const { commands, inputs } = txDescription.args\n    return genericParser.parse(commands, inputs)\n  }\n}\n\n// Parses commands based on given command definition\nexport class GenericCommandParser {\n  constructor(private readonly commandDefinition: CommandsDefinition) {}\n\n  public parse(commands: string, inputs: string[]): UniversalRouterCall {\n    const commandTypes = GenericCommandParser.getCommands(commands)\n\n    return {\n      commands: commandTypes.map((commandType: CommandType, i: number) => {\n        const commandDef = this.commandDefinition[commandType]\n\n        if (commandDef.parser === Parser.V4Actions) {\n          const { actions } = V4BaseActionsParser.parseCalldata(inputs[i])\n          return {\n            commandName: CommandType[commandType],\n            commandType,\n            params: v4RouterCallToParams(actions),\n          }\n        } else if (commandDef.parser === Parser.Abi) {\n          const abiDef = commandDef.params\n          const rawParams = ethers.utils.defaultAbiCoder.decode(\n            abiDef.map((command) => command.type),\n            inputs[i]\n          )\n\n          const params = rawParams.map((param: any, j: number) => {\n            switch (abiDef[j].subparser) {\n              case Subparser.V3PathExactIn:\n                return {\n                  name: abiDef[j].name,\n                  value: parseV3PathExactIn(param),\n                }\n              case Subparser.V3PathExactOut:\n                return {\n                  name: abiDef[j].name,\n                  value: parseV3PathExactOut(param),\n                }\n              default:\n                return {\n                  name: abiDef[j].name,\n                  value: param,\n                }\n            }\n          })\n          return {\n            commandName: CommandType[commandType],\n            commandType,\n            params,\n          }\n        } else if (commandDef.parser === Parser.V3Actions) {\n          // TODO: implement better parsing here\n          return {\n            commandName: CommandType[commandType],\n            commandType,\n            params: inputs.map((input) => ({ name: 'command', value: input })),\n          }\n        } else {\n          throw new Error(`Unsupported parser: ${commandDef}`)\n        }\n      }),\n    }\n  }\n\n  // parse command types from bytes string\n  private static getCommands(commands: string): CommandType[] {\n    const commandTypes: CommandType[] = []\n\n    for (let i = 2; i < commands.length; i += 2) {\n      const byte = commands.substring(i, i + 2)\n      commandTypes.push(parseInt(byte, 16) as CommandType)\n    }\n\n    return commandTypes\n  }\n}\n\nexport function parseV3PathExactIn(path: string): readonly V3PathItem[] {\n  const strippedPath = path.replace('0x', '')\n  let tokenIn = ethers.utils.getAddress(strippedPath.substring(0, 40))\n  let loc = 40\n  const res: V3PathItem[] = []\n  while (loc < strippedPath.length) {\n    const feeAndTokenOut = strippedPath.substring(loc, loc + 46)\n    const fee = parseInt(feeAndTokenOut.substring(0, 6), 16)\n    const tokenOut = ethers.utils.getAddress(feeAndTokenOut.substring(6, 46))\n\n    res.push({\n      tokenIn,\n      tokenOut,\n      fee,\n    })\n    tokenIn = tokenOut\n    loc += 46\n  }\n\n  return res\n}\n\nexport function parseV3PathExactOut(path: string): readonly V3PathItem[] {\n  const strippedPath = path.replace('0x', '')\n  let tokenIn = ethers.utils.getAddress(strippedPath.substring(strippedPath.length - 40))\n  let loc = strippedPath.length - 86 // 86 = (20 addr + 3 fee + 20 addr) * 2 (for hex characters)\n  const res: V3PathItem[] = []\n  while (loc >= 0) {\n    const feeAndTokenOut = strippedPath.substring(loc, loc + 46)\n    const tokenOut = ethers.utils.getAddress(feeAndTokenOut.substring(0, 40))\n    const fee = parseInt(feeAndTokenOut.substring(40, 46), 16)\n\n    res.push({\n      tokenIn,\n      tokenOut,\n      fee,\n    })\n    tokenIn = tokenOut\n\n    loc -= 46\n  }\n\n  return res\n}\n\nfunction v4RouterCallToParams(actions: readonly V4RouterAction[]): readonly Param[] {\n  return actions.map((action) => {\n    return {\n      name: action.actionName,\n      value: action.params.map((param) => {\n        return {\n          name: param.name,\n          value: param.value,\n        }\n      }),\n    }\n  })\n}\n"],"names":["CommandType","Subparser","Parser","ALLOW_REVERT_FLAG","REVERTIBLE_COMMANDS","Set","EXECUTE_SUB_PLAN","PERMIT_STRUCT","PERMIT_BATCH_STRUCT","POOL_KEY_STRUCT","PERMIT2_TRANSFER_FROM_STRUCT","PERMIT2_TRANSFER_FROM_BATCH_STRUCT","COMMAND_DEFINITION","_COMMAND_DEFINITION","parser","Abi","params","name","type","PERMIT2_PERMIT","PERMIT2_PERMIT_BATCH","PERMIT2_TRANSFER_FROM","PERMIT2_TRANSFER_FROM_BATCH","V3_SWAP_EXACT_IN","subparser","V3PathExactIn","V3_SWAP_EXACT_OUT","V3PathExactOut","V2_SWAP_EXACT_IN","V2_SWAP_EXACT_OUT","V4_SWAP","V4Actions","WRAP_ETH","UNWRAP_WETH","SWEEP","TRANSFER","PAY_PORTION","BALANCE_CHECK_ERC20","V4_INITIALIZE_POOL","V3_POSITION_MANAGER_PERMIT","V3Actions","V3_POSITION_MANAGER_CALL","V4_POSITION_MANAGER_CALL","RoutePlanner","commands","inputs","_proto","prototype","addSubPlan","subplan","addCommand","parameters","allowRevert","command","createCommand","push","encodedInput","has","Error","concat","toString","padStart","commandDef","defaultAbiCoder","encode","map","abi","getPathCurrency","currency","pool","involvesToken","wrapped","V4Pool","token0","equals","token1","symbol","RouterActionType","UniversalRouterVersion","WETH_NOT_SUPPORTED_ON_CHAIN","CHAIN_CONFIGS","_CHAIN_CONFIGS","weth","routerConfigs","_routerConfigs","V1_2","address","creationBlock","V2_0","_routerConfigs2","_routerConfigs3","_routerConfigs4","_routerConfigs5","_routerConfigs6","_routerConfigs7","_routerConfigs8","_routerConfigs9","_routerConfigs10","_routerConfigs11","_routerConfigs12","_routerConfigs13","_routerConfigs14","_routerConfigs15","_routerConfigs16","_routerConfigs17","_routerConfigs18","_routerConfigs19","_routerConfigs20","_routerConfigs21","_routerConfigs22","_routerConfigs23","_routerConfigs24","UNIVERSAL_ROUTER_ADDRESS","version","chainId","UNIVERSAL_ROUTER_CREATION_BLOCK","WETH_ADDRESS","CONTRACT_BALANCE","BigNumber","from","pow","ETH_ADDRESS","E_ETH_ADDRESS","SENDER_AS_RECIPIENT","ROUTER_AS_RECIPIENT","getCurrencyAddress","isNative","encodeFeeBips","fee","toHex","multiply","quotient","REFUND_ETH_PRICE_IMPACT_THRESHOLD","Percent","UniswapTrade","trade","options","flatFee","inputRequiresWrap","inputRequiresUnwrap","useRouterBalance","payerIsUser","planner","_config","maximumAmountIn","slippageTolerance","inputAmount","recipient","_this$options$recipie","performAggregatedSlippageCheck","tradeType","TradeType","EXACT_INPUT","routes","length","routerMustCustody","outputRequiresTransition","hasFeeOption","_iterator","_createForOfIteratorHelperLoose","swaps","_step","done","swap","value","route","protocol","Protocol","V2","addV2Swap","V3","addV3Swap","V4","addV4Swap","MIXED","addMixedSwap","minimumAmountOut","pools","pathOutputCurrencyAddress","outputAmount","feeBips","EXACT_OUTPUT","sub","mul","div","feeAmount","amount","lt","outputRequiresUnwrap","outputRequiresWrap","riskOfPartialFill","safeMode","_createClass","key","get","result","_iterator2","_step2","isAllV4","pathInput","pathOutput","_ref","V2Trade","path","token","_ref2","V3Trade","createUncheckedTrade","encodeRouteToPath","_ref3","p","v4Route","V4Route","V4Trade","slippageToleranceOnSwap","undefined","v4Planner","V4Planner","addTrade","addSettle","addTake","_options$recipient","finalize","tradeRecipient","_options$recipient2","V3Pool","Pair","MixedRouteTrade","amountIn","amountOut","sections","partitionMixedRouteByProtocol","isLastSectionInRoute","i","inputToken","section","routePool","outputToken","getOutputOfPools","subRoute","MixedRoute","MixedRouteSDK","nextInputToken","swapRecipient","nextPool","v2PoolIsSwapRecipient","liquidityToken","v4SubRoute","input","output","addAction","Actions","SWAP_EXACT_IN","currencyIn","encodeV4RouteToPath","amountOutMinimum","encodeMixedRouteToPath","priceImpact","greaterThan","swapOptions","SIGNATURE_LENGTH","EIP_2098_SIGNATURE_LENGTH","encodePermit","permit2","signature","ethers","utils","arrayify","joinSignature","splitSignature","encodeV3PositionPermit","permit","tokenId","calldata","NonfungiblePositionManager","INTERFACE","encodeFunctionData","validateAndParseAddress","spender","deadline","v","r","s","encodeInputTokenOptions","permit2TransferFrom","permit2Permit","details","process","invariant","isMint","Object","keys","some","k","SwapRouter","swapCallParameters","trades","inputCurrency","inputTokenPermit","nativeCurrencyValue","encodePlan","deadlineOrPreviousBlockhash","migrateV3ToV4CallParameters","positionManagerOverride","v4Pool","outputPosition","v3Token0","inputPosition","v3Token1","v4PositionManagerAddress","CHAIN_TO_ADDRESSES_MAP","currency0","currency1","v3RemoveLiquidityOptions","liquidityPercentage","equalTo","burnToken","collectOptions","v4AddLiquidityOptions","migrate","createPool","poolKey","getPoolKey","tickSpacing","hooks","sqrtRatioX96","universalRouterAddress","v3RemoveParams","V3PositionManager","removeCallParameters","v3Calls","Multicall","decodeMulticall","v3Call","selector","slice","getSighash","v4AddParams","V4PositionManager","addCallParameters","config","functionSignature","toHexString","Interface","UniversalRouter","UnwrapWETH","wethAddress","toLowerCase","permit2Data","_","PoolType","isNativeCurrency","RouterTradeAdapter","fromClassicQuote","quote","tokenIn","tokenOut","firstRoute","tokenInData","tokenOutData","parsedCurrencyIn","toCurrency","parsedCurrencyOut","typedRoutes","rawAmountIn","rawAmountOut","CurrencyAmount","fromRawAmount","isOnlyV2","isVersionedRoute","V2Pool","isOnlyV3","isOnlyV4","routev4","toV4Pool","routev3","V3Route","toV3Pool","routev2","V2Route","toPair","mixedRoute","toPoolOrPair","RouterTrade","v2Routes","filter","v3Routes","v4Routes","mixedRoutes","Ether","onChain","toToken","decimals","buyFeeBps","sellFeeBps","Token","parseInt","liquidity","tickCurrent","every","reserve0","reserve1","CommandParser","parseCalldata","genericParser","GenericCommandParser","txDescription","parseTransaction","data","_txDescription$args","args","parse","commandDefinition","commandTypes","getCommands","commandType","_this","_V4BaseActionsParser$","V4BaseActionsParser","actions","commandName","v4RouterCallToParams","abiDef","rawParams","decode","param","j","parseV3PathExactIn","parseV3PathExactOut","byte","substring","strippedPath","replace","getAddress","loc","res","feeAndTokenOut","action","actionName"],"mappings":"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"}