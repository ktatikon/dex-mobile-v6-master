androidx.fragment.app.strictmode.GetTargetFragmentRequestCodeUsageViolation
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
com.google.android.material.datepicker.CalendarConstraints$DateValidator
com.capacitorjs.plugins.camera.CameraUtils
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface
androidx.recyclerview.widget.RecyclerView$SavedState
com.getcapacitor.RouteProcessor
androidx.appcompat.view.menu.ExpandedMenuView
com.getcapacitor.util.HostMask$Util
androidx.fragment.app.strictmode.GetTargetFragmentUsageViolation
com.google.android.material.internal.CheckableImageButton$SavedState
androidx.emoji2.text.EmojiCompatInitializer
androidx.fragment.app.FragmentTabHost$SavedState
com.google.android.material.transformation.FabTransformationBehavior
com.google.android.material.bottomappbar.BottomAppBar$SavedState
com.google.android.material.button.MaterialButton
androidx.profileinstaller.ProfileInstallerInitializer
com.google.android.material.datepicker.MaterialCalendar
com.getcapacitor.android.R$id
androidx.appcompat.widget.ContentFrameLayout
androidx.appcompat.widget.SearchView
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState
com.getcapacitor.plugin.CapacitorHttp$1
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$startNotifications$1
androidx.profileinstaller.FileSectionType
com.getcapacitor.AppUUID
androidx.activity.OnBackPressedDispatcher$addCallback$1
com.google.android.material.chip.Chip
com.google.android.material.slider.BaseSlider$SliderState
androidx.recyclerview.widget.RecyclerView
com.getcapacitor.CapConfig
org.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode
androidx.activity.ComponentActivity$2
com.getcapacitor.WebViewLocalServer$LazyInputStream
com.capacitorjs.community.plugins.bluetoothle.R
com.google.android.material.appbar.AppBarLayout$Behavior
androidx.fragment.app.strictmode.FragmentTagUsageViolation
androidx.core.app.RemoteActionCompat
androidx.appcompat.widget.DialogTitle
kotlin.jvm.internal.FunctionReference
org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode
org.apache.cordova.CordovaWebViewImpl$EngineClient
androidx.lifecycle.Lifecycle$State
kotlin.InitializedLazyImpl
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment$BottomSheetOnCanceledListener
com.google.android.material.internal.CheckableImageButton
com.google.android.material.datepicker.DayViewDecorator
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.getcapacitor.PluginMethod
com.google.android.material.internal.ParcelableSparseIntArray
com.getcapacitor.Logger
com.getcapacitor.PluginHandle
kotlin.jvm.internal.Lambda
com.getcapacitor.CapacitorWebView
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.google.android.material.search.SearchView$Behavior
com.getcapacitor.WebViewListener
com.google.android.material.internal.TouchObserverFrameLayout
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$writeDescriptor$1
com.google.android.material.snackbar.SnackbarContentLayout
com.getcapacitor.cordova.MockCordovaWebViewImpl
com.getcapacitor.PluginCall$PluginCallDataTypeException
com.getcapacitor.JSInjector
com.getcapacitor.Bridge$Builder
com.getcapacitor.NativePlugin
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.lifecycle.Lifecycle$Event
com.getcapacitor.plugin.util.HttpRequestHandler$1
com.getcapacitor.annotation.Permission
androidx.lifecycle.SavedStateHandleAttacher
kotlin.collections.EmptySet
com.getcapacitor.plugin.CapacitorHttp
com.capacitorjs.community.plugins.bluetoothle.DisplayStrings
com.capacitorjs.plugins.camera.CameraPlugin$1
com.capacitorjs.community.plugins.bluetoothle.DeviceKt
com.getcapacitor.InvalidPluginException
org.apache.cordova.engine.SystemWebView
com.getcapacitor.JSObject
org.apache.cordova.CordovaClientCertRequest
com.google.android.material.internal.BaselineLayout
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
com.getcapacitor.plugin.util.HttpRequestHandler
androidx.activity.OnBackPressedDispatcher$3
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact
com.google.android.material.datepicker.Month
androidx.emoji2.text.EmojiCompatInitializer$1
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface
org.apache.cordova.PluginResult$Status
androidx.appcompat.widget.Toolbar$SavedState
androidx.activity.OnBackPressedDispatcher$4
kotlin.random.Random$Default
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants$ProcessGlobalConfigMapKey
androidx.fragment.app.FragmentManagerState
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestDevice$1
androidx.fragment.app.strictmode.FragmentStrictMode$Flag
androidx.recyclerview.widget.LinearLayoutManager$SavedState
com.google.android.material.datepicker.MaterialTextInputPicker
androidx.appcompat.app.AlertController$RecycleListView
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
androidx.fragment.app.FragmentContainerView
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection
kotlin.jvm.internal.CallableReference$NoReceiver
com.google.android.material.datepicker.MaterialDatePicker
com.google.android.material.datepicker.MaterialCalendarGridView
androidx.appcompat.widget.ActionBarOverlayLayout
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface
androidx.fragment.app.BackStackState
androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner$scanCallback$1
androidx.fragment.app.BackStackRecordState
androidx.versionedparcelable.ParcelImpl
androidx.fragment.app.Fragment$InstantiationException
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$readRssi$1
com.getcapacitor.JSExport
com.google.android.material.datepicker.SingleDateSelector
com.google.android.material.slider.RangeSlider$RangeSliderState
androidx.annotation.Keep
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.fragment.app.strictmode.WrongNestedHierarchyViolation
com.getcapacitor.PluginResult
com.google.android.material.internal.ParcelableSparseBooleanArray
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector
org.apache.cordova.CordovaInterfaceImpl
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType
androidx.core.app.CoreComponentFactory
com.getcapacitor.plugin.util.AssetUtil
androidx.transition.FragmentTransitionSupport
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$stopNotifications$1
com.getcapacitor.cordova.MockCordovaWebViewImpl$CapacitorEvalBridgeMode
androidx.startup.StartupException
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
com.google.android.material.snackbar.Snackbar$SnackbarLayout
com.getcapacitor.CapConfig$Builder
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState
com.google.android.material.navigation.NavigationView$SavedState
kotlin.Pair
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface
com.getcapacitor.JSExportException
com.getcapacitor.BridgeWebChromeClient$PermissionListener
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$discoverServices$1
org.chromium.support_lib_boundary.WebAuthnCallbackBoundaryInterface
com.capacitorjs.community.plugins.bluetoothle.TimeoutHandler
com.getcapacitor.InvalidPluginMethodException
org.apache.cordova.CordovaWebViewImpl
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState
androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1
androidx.activity.result.ActivityResult
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestLEScan$2
com.capacitorjs.community.plugins.bluetoothle.Device$reject$1
com.getcapacitor.JSValue
com.google.android.material.navigation.NavigationBarPresenter$SavedState
com.getcapacitor.util.InternalUtils
com.google.android.material.internal.ClippableRoundedCornerLayout
com.getcapacitor.ServerPath
com.getcapacitor.plugin.util.ICapacitorHttpUrlConnection
com.getcapacitor.BridgeWebChromeClient
com.capacitorjs.plugins.camera.CameraPlugin
com.google.android.material.timepicker.TimeModel
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$write$1
androidx.savedstate.Recreator
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface
androidx.profileinstaller.ProfileInstallReceiver
androidx.appcompat.view.menu.ActionMenuItemView
androidx.appcompat.widget.AppCompatSpinner$SavedState
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment
com.google.android.material.internal.ParcelableSparseArray
com.getcapacitor.WebViewLocalServer$LollipopLazyInputStream
com.google.android.material.transformation.FabTransformationSheetBehavior
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner
kotlin.collections.EmptyList
androidx.lifecycle.CompositeGeneratedAdaptersObserver
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface
com.getcapacitor.util.HostMask$Parser
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState
androidx.constraintlayout.helper.widget.Flow
com.getcapacitor.App$AppStatusChangeListener
androidx.fragment.app.strictmode.GetRetainInstanceUsageViolation
androidx.fragment.app.DefaultSpecialEffectsController$retainMatchingViews$1
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestLEScan$1
com.capacitorjs.community.plugins.bluetoothle.DeviceList
com.google.android.material.search.SearchView$SavedState
com.capacitorjs.plugins.camera.R
com.google.android.material.transformation.ExpandableTransformationBehavior
androidx.appcompat.widget.ActionBarContextView
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$read$1
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment$BottomSheetOnSelectedListener
com.capacitorjs.community.plugins.bluetoothle.Device$Companion
androidx.appcompat.widget.Toolbar
com.getcapacitor.PluginInvocationException
com.google.android.material.datepicker.CompositeDateValidator
com.capacitorjs.community.plugins.bluetoothle.Device$resolve$1
org.apache.cordova.CordovaHttpAuthHandler
androidx.lifecycle.LifecycleCoroutineScopeImpl
com.getcapacitor.plugin.util.HttpRequestHandler$ProgressEmitter
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType
com.getcapacitor.android.R$color
androidx.viewpager2.adapter.FragmentStateAdapter$2
androidx.fragment.app.FragmentState
kotlin.Triple
org.chromium.support_lib_boundary.StaticsBoundaryInterface
com.capacitorjs.community.plugins.bluetoothle.Device$createBondStateReceiver$1
com.google.android.material.datepicker.DateValidatorPointBackward
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$createBond$1
com.getcapacitor.Plugin
com.getcapacitor.PluginMethodHandle
com.google.android.material.transformation.ExpandableBehavior
com.getcapacitor.BridgeActivity
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants
com.getcapacitor.WebViewLocalServer
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior
kotlin.NoWhenBranchMatchedException
com.capacitorjs.plugins.camera.ImageUtils
com.capacitorjs.community.plugins.bluetoothle.Device$gattCallback$1
androidx.activity.OnBackPressedDispatcher$1
com.google.android.material.search.SearchBar$SavedState
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
com.getcapacitor.JSArray
kotlin.jvm.internal.FunctionReferenceImpl
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.lifecycle.SingleGeneratedAdapterObserver
com.google.android.material.appbar.AppBarLayout$BaseBehavior
androidx.activity.result.IntentSenderRequest
org.apache.cordova.AllowListPlugin
kotlin.UninitializedPropertyAccessException
androidx.customview.view.AbsSavedState
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$readDescriptor$1
androidx.fragment.app.strictmode.SetUserVisibleHintViolation
com.capacitorjs.community.plugins.bluetoothle.ScanResponse
com.getcapacitor.WebViewLocalServer$1
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$startNotifications$2
com.getcapacitor.FileUtils
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
androidx.appcompat.widget.ActionMenuPresenter$SavedState
androidx.customview.view.AbsSavedState$1
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo
com.getcapacitor.android.R$layout
com.google.android.material.timepicker.ClockHandView
android.support.v4.app.RemoteActionCompatParcelizer
com.google.android.material.internal.NavigationMenuView
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment$1
com.getcapacitor.AndroidProtocolHandler
androidx.fragment.app.Fragment$SavedState
com.getcapacitor.PluginManager
androidx.recyclerview.widget.GridLayoutManager
com.google.android.material.timepicker.ClockFaceView
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
androidx.fragment.app.strictmode.RetainInstanceUsageViolation
androidx.activity.OnBackPressedDispatcher$2
androidx.activity.ComponentActivity$3
org.apache.cordova.NativeToJsMessageQueue$NoOpBridgeMode
com.google.android.material.carousel.CarouselLayoutManager
androidx.core.graphics.drawable.IconCompat
androidx.fragment.app.strictmode.WrongFragmentContainerViolation
com.getcapacitor.plugin.WebView
com.google.android.material.datepicker.RangeDateSelector
com.google.android.material.internal.NavigationMenuItemView
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.recyclerview.widget.LinearLayoutManager
com.getcapacitor.util.JSONUtils
com.google.android.material.sidesheet.SideSheetBehavior
com.getcapacitor.ProcessedRoute
androidx.appcompat.widget.ActionMenuView
com.google.android.material.button.MaterialButton$SavedState
com.getcapacitor.PluginLoadException
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState
androidx.constraintlayout.solver.SolverVariable$Type
androidx.appcompat.view.menu.ListMenuItemView
androidx.fragment.app.SuperNotCalledException
com.getcapacitor.BridgeWebChromeClient$ActivityResultListener
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
androidx.activity.result.ActivityResultRegistry$1
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
org.apache.cordova.engine.SystemWebViewEngine
androidx.fragment.app.strictmode.SetRetainInstanceUsageViolation
androidx.appcompat.widget.ViewStubCompat
com.getcapacitor.util.HostMask$Simple
androidx.fragment.app.FragmentManager$6
androidx.fragment.app.strictmode.FragmentReuseViolation
com.getcapacitor.plugin.util.MimeType
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
com.google.android.material.button.MaterialButtonToggleGroup
com.google.android.material.textfield.TextInputEditText
androidx.coordinatorlayout.widget.CoordinatorLayout
com.getcapacitor.UriMatcher
com.capacitorjs.plugins.camera.CameraSource
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$getOrCreateDevice$newDevice$1
com.getcapacitor.ServerPath$PathType
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$writeWithoutResponse$1
androidx.appcompat.app.AppCompatDialogFragment
com.google.android.material.internal.StaticLayoutBuilderCompat$StaticLayoutBuilderCompatException
androidx.viewpager2.widget.ViewPager2$SavedState
com.getcapacitor.util.HostMask
com.google.android.material.textfield.TextInputLayout$SavedState
androidx.core.content.FileProvider
com.getcapacitor.Bridge
androidx.activity.OnBackPressedDispatcher$addCancellableCallback$1
com.getcapacitor.util.PermissionHelper
com.getcapacitor.App
com.google.android.material.stateful.ExtendableSavedState
com.capacitorjs.community.plugins.bluetoothle.CallbackResponse
com.getcapacitor.Bridge$1
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport
com.capacitorjs.plugins.camera.CameraResultType
com.getcapacitor.cordova.CapacitorCordovaCookieManager
androidx.fragment.app.strictmode.SetTargetFragmentUsageViolation
com.getcapacitor.WebViewLocalServer$PathHandler
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$Companion
androidx.viewpager2.adapter.FragmentStateAdapter$5
org.apache.cordova.CoreAndroid
androidx.activity.ComponentActivity$4
androidx.fragment.app.Fragment$6
com.getcapacitor.annotation.PermissionCallback
androidx.fragment.app.strictmode.Violation
androidx.versionedparcelable.CustomVersionedParcelable
kotlin.jvm.internal.CallableReference
com.capacitorjs.plugins.camera.ExifWrapper
com.google.android.material.bottomsheet.BottomSheetDialogFragment
com.google.android.material.timepicker.TimePickerView
androidx.concurrent.futures.AbstractResolvableFuture$Failure$1
com.capacitorjs.community.plugins.bluetoothle.ConversionKt
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$disconnect$1
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
androidx.startup.InitializationProvider
androidx.constraintlayout.widget.ConstraintLayout
com.google.android.material.transformation.FabTransformationScrimBehavior
androidx.lifecycle.SavedStateHandleController
kotlin.random.Random$Default$Serialized
com.getcapacitor.util.HostMask$Any
com.google.android.material.datepicker.CalendarConstraints
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
androidx.appcompat.widget.ActionBarContainer
com.getcapacitor.util.HostMask$Nothing
com.google.android.material.search.SearchBar$ScrollingViewBehavior
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType
kotlin.SynchronizedLazyImpl
androidx.core.widget.NestedScrollView
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
androidx.appcompat.widget.SearchView$SavedState
androidx.drawerlayout.widget.DrawerLayout$SavedState
androidx.appcompat.widget.AlertDialogLayout
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
com.capacitorjs.community.plugins.bluetoothle.Device
com.google.android.material.datepicker.DateSelector
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour
com.google.android.material.navigation.NavigationBarView$SavedState
com.google.android.material.sidesheet.SideSheetBehavior$SavedState
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$createStateReceiver$1
com.google.android.material.bottomsheet.BottomSheetBehavior
com.google.android.material.datepicker.DateValidatorPointForward
androidx.lifecycle.ProcessLifecycleInitializer
com.getcapacitor.PermissionState
androidx.appcompat.widget.SearchView$SearchAutoComplete
androidx.appcompat.widget.FitWindowsLinearLayout
com.getcapacitor.App$AppRestoredListener
androidx.fragment.app.SpecialEffectsController$Operation$State
com.google.android.material.appbar.MaterialToolbar
org.apache.cordova.ResumeCallback
com.getcapacitor.annotation.CapacitorPlugin
com.getcapacitor.plugin.CapacitorCookies
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType
com.dexmobile.app.MainActivity
android.support.v4.os.ResultReceiver
com.getcapacitor.android.R$string
com.google.android.material.behavior.SwipeDismissBehavior
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
androidx.activity.ComponentActivity$6
com.google.android.material.timepicker.ChipTextInputComboView
com.getcapacitor.PluginCall
androidx.appcompat.widget.ButtonBarLayout
kotlin.collections.EmptyMap
com.getcapacitor.android.R$style
com.getcapacitor.android.R
com.getcapacitor.cordova.MockCordovaInterfaceImpl
com.getcapacitor.FileUtils$Type
com.getcapacitor.util.WebColor
androidx.lifecycle.SavedStateHandlesProvider$viewModel$2
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner$Companion
androidx.activity.ImmLeaksCleaner
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$connect$1
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.fragment.app.strictmode.TargetFragmentUsageViolation
androidx.core.app.RemoteActionCompatParcelizer
com.getcapacitor.plugin.CapacitorCookieManager
androidx.activity.OnBackPressedDispatcher$5
androidx.lifecycle.DefaultLifecycleObserverAdapter
com.getcapacitor.annotation.ActivityCallback
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface
com.google.android.material.checkbox.MaterialCheckBox$SavedState
androidx.fragment.app.DialogFragment
com.google.android.material.theme.MaterialComponentsViewInflater
com.google.android.material.textfield.TextInputLayout
com.capacitorjs.plugins.camera.CameraSettings
com.getcapacitor.PluginConfig
com.google.android.material.badge.BadgeState$State
androidx.recyclerview.widget.StaggeredGridLayoutManager
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.getcapacitor.MessageHandler
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface
androidx.viewpager.widget.ViewPager$SavedState
androidx.core.widget.NestedScrollView$SavedState
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type
com.getcapacitor.BridgeWebViewClient
com.google.android.material.search.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.getcapacitor.cordova.CapacitorCordovaCookieManager: android.webkit.WebView webView
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$disconnect$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
com.getcapacitor.WebViewLocalServer$PathHandler: int statusCode
kotlin.collections.EmptyMap: long serialVersionUID
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$createBond$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
com.getcapacitor.BridgeWebChromeClient: com.getcapacitor.BridgeWebChromeClient$PermissionListener permissionListener
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: android.bluetooth.BluetoothAdapter bluetoothAdapter
com.getcapacitor.Plugin: java.util.Map activityLaunchers
com.capacitorjs.plugins.camera.CameraPlugin: androidx.activity.result.ActivityResultLauncher pickMultipleMedia
com.getcapacitor.Logger: com.getcapacitor.CapConfig config
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String IMAGE_GALLERY_SAVE_ERROR
androidx.fragment.app.DialogFragment: boolean mDismissed
androidx.activity.ComponentActivity: java.lang.String ACTIVITY_RESULT_TAG
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$createBond$1: com.getcapacitor.PluginCall $call
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: java.lang.Integer connectTimeout
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
com.getcapacitor.cordova.MockCordovaWebViewImpl: org.apache.cordova.CordovaResourceApi resourceApi
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int MEDIA_QUERY_ONLY
org.apache.cordova.CordovaInterfaceImpl: java.lang.String TAG
androidx.fragment.app.FragmentActivity: java.lang.String LIFECYCLE_TAG
com.getcapacitor.ServerPath$PathType: com.getcapacitor.ServerPath$PathType BASE_PATH
com.getcapacitor.App: com.getcapacitor.App$AppRestoredListener appRestoredListener
com.google.android.material.datepicker.CompositeDateValidator: android.os.Parcelable$Creator CREATOR
com.getcapacitor.PermissionState: com.getcapacitor.PermissionState DENIED
com.getcapacitor.CapConfig$Builder: java.lang.String overriddenUserAgentString
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment: java.util.List options
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$OnPreAttachedListener mSavedStateAttachListener
com.getcapacitor.CapConfig$Builder: boolean captureInput
androidx.fragment.app.Fragment: boolean mUserVisibleHint
com.getcapacitor.CapConfig: java.lang.String errorPath
com.getcapacitor.Bridge: java.lang.String CAPACITOR_HTTP_SCHEME
com.capacitorjs.plugins.camera.CameraPlugin: boolean isFirstRequest
com.getcapacitor.android.R$color: int colorPrimaryDark
com.capacitorjs.community.plugins.bluetoothle.Device: android.content.Context context
com.getcapacitor.Bridge: java.util.List webViewListeners
androidx.fragment.app.Fragment: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
com.capacitorjs.plugins.camera.CameraSettings: boolean allowEditing
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType: com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType TEXT
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: float CONNECTION_TIMEOUT
com.getcapacitor.UriMatcher: int REST
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: com.capacitorjs.community.plugins.bluetoothle.DisplayStrings displayStrings
androidx.fragment.app.DialogFragment: int STYLE_NO_FRAME
androidx.fragment.app.DialogFragment: int mBackStackId
com.capacitorjs.plugins.camera.CameraPlugin: boolean isSaved
com.getcapacitor.Logger: com.getcapacitor.Logger instance
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int FORCE_DARK_ONLY
com.getcapacitor.Plugin: com.getcapacitor.Bridge bridge
com.getcapacitor.Bridge: java.lang.String BUNDLE_PLUGIN_CALL_BUNDLE_KEY
com.capacitorjs.community.plugins.bluetoothle.Device: com.capacitorjs.community.plugins.bluetoothle.Device$Companion Companion
com.getcapacitor.CapConfig: int minHuaweiWebViewVersion
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment: com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment$BottomSheetOnSelectedListener selectedListener
com.getcapacitor.Bridge: com.getcapacitor.util.HostMask appAllowNavigationMask
com.getcapacitor.Bridge: java.lang.String BUNDLE_LAST_PLUGIN_ID_KEY
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: java.lang.String method
androidx.fragment.app.Fragment: int AWAITING_EXIT_EFFECTS
com.getcapacitor.WebViewLocalServer$PathHandler: java.lang.String mimeType
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: float DEFAULT_TIMEOUT
com.getcapacitor.WebViewLocalServer$LollipopLazyInputStream: java.io.InputStream is
androidx.activity.ComponentActivity: boolean mDispatchingOnMultiWindowModeChanged
com.getcapacitor.CapConfig: java.lang.String startPath
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String INVALID_RESULT_TYPE_ERROR
com.getcapacitor.Bridge: androidx.fragment.app.Fragment fragment
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$discoverServices$1: com.getcapacitor.PluginCall $call
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String NO_CAMERA_ERROR
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String PERMISSION_DENIED_ERROR_CAMERA
com.getcapacitor.CapConfig: java.lang.String[] allowNavigation
com.google.android.material.datepicker.DateValidatorPointBackward: android.os.Parcelable$Creator CREATOR
org.apache.cordova.CordovaInterfaceImpl: org.apache.cordova.PluginManager pluginManager
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnNewIntentListeners
com.getcapacitor.cordova.MockCordovaWebViewImpl$CapacitorEvalBridgeMode: org.apache.cordova.CordovaInterface cordova
com.getcapacitor.Logger: java.lang.String LOG_TAG_CORE
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$connect$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
com.getcapacitor.Bridge: java.lang.String LAST_BINARY_VERSION_NAME
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType: com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType DEFAULT
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.Fragment: boolean mHiddenChanged
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$write$1: com.getcapacitor.PluginCall $call
com.getcapacitor.MessageHandler: android.webkit.WebView webView
androidx.fragment.app.Fragment: int CREATED
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: kotlin.jvm.functions.Function1 scanResultCallback
com.getcapacitor.CapConfig: boolean allowMixedContent
com.getcapacitor.MessageHandler: androidx.webkit.JavaScriptReplyProxy javaScriptReplyProxy
kotlin.collections.EmptyList: long serialVersionUID
com.getcapacitor.PluginCall: com.getcapacitor.JSObject data
androidx.fragment.app.Fragment: int ACTIVITY_CREATED
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources mResources
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.capacitorjs.community.plugins.bluetoothle.ConversionKt: int[] HEX_LOOKUP_TABLE
androidx.fragment.app.DialogFragment: java.lang.String SAVED_STYLE
com.getcapacitor.util.HostMask$Simple: java.util.List maskParts
com.capacitorjs.plugins.camera.CameraPlugin: android.net.Uri imagePickedContentUri
androidx.fragment.app.Fragment: android.os.Handler mPostponedHandler
com.getcapacitor.CapConfig: java.lang.String LOG_BEHAVIOR_DEBUG
com.getcapacitor.PluginMethod: java.lang.String RETURN_PROMISE
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: java.lang.String namePrefix
com.getcapacitor.CapConfig$Builder: java.lang.String adjustMarginsForEdgeToEdge
com.getcapacitor.plugin.util.AssetUtil: int RESOURCE_ID_ZERO_VALUE
com.capacitorjs.community.plugins.bluetoothle.Device: kotlin.jvm.functions.Function0 onDisconnect
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
com.capacitorjs.community.plugins.bluetoothle.Device: android.bluetooth.BluetoothDevice device
com.getcapacitor.PluginCall$PluginCallDataTypeException: com.getcapacitor.PluginCall this$0
com.getcapacitor.Bridge: java.lang.Boolean canInjectJS
com.capacitorjs.community.plugins.bluetoothle.Device$createBondStateReceiver$1: com.capacitorjs.community.plugins.bluetoothle.Device this$0
androidx.fragment.app.Fragment: int VIEW_CREATED
com.getcapacitor.PluginCall: java.lang.String CALLBACK_ID_DANGLING
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: android.content.BroadcastReceiver stateReceiver
com.getcapacitor.FileUtils$Type: com.getcapacitor.FileUtils$Type IMAGE
com.getcapacitor.Bridge: java.lang.String CAPACITOR_HTTPS_SCHEME
com.getcapacitor.CapConfig: java.lang.String overriddenUserAgentString
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
androidx.fragment.app.Fragment: boolean mCalled
com.getcapacitor.plugin.util.MimeType: com.getcapacitor.plugin.util.MimeType[] $VALUES
com.getcapacitor.Bridge: java.util.Set allowedOriginRules
com.getcapacitor.ServerPath: com.getcapacitor.ServerPath$PathType type
androidx.fragment.app.DialogFragment: java.lang.Runnable mDismissRunnable
com.getcapacitor.plugin.util.HttpRequestHandler$1: int[] $SwitchMap$com$getcapacitor$plugin$util$HttpRequestHandler$ResponseType
com.getcapacitor.CapConfig$Builder: java.lang.String hostname
com.getcapacitor.Bridge: com.getcapacitor.PluginCall pluginCallForLastActivity
androidx.fragment.app.DialogFragment: java.lang.String SAVED_INTERNAL_DIALOG_SHOWING
com.capacitorjs.plugins.camera.CameraPlugin: com.capacitorjs.plugins.camera.CameraSettings settings
com.getcapacitor.PluginCall: java.lang.String methodName
com.getcapacitor.Bridge: org.apache.cordova.CordovaWebView cordovaWebView
com.getcapacitor.PluginCall: java.lang.String callbackId
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
com.getcapacitor.Bridge$Builder: java.util.List webViewListeners
com.getcapacitor.Bridge: com.getcapacitor.CapConfig config
com.getcapacitor.util.HostMask$Any: java.util.List masks
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
androidx.fragment.app.FragmentActivity: boolean mResumed
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.getcapacitor.Bridge$Builder: android.os.Bundle instanceState
com.getcapacitor.CapConfig$Builder: android.content.Context context
com.getcapacitor.FileUtils$Type: com.getcapacitor.FileUtils$Type[] $VALUES
androidx.fragment.app.DialogFragment: boolean mViewDestroyed
androidx.fragment.app.Fragment: int AWAITING_ENTER_EFFECTS
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager
com.google.android.material.datepicker.SingleDateSelector: android.os.Parcelable$Creator CREATOR
com.capacitorjs.community.plugins.bluetoothle.Device: java.lang.String TAG
com.getcapacitor.Plugin: java.util.Map retainedEventArguments
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.DialogFragment: android.app.Dialog mDialog
com.getcapacitor.App: com.getcapacitor.App$AppStatusChangeListener statusChangeListener
com.getcapacitor.BridgeActivity: com.getcapacitor.Bridge bridge
androidx.activity.ComponentActivity: androidx.activity.FullyDrawnReporter mFullyDrawnReporter
com.google.android.material.sidesheet.SideSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.getcapacitor.Bridge: java.util.Map savedPermissionCallIds
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: kotlin.jvm.functions.Function1 savedCallback
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
com.getcapacitor.JSExport: java.lang.String CALLBACK_PARAM
com.getcapacitor.UriMatcher: java.lang.Object mCode
com.getcapacitor.CapConfig: java.util.Map pluginsConfiguration
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ActionMenuPresenter$SavedState: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.DialogFragment: java.lang.String SAVED_THEME
com.getcapacitor.Bridge: int MINIMUM_ANDROID_WEBVIEW_VERSION
androidx.fragment.app.Fragment: int RESUMED
com.getcapacitor.CapConfig$Builder: boolean allowMixedContent
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
androidx.fragment.app.Fragment: boolean mHidden
org.apache.cordova.CordovaPlugin: org.apache.cordova.CordovaWebView webView
androidx.fragment.app.DialogFragment: int STYLE_NORMAL
androidx.fragment.app.Fragment: boolean mHasMenu
androidx.fragment.app.Fragment: java.lang.String mTargetWho
com.getcapacitor.CapConfig$Builder: java.lang.String errorPath
com.getcapacitor.Bridge: java.lang.String appUrlConfig
com.getcapacitor.WebViewLocalServer: com.getcapacitor.Bridge bridge
com.getcapacitor.UriMatcher: int mWhich
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String IMAGE_FILE_SAVE_ERROR
org.apache.cordova.CordovaInterfaceImpl: int activityResultRequestCode
com.getcapacitor.Bridge: com.getcapacitor.BridgeWebViewClient webViewClient
com.getcapacitor.CapConfig: boolean resolveServiceWorkerRequests
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
com.getcapacitor.cordova.MockCordovaWebViewImpl: android.content.Context context
com.getcapacitor.Bridge$Builder: androidx.fragment.app.Fragment fragment
com.capacitorjs.community.plugins.bluetoothle.Device: int STATE_CONNECTING
androidx.fragment.app.Fragment: android.os.Bundle mSavedViewRegistryState
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: java.net.HttpURLConnection connection
com.getcapacitor.Bridge: java.lang.String BUNDLE_PLUGIN_CALL_OPTIONS_SAVED_KEY
com.getcapacitor.plugin.util.MimeType: com.getcapacitor.plugin.util.MimeType APPLICATION_JSON
com.getcapacitor.WebViewLocalServer: com.getcapacitor.JSInjector jsInjector
com.getcapacitor.JSInjector: java.lang.String cordovaJS
com.capacitorjs.plugins.camera.CameraPlugin: boolean isEdited
org.apache.cordova.CordovaInterfaceImpl: boolean activityWasDestroyed
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$write$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
androidx.fragment.app.Fragment: boolean mBeingSaved
org.apache.cordova.CordovaInterfaceImpl: org.apache.cordova.CordovaInterfaceImpl$ActivityResultHolder savedResult
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnCancelListener mOnCancelListener
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String imageFileSavePath
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$read$1: com.getcapacitor.PluginCall $call
com.getcapacitor.Bridge: java.lang.String localUrl
androidx.fragment.app.DialogFragment: java.lang.String SAVED_SHOWS_DIALOG
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$read$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
com.getcapacitor.CapacitorWebView: com.getcapacitor.Bridge bridge
org.apache.cordova.CoreAndroid: java.lang.String PLUGIN_NAME
androidx.fragment.app.Fragment: int ATTACHED
com.getcapacitor.PluginResult: com.getcapacitor.JSObject json
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String CAMERA
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$startNotifications$1: com.capacitorjs.community.plugins.bluetoothle.Device $device
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment$1: com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment this$0
com.getcapacitor.JSExport: java.lang.String CATCHALL_OPTIONS_PARAM
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$stopNotifications$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
com.getcapacitor.UriMatcher: java.lang.String mText
androidx.fragment.app.Fragment: int STARTED
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry
androidx.fragment.app.Fragment: android.os.Bundle mArguments
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
com.getcapacitor.cordova.MockCordovaWebViewImpl: com.getcapacitor.cordova.CapacitorCordovaCookieManager cookieManager
com.getcapacitor.CapConfig$Builder: int minWebViewVersion
androidx.fragment.app.Fragment: int mFragmentId
com.capacitorjs.plugins.camera.CameraSettings: boolean DEFAULT_SAVE_IMAGE_TO_GALLERY
com.capacitorjs.plugins.camera.ExifWrapper: java.lang.String[] attributes
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
com.getcapacitor.ServerPath$PathType: com.getcapacitor.ServerPath$PathType[] $VALUES
com.capacitorjs.plugins.camera.CameraSource: com.capacitorjs.plugins.camera.CameraSource PHOTOS
com.getcapacitor.PluginMethodHandle: java.lang.reflect.Method method
com.getcapacitor.UriMatcher: int TEXT
com.getcapacitor.UriMatcher: java.util.ArrayList mChildren
com.capacitorjs.plugins.camera.CameraSettings: com.capacitorjs.plugins.camera.CameraResultType resultType
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$disconnect$1: com.capacitorjs.community.plugins.bluetoothle.Device $device
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnTrimMemoryListeners
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.fragment.app.Fragment: int mContainerId
com.capacitorjs.plugins.camera.CameraPlugin: android.net.Uri imageFileUri
com.getcapacitor.Bridge: java.util.Map plugins
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String imageEditedFileSavePath
com.getcapacitor.PluginMethod: java.lang.String RETURN_NONE
com.capacitorjs.community.plugins.bluetoothle.Device: int connectionState
com.getcapacitor.cordova.MockCordovaWebViewImpl$CapacitorEvalBridgeMode: android.webkit.WebView webView
kotlin.jvm.internal.Lambda: int arity
androidx.fragment.app.FragmentTabHost$SavedState: android.os.Parcelable$Creator CREATOR
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String NO_PHOTO_ACTIVITY_ERROR
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner$scanCallback$1: com.capacitorjs.community.plugins.bluetoothle.DeviceScanner this$0
com.capacitorjs.plugins.camera.CameraResultType: com.capacitorjs.plugins.camera.CameraResultType DATAURL
com.capacitorjs.plugins.camera.CameraSettings: boolean shouldResize
com.getcapacitor.PluginConfig: org.json.JSONObject config
com.getcapacitor.CapConfig: boolean webContentsDebuggingEnabled
com.capacitorjs.community.plugins.bluetoothle.Device: java.lang.String CLIENT_CHARACTERISTIC_CONFIG
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.capacitorjs.plugins.camera.CameraPlugin: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String CACHE_DIRECTORY_BASE_PATH
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$stopNotifications$1: com.getcapacitor.PluginCall $call
com.getcapacitor.CapConfig: boolean zoomableWebView
com.google.android.material.internal.ParcelableSparseIntArray: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.DialogFragment: java.lang.String SAVED_DIALOG_STATE_TAG
com.getcapacitor.CapConfig$Builder: java.lang.String serverUrl
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.capacitorjs.plugins.camera.CameraSettings: int DEFAULT_QUALITY
org.apache.cordova.AllowListPlugin: java.lang.String PLUGIN_NAME
com.getcapacitor.plugin.CapacitorCookieManager: java.lang.String TAG
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestDevice$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
com.capacitorjs.plugins.camera.CameraSettings: com.capacitorjs.plugins.camera.CameraSource source
com.google.android.material.badge.BadgeState$State: android.os.Parcelable$Creator CREATOR
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$readRssi$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: com.capacitorjs.community.plugins.bluetoothle.DeviceList deviceList
androidx.fragment.app.DialogFragment: boolean mDialogCreated
org.apache.cordova.CordovaPlugin: org.apache.cordova.CordovaInterface cordova
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$getOrCreateDevice$newDevice$1: java.lang.String $deviceId
com.getcapacitor.WebViewLocalServer: java.lang.String basePath
com.getcapacitor.PluginMethod: java.lang.String RETURN_CALLBACK
com.getcapacitor.Plugin: java.lang.String BUNDLE_PERSISTED_OPTIONS_JSON_KEY
com.getcapacitor.util.HostMask$Parser: com.getcapacitor.util.HostMask NOTHING
com.getcapacitor.Bridge: com.getcapacitor.cordova.MockCordovaInterfaceImpl cordovaInterface
com.getcapacitor.BridgeWebChromeClient: androidx.activity.result.ActivityResultLauncher permissionLauncher
com.getcapacitor.CapConfig: java.lang.String appendedUserAgentString
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String DATA_DIRECTORY_BASE_PATH
com.getcapacitor.WebViewLocalServer$LazyInputStream: com.getcapacitor.WebViewLocalServer$PathHandler handler
com.getcapacitor.Plugin: java.util.Map permissionLaunchers
androidx.fragment.app.Fragment: boolean mAdded
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: java.util.ArrayList deviceStrings
com.getcapacitor.Bridge: java.lang.String appUrl
com.getcapacitor.PluginCall: java.lang.String pluginId
androidx.fragment.app.Fragment: java.util.ArrayList mOnPreAttachedListeners
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String IMAGE_EDIT_ERROR
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$writeDescriptor$1: com.getcapacitor.PluginCall $call
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment: com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment$BottomSheetOnCanceledListener canceledListener
com.getcapacitor.plugin.util.AssetUtil: java.lang.String STORAGE_FOLDER
com.getcapacitor.Bridge$Builder: androidx.appcompat.app.AppCompatActivity activity
com.getcapacitor.Bridge: android.os.Handler taskHandler
androidx.fragment.app.Fragment: boolean mInLayout
com.getcapacitor.plugin.util.MimeType: com.getcapacitor.plugin.util.MimeType APPLICATION_VND_API_JSON
androidx.fragment.app.DialogFragment: java.lang.String SAVED_CANCELABLE
com.getcapacitor.plugin.CapacitorCookies: com.getcapacitor.plugin.CapacitorCookieManager cookieManager
com.google.android.material.bottomsheet.BottomSheetDialogFragment: boolean waitingForDismissAllowingStateLoss
com.capacitorjs.plugins.camera.CameraPlugin: androidx.activity.result.ActivityResultLauncher pickMedia
com.getcapacitor.Bridge: java.lang.String MINIMUM_ANDROID_WEBVIEW_ERROR
com.getcapacitor.Bridge: org.apache.cordova.CordovaPreferences preferences
com.getcapacitor.JSInjector: java.lang.String localUrlJS
androidx.fragment.app.DialogFragment: int mTheme
com.capacitorjs.community.plugins.bluetoothle.Device: android.os.HandlerThread callbacksHandlerThread
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestLEScan$2: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.getcapacitor.android.R$layout: int bridge_layout_main
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
com.getcapacitor.CapConfig$Builder: boolean loggingEnabled
com.getcapacitor.ProcessedRoute: boolean isAsset
com.getcapacitor.CapConfig: java.lang.String serverUrl
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
com.getcapacitor.Bridge$Builder: com.getcapacitor.CapConfig config
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: android.os.Handler dialogHandler
androidx.fragment.app.Fragment: android.view.View mView
org.apache.cordova.CordovaInterfaceImpl: android.os.Bundle savedPluginState
com.getcapacitor.CapConfig: boolean loggingEnabled
androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: com.capacitorjs.community.plugins.bluetoothle.DeviceScanner$Companion Companion
com.getcapacitor.Bridge: java.lang.String PERMISSION_PREFS_NAME
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$readDescriptor$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
org.apache.cordova.CordovaInterfaceImpl: java.util.concurrent.ExecutorService threadPool
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType: java.lang.String name
androidx.fragment.app.Fragment: boolean mPerformedCreateView
androidx.fragment.app.FragmentActivity: boolean mStopped
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: android.os.Parcelable$Creator CREATOR
com.getcapacitor.PermissionState: com.getcapacitor.PermissionState[] $VALUES
com.getcapacitor.PluginMethodHandle: java.lang.String returnType
com.getcapacitor.plugin.util.MimeType: java.lang.String value
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$connect$1: com.getcapacitor.PluginCall $call
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: com.getcapacitor.plugin.util.CapacitorHttpUrlConnection connection
com.capacitorjs.plugins.camera.CameraSettings: boolean DEFAULT_CORRECT_ORIENTATION
androidx.fragment.app.Fragment: boolean mDeferStart
com.getcapacitor.Plugin: com.getcapacitor.PluginCall savedLastCall
com.google.android.material.datepicker.RangeDateSelector: android.os.Parcelable$Creator CREATOR
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType: com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType JSON
com.getcapacitor.Bridge: java.lang.String CAPACITOR_HTTP_INTERCEPTOR_URL_PARAM
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnMultiWindowModeChangedListeners
kotlin.random.Random$Default$Serialized: long serialVersionUID
com.getcapacitor.CapConfig$Builder: java.util.Map pluginsConfiguration
kotlin.collections.EmptySet: long serialVersionUID
com.getcapacitor.Bridge: java.lang.String LAST_BINARY_VERSION_CODE
com.getcapacitor.WebViewLocalServer: boolean html5mode
com.capacitorjs.community.plugins.bluetoothle.DisplayStrings: java.lang.String scanning
com.getcapacitor.plugin.CapacitorCookieManager: android.webkit.CookieManager webkitCookieManager
androidx.fragment.app.DialogFragment: android.os.Handler mHandler
com.getcapacitor.plugin.util.MimeType: com.getcapacitor.plugin.util.MimeType TEXT_HTML
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$writeWithoutResponse$1: com.getcapacitor.PluginCall $call
com.capacitorjs.community.plugins.bluetoothle.TimeoutHandler: java.lang.String key
com.getcapacitor.PluginManager: android.content.res.AssetManager assetManager
androidx.fragment.app.Fragment: boolean mFromLayout
com.getcapacitor.AndroidProtocolHandler: boolean $assertionsDisabled
com.google.android.material.navigation.NavigationBarPresenter$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.capacitorjs.community.plugins.bluetoothle.Device$resolve$1: java.lang.String $key
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String NO_CAMERA_ACTIVITY_ERROR
com.getcapacitor.WebViewLocalServer$PathHandler: java.lang.String encoding
com.capacitorjs.community.plugins.bluetoothle.Device: android.content.BroadcastReceiver bondStateReceiver
com.getcapacitor.PluginHandle: java.util.Map pluginMethods
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: java.lang.String[] aliases
com.getcapacitor.PermissionState: java.lang.String state
com.getcapacitor.plugin.CapacitorHttp: java.util.concurrent.ExecutorService executor
com.capacitorjs.community.plugins.bluetoothle.Device: int STATE_CONNECTED
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: android.widget.ArrayAdapter adapter
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: android.app.AlertDialog dialog
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: java.lang.String TAG
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.getcapacitor.Bridge: com.getcapacitor.RouteProcessor routeProcessor
com.getcapacitor.plugin.util.AssetUtil: android.content.Context context
androidx.fragment.app.Fragment: boolean mRemoving
com.getcapacitor.Bridge: java.util.List initialPlugins
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestLEScan$1: com.getcapacitor.PluginCall $call
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
androidx.fragment.app.DialogFragment: int STYLE_NO_TITLE
com.capacitorjs.plugins.camera.CameraSource: com.capacitorjs.plugins.camera.CameraSource CAMERA
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String IMAGE_PROCESS_NO_FILE_ERROR
com.getcapacitor.CapConfig$Builder: java.lang.String[] allowNavigation
androidx.fragment.app.Fragment: java.lang.String mPreviousWho
org.apache.cordova.CordovaWebViewImpl: java.lang.String TAG
com.getcapacitor.Plugin: java.util.Map eventListeners
com.getcapacitor.android.R$color: int colorPrimary
com.capacitorjs.plugins.camera.CameraSettings: boolean shouldCorrectOrientation
com.getcapacitor.MessageHandler: org.apache.cordova.PluginManager cordovaPluginManager
com.getcapacitor.Bridge$1: com.getcapacitor.Bridge this$0
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$getOrCreateDevice$newDevice$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
com.capacitorjs.community.plugins.bluetoothle.Device$reject$1: java.lang.String $key
com.capacitorjs.plugins.camera.CameraResultType: com.capacitorjs.plugins.camera.CameraResultType BASE64
com.capacitorjs.plugins.camera.CameraResultType: com.capacitorjs.plugins.camera.CameraResultType[] $VALUES
com.getcapacitor.BridgeActivity: java.util.List initialPlugins
com.google.android.material.navigation.NavigationView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnPictureInPictureModeChangedListeners
com.getcapacitor.Bridge: android.os.HandlerThread handlerThread
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String SAVE_GALLERY
com.getcapacitor.WebViewLocalServer: java.util.ArrayList authorities
androidx.fragment.app.DialogFragment: int STYLE_NO_INPUT
com.capacitorjs.plugins.camera.CameraSettings: int height
com.getcapacitor.Bridge: androidx.appcompat.app.AppCompatActivity context
androidx.fragment.app.Fragment: boolean mRetainInstance
com.capacitorjs.community.plugins.bluetoothle.ScanResponse: java.lang.String message
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: boolean showDialog
com.getcapacitor.BridgeActivity: com.getcapacitor.CapConfig config
com.getcapacitor.WebViewLocalServer$PathHandler: java.util.Map responseHeaders
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$writeWithoutResponse$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
com.getcapacitor.CapConfig: java.lang.String androidScheme
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.getcapacitor.CapConfig$Builder: java.lang.String appendedUserAgentString
com.capacitorjs.community.plugins.bluetoothle.Device$gattCallback$1: com.capacitorjs.community.plugins.bluetoothle.Device this$0
com.getcapacitor.BridgeActivity: boolean keepRunning
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$startNotifications$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
com.capacitorjs.plugins.camera.CameraSettings: boolean saveToGallery
com.capacitorjs.community.plugins.bluetoothle.DeviceList: java.util.ArrayList devices
com.getcapacitor.plugin.WebView: java.lang.String WEBVIEW_PREFS_NAME
com.getcapacitor.Bridge: android.webkit.WebView webView
androidx.fragment.app.Fragment: boolean mMenuVisible
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnConfigurationChangedListeners
androidx.fragment.app.Fragment: int mState
com.getcapacitor.PluginHandle: com.getcapacitor.NativePlugin legacyPluginAnnotation
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$readDescriptor$1: com.getcapacitor.PluginCall $call
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
com.getcapacitor.android.R$layout: int capacitor_bridge_layout_main
com.google.android.material.slider.RangeSlider$RangeSliderState: android.os.Parcelable$Creator CREATOR
androidx.activity.ComponentActivity: boolean mDispatchingOnPictureInPictureModeChanged
androidx.fragment.app.DialogFragment: boolean mCreatingDialog
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.getcapacitor.CapConfig: java.lang.String hostname
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap extraDataMap
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnDismissListener mOnDismissListener
com.capacitorjs.community.plugins.bluetoothle.Device: int currentMtu
com.getcapacitor.Bridge: java.util.ArrayList authorities
com.getcapacitor.ServerPath$PathType: com.getcapacitor.ServerPath$PathType ASSET_PATH
com.getcapacitor.PluginHandle: com.getcapacitor.annotation.CapacitorPlugin pluginAnnotation
androidx.fragment.app.Fragment: boolean mIsCreated
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: java.lang.Integer readTimeout
androidx.fragment.app.DialogFragment: boolean mShowsDialog
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: android.bluetooth.le.BluetoothLeScanner bluetoothLeScanner
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType: com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType DOCUMENT
com.getcapacitor.WebViewLocalServer$PathHandler: java.lang.String charset
com.capacitorjs.community.plugins.bluetoothle.Device: android.bluetooth.BluetoothGattCallback gattCallback
com.getcapacitor.plugin.WebView: java.lang.String CAP_SERVER_PATH
com.capacitorjs.plugins.camera.CameraSettings: int width
com.getcapacitor.Bridge$Builder: java.util.List plugins
com.getcapacitor.Bridge: java.lang.String CAPACITOR_FILE_START
com.google.android.material.internal.ParcelableSparseArray: android.os.Parcelable$Creator CREATOR
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$startNotifications$2: com.getcapacitor.PluginCall $call
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
com.getcapacitor.BridgeActivity: int activityDepth
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.getcapacitor.JSInjector: java.lang.String cordovaPluginsJS
com.getcapacitor.JSInjector: java.lang.String cordovaPluginsFileJS
androidx.appcompat.app.AppCompatActivity: java.lang.String DELEGATE_TAG
com.getcapacitor.WebViewLocalServer$LazyInputStream: java.io.InputStream is
com.getcapacitor.JSInjector: java.lang.String pluginJS
com.getcapacitor.android.R$id: int textView
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
com.getcapacitor.Bridge: com.getcapacitor.App app
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: boolean allowDuplicates
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$readRssi$1: com.getcapacitor.PluginCall $call
com.getcapacitor.FileUtils: java.lang.String CapacitorFileScheme
androidx.fragment.app.FragmentActivity: boolean mCreated
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType: com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType ARRAY_BUFFER
com.getcapacitor.Bridge: java.lang.String CAPACITOR_HTTPS_INTERCEPTOR_START
com.getcapacitor.BridgeWebChromeClient: com.getcapacitor.Bridge bridge
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport: int BROWSER
com.capacitorjs.community.plugins.bluetoothle.ScanResponse: boolean success
com.getcapacitor.cordova.MockCordovaWebViewImpl: org.apache.cordova.CordovaInterface cordova
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.getcapacitor.Bridge: int DEFAULT_HUAWEI_WEBVIEW_VERSION
com.getcapacitor.android.R$id: int webview
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
com.getcapacitor.WebViewLocalServer: com.getcapacitor.UriMatcher uriMatcher
com.getcapacitor.WebViewLocalServer$1: com.getcapacitor.WebViewLocalServer this$0
com.capacitorjs.community.plugins.bluetoothle.Device: java.lang.String address
com.getcapacitor.android.R$layout: int no_webview
com.getcapacitor.FileUtils$Type: java.lang.String type
com.getcapacitor.Bridge$Builder: com.getcapacitor.ServerPath serverPath
com.capacitorjs.plugins.camera.ExifWrapper: androidx.exifinterface.media.ExifInterface exif
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: com.capacitorjs.community.plugins.bluetoothle.DeviceScanner deviceScanner
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_ARRAY_BUFFER
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: android.os.Handler stopScanHandler
com.getcapacitor.plugin.CapacitorHttp: java.util.Map activeRequests
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String UNABLE_TO_PROCESS_IMAGE
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType: com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType BLOB
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment: com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback mBottomSheetBehaviorCallback
com.getcapacitor.CapConfig: java.lang.String LOG_BEHAVIOR_NONE
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String USER_CANCELLED
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
com.getcapacitor.WebViewLocalServer$PathHandler: java.lang.String reasonPhrase
com.capacitorjs.community.plugins.bluetoothle.CallbackResponse: java.lang.String value
com.getcapacitor.UriMatcher: java.util.regex.Pattern PATH_SPLIT_PATTERN
com.capacitorjs.community.plugins.bluetoothle.DisplayStrings: java.lang.String cancel
com.getcapacitor.MessageHandler: com.getcapacitor.Bridge bridge
com.getcapacitor.CapConfig: int minWebViewVersion
com.getcapacitor.CapConfig: java.lang.String backgroundColor
com.getcapacitor.Bridge: java.util.List pluginInstances
com.getcapacitor.Bridge: java.util.ArrayList miscJSFileInjections
com.getcapacitor.Bridge: com.getcapacitor.ServerPath serverPath
com.capacitorjs.community.plugins.bluetoothle.ScanResponse: android.bluetooth.BluetoothDevice device
org.apache.cordova.CordovaInterfaceImpl: java.lang.String initCallbackService
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String PHOTOS
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: boolean isScanning
androidx.fragment.app.DialogFragment: java.lang.String SAVED_BACK_STACK_ID
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$startNotifications$2: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
com.getcapacitor.cordova.MockCordovaWebViewImpl: org.apache.cordova.NativeToJsMessageQueue nativeToJsMessageQueue
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: android.bluetooth.le.ScanCallback scanCallback
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: com.getcapacitor.JSObject headers
com.getcapacitor.Bridge$Builder: com.getcapacitor.RouteProcessor routeProcessor
com.getcapacitor.Plugin: com.getcapacitor.PluginHandle handle
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
com.getcapacitor.PluginHandle: java.lang.String pluginId
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
com.getcapacitor.WebViewLocalServer: java.lang.String capacitorContentStart
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$Companion Companion
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: java.lang.Boolean disableRedirects
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestDevice$1: com.getcapacitor.PluginCall $call
com.capacitorjs.community.plugins.bluetoothle.Device: int STATE_DISCONNECTED
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
com.getcapacitor.App: boolean isActive
com.getcapacitor.UriMatcher: int MASK
com.capacitorjs.plugins.camera.CameraResultType: java.lang.String type
com.capacitorjs.plugins.camera.CameraPlugin$1: int[] $SwitchMap$com$capacitorjs$plugins$camera$CameraSource
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.getcapacitor.Bridge: java.lang.String DEFAULT_WEB_ASSET_DIR
com.getcapacitor.Bridge: com.getcapacitor.MessageHandler msgHandler
com.getcapacitor.PluginCall: boolean keepAlive
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
com.capacitorjs.plugins.camera.CameraSource: com.capacitorjs.plugins.camera.CameraSource PROMPT
com.getcapacitor.CapConfig$Builder: java.lang.String androidScheme
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: java.lang.Long scanDuration
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestLEScan$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.Fragment: int mContentLayoutId
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: java.util.HashMap deviceMap
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
com.getcapacitor.ProcessedRoute: java.lang.String path
com.getcapacitor.Plugin: java.lang.String lastPluginCallId
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
com.getcapacitor.WebViewLocalServer: java.lang.String capacitorFileStart
com.getcapacitor.cordova.MockCordovaWebViewImpl: org.apache.cordova.CordovaPreferences preferences
com.getcapacitor.PluginHandle: java.lang.Class pluginClass
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$disconnect$1: com.getcapacitor.PluginCall $call
com.capacitorjs.community.plugins.bluetoothle.Device: java.util.HashMap callbackMap
com.google.android.material.checkbox.MaterialCheckBox$SavedState: android.os.Parcelable$Creator CREATOR
com.getcapacitor.PluginMethodHandle: java.lang.String name
com.capacitorjs.plugins.camera.CameraSource: com.capacitorjs.plugins.camera.CameraSource[] $VALUES
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry lifecycleRegistry
com.getcapacitor.PluginHandle: com.getcapacitor.Bridge bridge
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$createStateReceiver$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
androidx.fragment.app.DialogFragment: androidx.lifecycle.Observer mObserver
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport: int APP
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport: int NONE
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$startNotifications$1: kotlin.Pair $characteristic
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
androidx.viewpager2.widget.ViewPager2$SavedState: android.os.Parcelable$Creator CREATOR
com.getcapacitor.android.R$style: int AppTheme_NoActionBar
androidx.fragment.app.DialogFragment: boolean mCancelable
com.capacitorjs.community.plugins.bluetoothle.DisplayStrings: java.lang.String availableDevices
androidx.fragment.app.Fragment: boolean mRestored
com.getcapacitor.CapConfig: boolean useLegacyBridge
org.apache.cordova.CordovaInterfaceImpl: org.apache.cordova.CordovaPlugin activityResultCallback
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: com.capacitorjs.community.plugins.bluetoothle.DisplayStrings displayStrings
com.getcapacitor.ServerPath: java.lang.String path
com.getcapacitor.PermissionState: com.getcapacitor.PermissionState PROMPT
com.getcapacitor.Bridge: java.lang.String CAPACITOR_HTTP_INTERCEPTOR_START
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$writeDescriptor$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
androidx.fragment.app.Fragment: java.lang.String mTag
com.getcapacitor.Bridge: int MINIMUM_HUAWEI_WEBVIEW_VERSION
com.capacitorjs.community.plugins.bluetoothle.Device: android.os.Handler callbacksHandler
androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper
com.getcapacitor.CapConfig: org.json.JSONObject configJSON
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
androidx.activity.ComponentActivity: androidx.activity.ComponentActivity$ReportFullyDrawnExecutor mReportFullyDrawnExecutor
com.getcapacitor.WebViewLocalServer$1: java.lang.String val$assetPath
com.getcapacitor.CapConfig: java.lang.String LOG_BEHAVIOR_PRODUCTION
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$discoverServices$1: com.capacitorjs.community.plugins.bluetoothle.BluetoothLe this$0
com.capacitorjs.plugins.camera.CameraSettings: int quality
com.getcapacitor.CapConfig$Builder: java.lang.String startPath
com.capacitorjs.plugins.camera.CameraSource: java.lang.String source
com.getcapacitor.JSInjector: java.lang.String miscJS
com.getcapacitor.plugin.CapacitorHttp$1: java.lang.String val$httpMethod
com.getcapacitor.CapConfig$Builder: java.lang.String backgroundColor
com.getcapacitor.JSInjector: java.lang.String globalJS
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate mDelegate
com.getcapacitor.PluginCall: boolean isReleased
com.getcapacitor.CapConfig$Builder: boolean resolveServiceWorkerRequests
com.getcapacitor.Bridge: java.lang.String CAPACITOR_CONTENT_START
com.getcapacitor.BridgeWebChromeClient: androidx.activity.result.ActivityResultLauncher activityLauncher
androidx.activity.ComponentActivity: int mContentLayoutId
androidx.fragment.app.Fragment: int mBackStackNesting
androidx.transition.ChangeBounds$6: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: long MAX_SCAN_DURATION
com.getcapacitor.CapConfig$Builder: boolean zoomableWebView
com.getcapacitor.Bridge: java.lang.String BUNDLE_LAST_PLUGIN_CALL_METHOD_NAME_KEY
androidx.fragment.app.Fragment: java.lang.String mWho
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager
com.getcapacitor.CapConfig: boolean html5mode
com.getcapacitor.AppUUID: java.lang.String KEY
org.apache.cordova.CordovaInterfaceImpl: org.apache.cordova.CallbackMap permissionResultCallbacks
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.getcapacitor.WebViewLocalServer$LollipopLazyInputStream: android.webkit.WebResourceRequest request
com.getcapacitor.plugin.CapacitorHttp$1: com.getcapacitor.PluginCall val$call
com.getcapacitor.android.R$color: int colorAccent
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: android.content.Context context
org.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity activity
com.getcapacitor.BridgeActivity: com.getcapacitor.Bridge$Builder bridgeBuilder
androidx.fragment.app.DialogFragment: boolean mShownByMe
com.capacitorjs.plugins.camera.CameraResultType: com.capacitorjs.plugins.camera.CameraResultType URI
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment: java.lang.String title
com.getcapacitor.BridgeWebChromeClient: com.getcapacitor.BridgeWebChromeClient$ActivityResultListener activityListener
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.getcapacitor.CapConfig$Builder: boolean useLegacyBridge
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.google.android.material.slider.BaseSlider$SliderState: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_STRING
com.getcapacitor.PluginCall: com.getcapacitor.MessageHandler msgHandler
com.getcapacitor.cordova.MockCordovaWebViewImpl: boolean hasPausedEver
com.capacitorjs.community.plugins.bluetoothle.Device: int REQUEST_MTU
com.getcapacitor.cordova.CapacitorCordovaCookieManager: android.webkit.CookieManager cookieManager
com.capacitorjs.community.plugins.bluetoothle.Device: java.util.concurrent.ConcurrentLinkedQueue timeoutQueue
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: java.net.URL url
com.capacitorjs.plugins.camera.CameraPlugin: java.lang.String READ_EXTERNAL_STORAGE
com.getcapacitor.cordova.MockCordovaWebViewImpl: org.apache.cordova.PluginManager pluginManager
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
com.getcapacitor.CapacitorWebView: android.view.inputmethod.BaseInputConnection capInputConnection
com.capacitorjs.community.plugins.bluetoothle.Device: android.bluetooth.BluetoothGatt bluetoothGatt
com.getcapacitor.CapConfig$Builder: int minHuaweiWebViewVersion
com.getcapacitor.WebViewLocalServer: boolean isAsset
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType: com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType[] $VALUES
com.getcapacitor.Bridge: java.util.Map savedCalls
com.getcapacitor.PermissionState: com.getcapacitor.PermissionState GRANTED
com.getcapacitor.PluginHandle: com.getcapacitor.Plugin instance
com.getcapacitor.Bridge: android.net.Uri intentUri
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
org.apache.cordova.engine.SystemWebViewEngine: java.lang.String TAG
com.getcapacitor.UriMatcher: int EXACT
com.getcapacitor.PermissionState: com.getcapacitor.PermissionState PROMPT_WITH_RATIONALE
com.getcapacitor.CapConfig$Builder: java.lang.Boolean webContentsDebuggingEnabled
com.getcapacitor.JSValue: java.lang.Object value
androidx.fragment.app.Fragment: int mTargetRequestCode
androidx.activity.ComponentActivity: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int PREFER_MEDIA_QUERY_OVER_FORCE_DARK
com.getcapacitor.cordova.MockCordovaWebViewImpl: android.webkit.WebView webView
com.capacitorjs.community.plugins.bluetoothle.TimeoutHandler: android.os.Handler handler
androidx.fragment.app.Fragment: boolean mDetached
com.getcapacitor.CapConfig$Builder: boolean initialFocus
com.getcapacitor.plugin.CapacitorCookieManager: java.lang.String localUrl
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
com.getcapacitor.ProcessedRoute: boolean ignoreAssetPath
com.google.android.material.search.SearchBar$SavedState: android.os.Parcelable$Creator CREATOR
com.getcapacitor.CapConfig$Builder: boolean html5mode
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: java.lang.String TAG
com.google.android.material.internal.ParcelableSparseBooleanArray: android.os.Parcelable$Creator CREATOR
com.getcapacitor.Bridge: int DEFAULT_ANDROID_WEBVIEW_VERSION
com.google.android.material.navigation.NavigationBarView$SavedState: android.os.Parcelable$Creator CREATOR
com.getcapacitor.WebViewLocalServer: com.getcapacitor.AndroidProtocolHandler protocolHandler
com.getcapacitor.BridgeWebViewClient: com.getcapacitor.Bridge bridge
com.getcapacitor.android.R$string: int no_webview_text
com.getcapacitor.Bridge$Builder: java.util.List pluginInstances
com.getcapacitor.CapConfig: java.lang.String adjustMarginsForEdgeToEdge
com.getcapacitor.plugin.CapacitorHttp$1: com.getcapacitor.plugin.CapacitorHttp this$0
com.capacitorjs.community.plugins.bluetoothle.DisplayStrings: java.lang.String noDeviceFound
com.getcapacitor.CapConfig: boolean captureInput
androidx.fragment.app.DialogFragment: int mStyle
com.getcapacitor.Bridge: com.getcapacitor.WebViewLocalServer localServer
com.getcapacitor.AndroidProtocolHandler: android.content.Context context
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String DATA_DIRECTORY_SUFFIX
com.getcapacitor.JSInjector: java.lang.String bridgeJS
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.getcapacitor.CapConfig: boolean initialFocus
androidx.fragment.app.Fragment: int INITIALIZING
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.getcapacitor.plugin.CapacitorCookieManager: java.lang.String serverUrl
com.capacitorjs.community.plugins.bluetoothle.CallbackResponse: boolean success
com.google.android.material.chip.Chip: void setElevation(float)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.drawable.DrawableUtils$OutlineCompatL: void setConvexPath(android.graphics.Outline,android.graphics.Path)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
com.getcapacitor.CapConfig: boolean isUsingLegacyBridge()
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner$scanCallback$1: void onScanResult(int,android.bluetooth.le.ScanResult)
com.getcapacitor.Bridge: void setCordovaWebView(org.apache.cordova.CordovaWebView)
com.getcapacitor.PluginMethodHandle: java.lang.String getReturnType()
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(kotlin.jvm.functions.Function0)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
com.capacitorjs.community.plugins.bluetoothle.DisplayStrings: java.lang.String getAvailableDevices()
com.getcapacitor.InvalidPluginMethodException: InvalidPluginMethodException(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setRawInputType(int)
androidx.fragment.app.Fragment: boolean isInBackStack()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
com.getcapacitor.cordova.MockCordovaWebViewImpl: boolean canGoBack()
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.getcapacitor.Bridge: android.webkit.WebView getWebView()
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
com.getcapacitor.cordova.CapacitorCordovaCookieManager: void flush()
org.apache.cordova.CordovaWebViewImpl: org.apache.cordova.PluginManager getPluginManager()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.capacitorjs.community.plugins.bluetoothle.ScanResponse: ScanResponse(boolean,java.lang.String,android.bluetooth.BluetoothDevice)
androidx.fragment.app.Fragment: void performDestroy()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$stopNotifications$1: BluetoothLe$stopNotifications$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,com.getcapacitor.PluginCall)
com.getcapacitor.NativePlugin: int permissionRequestCode()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.getcapacitor.CapConfig: boolean isInitialFocus()
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.net.Uri cache(byte[],java.lang.String,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemRowTitle(java.lang.Object)
androidx.appcompat.app.AppCompatDialogFragment: AppCompatDialogFragment()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
org.apache.cordova.CordovaWebViewImpl: void sendJavascript(java.lang.String)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.capacitorjs.community.plugins.bluetoothle.Device$gattCallback$1: Device$gattCallback$1(com.capacitorjs.community.plugins.bluetoothle.Device)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.getcapacitor.plugin.CapacitorCookieManager: java.net.CookieStore getCookieStore()
com.getcapacitor.JSExport: java.lang.String getBridgeJS(android.content.Context)
com.capacitorjs.plugins.camera.CameraSettings: void setShouldResize(boolean)
com.getcapacitor.CapConfig: boolean isHTML5Mode()
com.getcapacitor.BridgeActivity: void onResume()
androidx.fragment.app.Fragment: void setMenuVisibility(boolean)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.android.material.button.MaterialButton: void setElevation(float)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
com.capacitorjs.plugins.camera.ExifWrapper: void resetOrientation()
com.getcapacitor.FileUtils: boolean isGooglePhotosUri(android.net.Uri)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
com.capacitorjs.community.plugins.bluetoothle.Device$gattCallback$1: void onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic)
androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()
com.getcapacitor.Bridge: void releaseCall(com.getcapacitor.PluginCall)
com.google.android.material.appbar.MaterialToolbar: void setLogoAdjustViewBounds(boolean)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.capacitorjs.community.plugins.bluetoothle.Device: Device(android.content.Context,android.bluetooth.BluetoothAdapter,java.lang.String,kotlin.jvm.functions.Function0)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
androidx.appcompat.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.getcapacitor.PluginResult: com.getcapacitor.PluginResult put(java.lang.String,boolean)
com.getcapacitor.PermissionState: com.getcapacitor.PermissionState[] values()
com.getcapacitor.Plugin: boolean hasDefinedRequiredPermissions()
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
org.apache.cordova.CordovaPlugin: void onActivityResult(int,int,android.content.Intent)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.getcapacitor.CapConfig: CapConfig(com.getcapacitor.CapConfig$Builder)
com.getcapacitor.Bridge$Builder: com.getcapacitor.Bridge$Builder addPlugin(java.lang.Class)
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingAllowlist(java.util.Set,android.webkit.ValueCallback)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxInlineActionWidth()
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintList(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$write$1: BluetoothLe$write$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,com.getcapacitor.PluginCall)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.getcapacitor.plugin.CapacitorCookies: void setCookie(com.getcapacitor.PluginCall)
androidx.fragment.app.Fragment: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
com.getcapacitor.plugin.CapacitorCookieManager: void flush()
com.getcapacitor.PluginInvocationException: PluginInvocationException(java.lang.String)
com.getcapacitor.Plugin: boolean hasDefinedPermissions(java.lang.String[])
com.google.android.material.chip.Chip: float getTextStartPadding()
com.getcapacitor.Bridge: java.lang.String getHost()
com.capacitorjs.plugins.camera.CameraPlugin: void lambda$openPhotos$2(java.util.List,com.getcapacitor.PluginCall)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
org.apache.cordova.engine.SystemWebViewEngine: void destroy()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void discoverServices(com.getcapacitor.PluginCall)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
kotlin.random.Random$Default: java.lang.Object writeReplace()
com.getcapacitor.ServerPath$PathType: com.getcapacitor.ServerPath$PathType[] values()
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl: void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
org.apache.cordova.NativeToJsMessageQueue$BridgeMode: void reset()
com.getcapacitor.Bridge$Builder: com.getcapacitor.Bridge$Builder setConfig(com.getcapacitor.CapConfig)
com.getcapacitor.BridgeWebChromeClient: void lambda$showFilePicker$15(android.webkit.ValueCallback,androidx.activity.result.ActivityResult)
com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismissAllowingStateLoss()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
org.apache.cordova.CordovaPlugin: android.os.Bundle onSaveInstanceState()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.appcompat.app.AppCompatActivity: boolean supportRequestWindowFeature(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
org.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageFinishedLoading(java.lang.String)
com.getcapacitor.BridgeActivity: void load()
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
com.getcapacitor.BridgeActivity: void onCreate(android.os.Bundle)
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.getcapacitor.Bridge: Bridge(androidx.appcompat.app.AppCompatActivity,com.getcapacitor.ServerPath,androidx.fragment.app.Fragment,android.webkit.WebView,java.util.List,java.util.List,com.getcapacitor.cordova.MockCordovaInterfaceImpl,org.apache.cordova.PluginManager,org.apache.cordova.CordovaPreferences,com.getcapacitor.CapConfig)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setContainerTitle(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
com.getcapacitor.ServerPath$PathType: com.getcapacitor.ServerPath$PathType valueOf(java.lang.String)
org.apache.cordova.CordovaWebViewImpl: void handleStop()
org.apache.cordova.CordovaWebViewImpl: CordovaWebViewImpl(org.apache.cordova.CordovaWebViewEngine)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.getcapacitor.Plugin: java.lang.Object getConfigValue(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
com.getcapacitor.Bridge: boolean validatePermissions(com.getcapacitor.Plugin,com.getcapacitor.PluginCall,java.util.Map)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.getcapacitor.Bridge$1: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
com.getcapacitor.Logger: void warn(java.lang.String,java.lang.String)
com.getcapacitor.WebViewLocalServer: void hostAssets(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.DeviceList: boolean addDevice(android.bluetooth.BluetoothDevice)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
com.getcapacitor.Plugin: void saveCall(com.getcapacitor.PluginCall)
com.getcapacitor.Plugin: void setBridge(com.getcapacitor.Bridge)
androidx.fragment.app.Fragment: void performViewCreated()
com.getcapacitor.BridgeWebChromeClient: void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback)
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
androidx.constraintlayout.helper.widget.Flow: void setVerticalAlign(int)
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
org.apache.cordova.CordovaInterfaceImpl: void restoreInstanceState(android.os.Bundle)
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.getcapacitor.Plugin: void addEventListener(java.lang.String,com.getcapacitor.PluginCall)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void access$onDisconnect(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,java.lang.String)
com.getcapacitor.UriMatcher: UriMatcher(java.lang.Object)
com.getcapacitor.JSExport: org.json.JSONObject createPluginHeader(com.getcapacitor.PluginHandle)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
com.getcapacitor.cordova.MockCordovaWebViewImpl: org.apache.cordova.ICordovaCookieManager getCookieManager()
com.getcapacitor.plugin.CapacitorHttp: void put(com.getcapacitor.PluginCall)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
com.getcapacitor.Plugin: java.util.Map getPermissionStates()
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.getcapacitor.PluginHandle: PluginHandle(java.lang.Class,com.getcapacitor.Bridge)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.getcapacitor.WebViewLocalServer: WebViewLocalServer(android.content.Context,com.getcapacitor.Bridge,com.getcapacitor.JSInjector,java.util.ArrayList,boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void clearCache()
com.getcapacitor.FileUtils: java.lang.String getCopyFilePath(android.net.Uri,android.content.Context)
com.getcapacitor.WebViewLocalServer$LazyInputStream: long skip(long)
com.getcapacitor.plugin.CapacitorCookieManager: void setCookie(java.lang.String,java.lang.String)
com.getcapacitor.CapConfig: void deserializeConfig(android.content.Context)
com.getcapacitor.plugin.CapacitorHttp: void load()
androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: void showDeviceList$lambda$4$lambda$1(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner,android.content.DialogInterface,int)
com.capacitorjs.community.plugins.bluetoothle.CallbackResponse: java.lang.String getValue()
com.getcapacitor.Bridge: void onDetachedFromWindow()
com.getcapacitor.Bridge: void triggerJSEvent(java.lang.String,java.lang.String)
com.google.android.material.button.MaterialButton: int getTextLayoutWidth()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.getcapacitor.App: void fireStatusChange(boolean)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
com.getcapacitor.Logger: void error(java.lang.String,java.lang.Throwable)
com.google.android.material.chip.Chip: void setChipIconSize(float)
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
com.getcapacitor.Logger: void init(com.getcapacitor.CapConfig)
androidx.constraintlayout.helper.widget.Flow: void setWrapMode(int)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
org.apache.cordova.CordovaWebViewImpl$EngineClient: void onPageStarted(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRenderer()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
com.getcapacitor.WebViewLocalServer: java.lang.String getReasonPhraseFromResponseCode(int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.google.android.material.button.MaterialButton: void setChecked(boolean)
com.getcapacitor.JSObject: org.json.JSONObject put(java.lang.String,long)
org.apache.cordova.CordovaPlugin: void onDestroy()
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior()
com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)
com.getcapacitor.plugin.util.AssetUtil: android.net.Uri getUriFromAsset(java.lang.String)
com.capacitorjs.plugins.camera.CameraPlugin: void showPhotos(com.getcapacitor.PluginCall)
androidx.fragment.app.Fragment: boolean isAdded()
com.google.android.material.chip.Chip: void setRippleColorResource(int)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
org.apache.cordova.AllowListPlugin: AllowListPlugin(org.apache.cordova.AllowList,org.apache.cordova.AllowList,org.apache.cordova.AllowList)
com.getcapacitor.FileUtils: java.lang.String sanitizeFilename(java.lang.String)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasSigningCertificate(android.content.pm.PackageManager,java.lang.String,byte[],int)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.capacitorjs.plugins.camera.CameraSettings: void setSource(com.capacitorjs.plugins.camera.CameraSource)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$readDescriptor$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundTint(int)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.getcapacitor.Bridge: java.util.Map getPermissionStates(com.getcapacitor.Plugin)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
com.getcapacitor.AppUUID: java.lang.String generateUUID()
org.apache.cordova.CordovaWebViewImpl$EngineClient: java.lang.Boolean onDispatchKeyEvent(android.view.KeyEvent)
org.apache.cordova.CallbackContext: void success(org.json.JSONObject)
com.getcapacitor.WebViewLocalServer: android.webkit.WebResourceResponse handleLocalRequest(android.webkit.WebResourceRequest,com.getcapacitor.WebViewLocalServer$PathHandler)
com.getcapacitor.BridgeWebChromeClient: void lambda$onJsPrompt$10(android.webkit.JsPromptResult,android.content.DialogInterface)
com.getcapacitor.JSArray: JSArray(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
kotlin.jvm.internal.CallableReference$NoReceiver: CallableReference$NoReceiver()
com.getcapacitor.plugin.WebView: void setServerBasePath(com.getcapacitor.PluginCall)
org.apache.cordova.AllowListPlugin: java.lang.Boolean shouldAllowNavigation(java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalStyle(int)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.google.android.material.textfield.MaterialAutoCompleteTextView: int getSimpleItemSelectedColor()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.core.location.LocationManagerCompat$Api28Impl: int getGnssYearOfHardware(android.location.LocationManager)
com.google.android.material.checkbox.MaterialCheckBox: void setEnabled(boolean)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabel(java.lang.CharSequence)
org.apache.cordova.CordovaClientCertRequest: int getPort()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: int getExitAnim()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
com.getcapacitor.CapConfig: boolean isResolveServiceWorkerRequests()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: DeviceScanner(android.content.Context,android.bluetooth.BluetoothAdapter,java.lang.Long,com.capacitorjs.community.plugins.bluetoothle.DisplayStrings,boolean)
androidx.webkit.internal.ApiHelperForP: android.os.Looper getWebViewLooper(android.webkit.WebView)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.Fragment: void performStart()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$createBond$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.SearchView: void setInputType(int)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.getcapacitor.plugin.WebView: WebView()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
com.getcapacitor.Plugin: java.lang.String[] getPermissionStringsForAliases(java.lang.String[])
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
com.google.android.material.textfield.TextInputLayout: void setBoxCornerFamily(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.getcapacitor.Plugin: void startActivityForResult(com.getcapacitor.PluginCall,android.content.Intent,java.lang.String)
com.getcapacitor.Plugin: void handleOnPause()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getDropDataProvider()
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl: void getRealSize(android.view.Display,android.graphics.Point)
com.getcapacitor.Bridge: void setWebViewListeners(java.util.List)
com.google.android.material.chip.Chip: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner$scanCallback$1: void onScanResult$lambda$0(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner,android.bluetooth.le.ScanResult)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.getcapacitor.CapConfig$Builder: CapConfig$Builder(android.content.Context)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.getcapacitor.plugin.util.MimeType: MimeType(java.lang.String,int,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void onDragEnd(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.getcapacitor.FileUtils: java.lang.String readFileFromAssets(android.content.res.AssetManager,java.lang.String)
com.getcapacitor.PluginCall: PluginCall(com.getcapacitor.MessageHandler,java.lang.String,java.lang.String,java.lang.String,com.getcapacitor.JSObject)
com.capacitorjs.community.plugins.bluetoothle.ConversionKt: int toDigit(char)
org.apache.cordova.CordovaWebViewImpl: boolean isButtonPlumbedToJs(int)
com.capacitorjs.plugins.camera.CameraSource: java.lang.String getSource()
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
com.getcapacitor.plugin.WebView: void persistServerBasePath(com.getcapacitor.PluginCall)
com.capacitorjs.plugins.camera.CameraSource: com.capacitorjs.plugins.camera.CameraSource valueOf(java.lang.String)
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMinimumFlingVelocity(android.view.ViewConfiguration,int,int,int)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.getcapacitor.Bridge: void initWebView()
org.apache.cordova.CordovaClientCertRequest: java.security.Principal[] getPrincipals()
androidx.fragment.app.Fragment: android.view.View getFocusedView()
com.google.android.material.chip.Chip: float getChipIconSize()
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.capacitorjs.community.plugins.bluetoothle.Device$gattCallback$1: void onReadRemoteRssi(android.bluetooth.BluetoothGatt,int,int)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder setMethod(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void setDisplayStrings(com.getcapacitor.PluginCall)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.google.android.material.chip.Chip: float getChipStartPadding()
com.getcapacitor.Plugin: void handleLegacyPermission(com.getcapacitor.PluginCall)
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior(android.content.Context,android.util.AttributeSet)
com.getcapacitor.android.R$id: R$id()
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: void start(int,java.util.Collection,int)
org.apache.cordova.CordovaWebViewImpl: boolean isInitialized()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.String getButtonStateDescription()
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
org.apache.cordova.CordovaWebViewImpl: java.lang.Object postMessage(java.lang.String,java.lang.Object)
org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: kotlin.Pair getCharacteristic(com.getcapacitor.PluginCall)
com.getcapacitor.util.PermissionHelper: PermissionHelper()
kotlin.random.Random$Default: Random$Default()
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setStartPath(java.lang.String)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
kotlin.collections.EmptySet: EmptySet()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: void performStop()
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.getcapacitor.JSValue: JSValue(com.getcapacitor.PluginCall,java.lang.String)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
com.getcapacitor.plugin.CapacitorCookieManager: java.lang.String getDomainFromCookieString(java.lang.String)
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getWebAuthnSupport()
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
com.getcapacitor.PluginManager: PluginManager(android.content.res.AssetManager)
com.capacitorjs.community.plugins.bluetoothle.Device$reject$1: Device$reject$1(java.lang.String)
com.getcapacitor.plugin.util.AssetUtil: com.getcapacitor.plugin.util.AssetUtil getInstance(android.content.Context)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
androidx.fragment.app.Fragment: void setSharedElementReturnTransition(java.lang.Object)
com.capacitorjs.plugins.camera.CameraPlugin: com.capacitorjs.plugins.camera.CameraSettings getSettings(com.getcapacitor.PluginCall)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
androidx.core.view.ViewCompat$Api30Impl: androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View)
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values()
com.capacitorjs.community.plugins.bluetoothle.Device: void setNotifications(java.util.UUID,java.util.UUID,boolean,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
com.getcapacitor.BridgeWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.ViewCompat$Api28Impl: void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean onWebAuthnIntent(android.webkit.WebView,android.app.PendingIntent,java.lang.reflect.InvocationHandler)
org.apache.cordova.CoreAndroid: boolean isBackbuttonOverridden()
com.getcapacitor.FileUtils$Type: com.getcapacitor.FileUtils$Type[] $values()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.fragment.app.DialogFragment: void onStart()
com.getcapacitor.WebViewLocalServer$PathHandler: java.io.InputStream handle(android.net.Uri)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
com.capacitorjs.plugins.camera.ExifWrapper: ExifWrapper(androidx.exifinterface.media.ExifInterface)
com.getcapacitor.Bridge$Builder: com.getcapacitor.Bridge$Builder addWebViewListener(com.getcapacitor.WebViewListener)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.capacitorjs.plugins.camera.ImageUtils: com.capacitorjs.plugins.camera.ExifWrapper getExifData(android.content.Context,android.graphics.Bitmap,android.net.Uri)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: long getMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo)
org.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaPreferences getPreferences()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.capacitorjs.plugins.camera.CameraPlugin: void pickLimitedLibraryPhotos(com.getcapacitor.PluginCall)
com.capacitorjs.community.plugins.bluetoothle.Device: void setTimeout$lambda$2(com.capacitorjs.community.plugins.bluetoothle.Device,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
com.getcapacitor.FileUtils: boolean isDownloadsDocument(android.net.Uri)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
org.apache.cordova.CordovaInterfaceImpl: boolean onActivityResult(int,int,android.content.Intent)
com.getcapacitor.PermissionState: PermissionState(java.lang.String,int,java.lang.String)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererUnresponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
com.getcapacitor.BridgeWebChromeClient: void lambda$onGeolocationPermissionsShowPrompt$11(android.webkit.GeolocationPermissions$Callback,java.lang.String,java.lang.Boolean)
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int,int)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: java.net.HttpURLConnection getHttpConnection()
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
androidx.core.location.LocationManagerCompat$Api28Impl: boolean isLocationEnabled(android.location.LocationManager)
com.getcapacitor.util.JSONUtils: int getInt(org.json.JSONObject,java.lang.String,int)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
com.getcapacitor.PluginResult: PluginResult()
com.getcapacitor.JSObject: com.getcapacitor.JSObject putSafe(java.lang.String,java.lang.Object)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void sendPluginResult(org.apache.cordova.PluginResult,java.lang.String)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
com.getcapacitor.util.HostMask$Any: boolean matches(java.lang.String)
org.apache.cordova.engine.SystemWebViewEngine: void stopLoading()
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
kotlin.SynchronizedLazyImpl: java.lang.Object writeReplace()
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.getcapacitor.AppUUID: java.lang.String bytesToHex(byte[])
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$disconnect$1: java.lang.Object invoke(java.lang.Object)
com.getcapacitor.PluginConfig: PluginConfig(org.json.JSONObject)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
com.getcapacitor.cordova.MockCordovaWebViewImpl: org.apache.cordova.CordovaPreferences getPreferences()
com.getcapacitor.plugin.util.AssetUtil: java.io.File getTmpFile(java.lang.String)
com.getcapacitor.JSObject: com.getcapacitor.JSObject put(java.lang.String,double)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
com.getcapacitor.RouteProcessor: com.getcapacitor.ProcessedRoute process(java.lang.String,java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxWidth()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
androidx.fragment.app.Fragment: int getId()
androidx.appcompat.app.AppCompatActivity: void setSupportProgress(int)
androidx.activity.ComponentActivity: void onTrimMemory(int)
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.getcapacitor.Bridge: com.getcapacitor.JSInjector getJSInjector()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.CallbackContext)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
com.getcapacitor.AndroidProtocolHandler: java.io.InputStream openResource(android.net.Uri)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void readDescriptor(com.getcapacitor.PluginCall)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.fragment.app.DialogFragment: void onDestroyView()
org.apache.cordova.CordovaWebViewImpl: org.apache.cordova.ICordovaCookieManager getCookieManager()
com.capacitorjs.community.plugins.bluetoothle.DeviceList: void clear()
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
com.capacitorjs.plugins.camera.CameraPlugin: CameraPlugin()
com.capacitorjs.plugins.camera.CameraSettings: boolean isSaveToGallery()
com.google.android.material.chip.Chip: void setLayoutDirection(int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode: void reset()
com.capacitorjs.plugins.camera.CameraPlugin: void editImage(com.getcapacitor.PluginCall,android.net.Uri,java.io.ByteArrayOutputStream)
com.google.android.material.textfield.TextInputLayout: int getBoxCollapsedPaddingTop()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.getcapacitor.PluginCall: void unavailable()
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalBias(float)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean isAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo)
com.getcapacitor.BridgeWebChromeClient: boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)
org.apache.cordova.AllowListPlugin: void setAllowedNavigations(org.apache.cordova.AllowList)
androidx.appcompat.app.AppCompatDelegate$Api24Impl: android.os.LocaleList localeListForLanguageTags(java.lang.String)
com.getcapacitor.FileUtils: java.lang.String getDataColumn(android.content.Context,android.net.Uri,java.lang.String,java.lang.String[])
com.getcapacitor.Bridge$Builder: com.getcapacitor.Bridge$Builder setServerPath(com.getcapacitor.ServerPath)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
com.getcapacitor.BridgeActivity: com.getcapacitor.Bridge getBridge()
com.getcapacitor.UriMatcher: UriMatcher()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setInitialFocus(boolean)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
androidx.startup.InitializationProvider: InitializationProvider()
androidx.fragment.app.Fragment: android.view.View requireView()
com.getcapacitor.WebViewLocalServer: boolean isErrorUrl(android.net.Uri)
com.getcapacitor.Bridge$Builder: com.getcapacitor.Bridge$Builder setInstanceState(android.os.Bundle)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
com.capacitorjs.plugins.camera.CameraSettings: void setWidth(int)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
org.apache.cordova.engine.SystemWebView: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment$1: void onStateChanged(android.view.View,int)
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.getcapacitor.annotation.CapacitorPlugin: java.lang.String name()
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.google.android.material.button.MaterialButton: int getIconGravity()
com.getcapacitor.Bridge: void saveInstanceState(android.os.Bundle)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDarkBehavior()
androidx.webkit.internal.ApiHelperForP: android.webkit.TracingController getTracingControllerInstance()
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: void onLowMemory()
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
androidx.fragment.app.Fragment: java.lang.CharSequence getText(int)
org.apache.cordova.engine.SystemWebViewEngine: org.apache.cordova.CordovaWebView getCordovaWebView()
com.getcapacitor.Plugin: void handleRequestPermissionsResult(int,java.lang.String[],int[])
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
androidx.fragment.app.Fragment: void performPause()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.getcapacitor.plugin.util.HttpRequestHandler$ProgressEmitter: void emit(java.lang.Integer,java.lang.Integer)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
org.apache.cordova.engine.SystemExposedJsApi: java.lang.String exec(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.getcapacitor.BridgeWebChromeClient: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.getcapacitor.JSObject: com.getcapacitor.JSObject getJSObject(java.lang.String)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.capacitorjs.community.plugins.bluetoothle.Device$resolve$1: java.lang.Boolean invoke(com.capacitorjs.community.plugins.bluetoothle.TimeoutHandler)
com.getcapacitor.Bridge: void triggerDocumentJSEvent(java.lang.String,java.lang.String)
com.capacitorjs.plugins.camera.CameraSettings: int getQuality()
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
com.capacitorjs.plugins.camera.CameraPlugin: void cameraPermissionsCallback(com.getcapacitor.PluginCall)
com.getcapacitor.util.JSONUtils: java.lang.String getString(org.json.JSONObject,java.lang.String,java.lang.String)
com.getcapacitor.JSObject: com.getcapacitor.JSObject put(java.lang.String,long)
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
com.getcapacitor.PluginResult: com.getcapacitor.PluginResult put(java.lang.String,com.getcapacitor.PluginResult)
org.apache.cordova.CordovaPlugin: void privateInitialize(java.lang.String,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaPreferences)
com.capacitorjs.community.plugins.bluetoothle.Device: void initializeCallbacksHandlerThread()
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
com.google.android.material.button.MaterialButton: void setInsetTop(int)
org.apache.cordova.CoreAndroid: void sendResumeEvent(org.apache.cordova.PluginResult)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.capacitorjs.plugins.camera.CameraUtils: android.net.Uri createImageFileUri(android.app.Activity,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void setDefaultRequestProperties()
com.getcapacitor.plugin.CapacitorCookies: CapacitorCookies()
org.apache.cordova.CoreAndroid: CoreAndroid()
androidx.fragment.app.DialogFragment: android.app.Dialog getDialog()
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setResolveServiceWorkerRequests(boolean)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
org.apache.cordova.CordovaPlugin: void initialize(org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebView)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.getcapacitor.Plugin: void permissionActivityResult(com.getcapacitor.PluginCall,java.lang.String[],java.lang.String)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder setReadTimeout(java.lang.Integer)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.getcapacitor.CapacitorWebView: boolean dispatchKeyEvent(android.view.KeyEvent)
org.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode: NativeToJsMessageQueue$EvalBridgeMode(org.apache.cordova.CordovaWebViewEngine,org.apache.cordova.CordovaInterface)
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
androidx.webkit.internal.ApiHelperForP: java.lang.ClassLoader getWebViewClassLoader()
com.getcapacitor.cordova.MockCordovaWebViewImpl: android.content.Context getContext()
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
androidx.fragment.app.Fragment: void setEnterTransition(java.lang.Object)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
com.getcapacitor.cordova.MockCordovaInterfaceImpl: MockCordovaInterfaceImpl(androidx.appcompat.app.AppCompatActivity)
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
androidx.activity.ComponentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.getcapacitor.Plugin: void handleOnConfigurationChanged(android.content.res.Configuration)
org.apache.cordova.engine.SystemWebView: void setWebViewClient(android.webkit.WebViewClient)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
androidx.fragment.app.Fragment: void performDestroyView()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.getcapacitor.Bridge: void reset()
com.capacitorjs.plugins.camera.ImageUtils: android.graphics.Bitmap resizePreservingAspectRatio(android.graphics.Bitmap,int,int)
androidx.transition.ViewUtilsApi21$Api29Impl: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String getType(android.net.Uri)
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: HttpRequestHandler$HttpURLConnectionBuilder()
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: void setStateDescription(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
com.getcapacitor.PluginHandle: PluginHandle(com.getcapacitor.Bridge,java.lang.Class)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.getcapacitor.Plugin: void checkPermissions(com.getcapacitor.PluginCall)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void writeDescriptor(com.getcapacitor.PluginCall)
com.capacitorjs.plugins.camera.ImageUtils: android.graphics.Bitmap correctOrientation(android.content.Context,android.graphics.Bitmap,android.net.Uri,com.capacitorjs.plugins.camera.ExifWrapper)
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void clearHistory()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void sendJavascript(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.Device: void readDescriptor(java.util.UUID,java.util.UUID,java.util.UUID,long,kotlin.jvm.functions.Function1)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
androidx.fragment.app.DialogFragment: void showNow(androidx.fragment.app.FragmentManager,java.lang.String)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void setButtonPlumbedToJs(int,boolean)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void setClearCachedDataIntervalMs(int)
org.apache.cordova.CordovaPlugin: java.lang.Boolean shouldOpenExternalUrl(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void removeWebMessageListener(java.lang.String)
com.getcapacitor.Bridge: void triggerWindowJSEvent(java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.fragment.app.Fragment: boolean isInLayout()
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.getcapacitor.Bridge: void executeOnMainThread(java.lang.Runnable)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.capacitorjs.plugins.camera.CameraPlugin: java.util.Map getPermissionStates()
com.google.android.material.chip.Chip: void setBackgroundResource(int)
androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalStyle(int)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
com.getcapacitor.BridgeWebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,android.webkit.WebResourceRequest)
com.getcapacitor.BridgeActivity: BridgeActivity()
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.getcapacitor.Bridge: void onConfigurationChanged(android.content.res.Configuration)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment: CameraBottomSheetDialogFragment()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void eval(java.lang.String,android.webkit.ValueCallback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl: int getDisabledComponentFlag()
androidx.constraintlayout.helper.widget.Flow: void setMaxElementsWrap(int)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment requireParentFragment()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
com.getcapacitor.plugin.util.ICapacitorHttpUrlConnection: java.lang.String getHeaderField(java.lang.String)
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.getcapacitor.PluginCall: java.lang.Boolean getBoolean(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: boolean access$getShowDialog$p(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner)
com.getcapacitor.cordova.MockCordovaWebViewImpl: boolean isButtonPlumbedToJs(int)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void setAllowUserInteraction(boolean)
com.getcapacitor.App$AppStatusChangeListener: void onAppStatusChanged(java.lang.Boolean)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
androidx.webkit.internal.ApiHelperForO: void setSafeBrowsingEnabled(android.webkit.WebSettings,boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
com.getcapacitor.BridgeWebChromeClient: void lambda$onShowFileChooser$12(android.webkit.ValueCallback,android.webkit.WebChromeClient$FileChooserParams,boolean,java.lang.Boolean)
org.apache.cordova.CordovaWebViewImpl$EngineClient: void onReceivedError(int,java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: boolean isStateSaved()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
com.capacitorjs.plugins.camera.CameraPlugin: java.util.List legacyQueryIntentActivities(android.content.Intent)
kotlin.collections.EmptyList: java.lang.Object readResolve()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
org.apache.cordova.CoreAndroid: void loadUrl(java.lang.String,org.json.JSONObject)
androidx.fragment.app.Fragment: android.content.Context requireContext()
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.fragment.app.FragmentActivity: void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(float,float,float,float)
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType: com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType[] values()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()
com.capacitorjs.community.plugins.bluetoothle.Device: java.util.HashMap access$getCallbackMap$p(com.capacitorjs.community.plugins.bluetoothle.Device)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void handleStart()
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextDirection(android.view.View)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
com.getcapacitor.plugin.util.AssetUtil: android.net.Uri getUriForResourcePath(java.lang.String)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void showCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void startEnabledNotifications(com.getcapacitor.PluginCall)
com.getcapacitor.BridgeWebChromeClient: boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)
com.getcapacitor.BridgeWebChromeClient: void lambda$onJsPrompt$9(android.webkit.JsPromptResult,android.content.DialogInterface,int)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
com.capacitorjs.community.plugins.bluetoothle.Device$createBondStateReceiver$1: Device$createBondStateReceiver$1(com.capacitorjs.community.plugins.bluetoothle.Device)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: void setTimeoutForStopScanning()
com.getcapacitor.Bridge: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
androidx.activity.ComponentActivity: void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
com.getcapacitor.BridgeActivity: void onActivityResult(int,int,android.content.Intent)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
com.getcapacitor.plugin.util.HttpRequestHandler: boolean isOneOf(java.lang.String,com.getcapacitor.plugin.util.MimeType[])
com.getcapacitor.BridgeWebChromeClient: boolean showImageCapturePicker(android.webkit.ValueCallback)
com.getcapacitor.Bridge$Builder: com.getcapacitor.Bridge$Builder setRouteProcessor(com.getcapacitor.RouteProcessor)
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.getcapacitor.CapConfig: void loadConfigFromFile(java.lang.String)
androidx.core.view.ViewCompat$Api29Impl: android.view.contentcapture.ContentCaptureSession getContentCaptureSession(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.capacitorjs.plugins.camera.CameraPlugin: android.graphics.Bitmap replaceBitmap(android.graphics.Bitmap,android.graphics.Bitmap)
com.getcapacitor.CapacitorWebView: void setBridge(com.getcapacitor.Bridge)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.fragment.app.Fragment: void setNextTransition(int)
org.chromium.support_lib_boundary.WebAuthnCallbackBoundaryInterface: void onResult(int,android.content.Intent)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void load()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void requestEnable(com.getcapacitor.PluginCall)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
org.apache.cordova.engine.SystemWebViewEngine: void loadUrl(java.lang.String,boolean)
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean)
androidx.fragment.app.Fragment: android.view.View getView()
com.capacitorjs.plugins.camera.CameraPlugin: void restoreState(android.os.Bundle)
com.capacitorjs.plugins.camera.CameraPlugin: void processCameraImage(com.getcapacitor.PluginCall,androidx.activity.result.ActivityResult)
com.getcapacitor.ServerPath: java.lang.String getPath()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
com.getcapacitor.Plugin: com.getcapacitor.PermissionState getPermissionState(java.lang.String)
androidx.fragment.app.Fragment: boolean getRetainInstance()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.fragment.app.Fragment: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
com.getcapacitor.Plugin: void handleOnStop()
com.getcapacitor.Bridge: java.lang.String getLocalUrl()
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.getcapacitor.Plugin: void handleOnNewIntent(android.content.Intent)
com.getcapacitor.Bridge: java.lang.String getLegacyPluginName(java.lang.Class)
com.capacitorjs.community.plugins.bluetoothle.DisplayStrings: java.lang.String getScanning()
com.google.android.material.button.MaterialButton: void setA11yClassName(java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.getcapacitor.util.InternalUtils: android.content.pm.PackageInfo getPackageInfoLegacy(android.content.pm.PackageManager,java.lang.String,long)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.getcapacitor.CapConfig: java.util.Map deserializePluginsConfig(org.json.JSONObject)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
com.getcapacitor.ProcessedRoute: void setPath(java.lang.String)
org.apache.cordova.CordovaHttpAuthHandler: void proceed(java.lang.String,java.lang.String)
com.capacitorjs.plugins.camera.CameraPlugin: void requestPermissionForAliases(java.lang.String[],com.getcapacitor.PluginCall,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
org.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaWebViewEngine createEngine(android.content.Context,org.apache.cordova.CordovaPreferences)
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.getcapacitor.BridgeWebChromeClient$PermissionListener: void onPermissionSelect(java.lang.Boolean)
org.apache.cordova.CordovaInterfaceImpl: androidx.appcompat.app.AppCompatActivity getActivity()
org.apache.cordova.CordovaClientCertRequest: void cancel()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedRippleColor(android.content.res.ColorStateList)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
org.apache.cordova.CordovaInterfaceImpl: CordovaInterfaceImpl(androidx.appcompat.app.AppCompatActivity,java.util.concurrent.ExecutorService)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
com.capacitorjs.plugins.camera.CameraPlugin: androidx.activity.result.contract.ActivityResultContract getContractForCall(com.getcapacitor.PluginCall)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
androidx.fragment.app.Fragment: boolean isMenuVisible()
com.getcapacitor.ProcessedRoute: boolean isAsset()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void getBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
com.getcapacitor.PluginCall: java.lang.Integer getInt(java.lang.String)
androidx.fragment.app.Fragment: void onDestroy()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
com.google.android.material.textfield.TextInputLayout: int getMaxWidth()
com.getcapacitor.plugin.CapacitorHttp: void handleOnDestroy()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean hasRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo)
org.apache.cordova.CordovaPlugin: org.apache.cordova.CordovaPluginPathHandler getPathHandler()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void stopNotifications(com.getcapacitor.PluginCall)
com.getcapacitor.Bridge$Builder: com.getcapacitor.Bridge$Builder setPlugins(java.util.List)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
org.apache.cordova.CordovaPlugin: void onResume(boolean)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void hideCustomView()
com.capacitorjs.community.plugins.bluetoothle.TimeoutHandler: TimeoutHandler(java.lang.String,android.os.Handler)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: java.lang.String getVariationsHeader()
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
com.getcapacitor.Plugin: void triggerActivityCallback(java.lang.reflect.Method,androidx.activity.result.ActivityResult)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.getcapacitor.CapacitorWebView: CapacitorWebView(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.helper.widget.Flow: void setOrientation(int)
org.apache.cordova.CordovaWebViewImpl: void handleStart()
androidx.core.view.ViewCompat$Api26Impl: android.view.autofill.AutofillId getAutofillId(android.view.View)
com.getcapacitor.Bridge: void setServerAssetPath(java.lang.String)
com.getcapacitor.Plugin: java.lang.String getLogTag(java.lang.String[])
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.activity.Api34Impl: float touchY(android.window.BackEvent)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.getcapacitor.Logger: void info(java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
com.capacitorjs.plugins.camera.CameraPlugin: void lambda$openPhotos$3(com.getcapacitor.PluginCall,java.util.List)
com.getcapacitor.JSObject: java.lang.Integer getInteger(java.lang.String)
com.getcapacitor.Bridge$Builder: com.getcapacitor.Bridge$Builder addPlugins(java.util.List)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionScrollInDirection()
androidx.appcompat.app.AppCompatActivity: void setTheme(int)
com.getcapacitor.plugin.util.MimeType: com.getcapacitor.plugin.util.MimeType[] values()
com.getcapacitor.PluginHandle: com.getcapacitor.NativePlugin getLegacyPluginAnnotation()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
androidx.fragment.app.Fragment: void initState()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
com.getcapacitor.Plugin: androidx.appcompat.app.AppCompatActivity getActivity()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: void onLayout(android.view.View)
org.apache.cordova.CordovaWebViewImpl: void handleDestroy()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
org.apache.cordova.CordovaPlugin: java.lang.Boolean shouldAllowRequest(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.Device: void setTimeout(java.lang.String,java.lang.String,long)
com.getcapacitor.Bridge: android.net.Uri getIntentUri()
org.apache.cordova.CordovaWebViewImpl: void sendPluginResult(org.apache.cordova.PluginResult,java.lang.String)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.textfield.TextInputLayout: void setMaxEms(int)
com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
org.apache.cordova.AllowListPlugin: AllowListPlugin(android.content.Context)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.getcapacitor.CapConfig: java.lang.String[] getArray(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
com.getcapacitor.plugin.CapacitorCookies: void clearAllCookies(com.getcapacitor.PluginCall)
androidx.fragment.app.Fragment: java.lang.String generateActivityResultKey()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: boolean isMultiProcessEnabled()
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
com.google.android.material.internal.ClippableRoundedCornerLayout: ClippableRoundedCornerLayout(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)
com.google.android.material.checkbox.MaterialCheckBox: int getCheckedState()
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
com.getcapacitor.plugin.util.AssetUtil: java.io.File getTmpFile()
com.getcapacitor.Bridge$Builder: com.getcapacitor.Bridge$Builder addPluginInstance(com.getcapacitor.Plugin)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.getcapacitor.JSObject: JSObject()
com.getcapacitor.JSObject: org.json.JSONObject put(java.lang.String,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
org.apache.cordova.CordovaWebViewImpl: android.view.View getView()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$writeWithoutResponse$1: java.lang.Object invoke(java.lang.Object)
com.getcapacitor.FileUtils$Type: com.getcapacitor.FileUtils$Type[] values()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.getcapacitor.BridgeActivity: void registerPlugins(java.util.List)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalBias(float)
com.google.android.material.textfield.TextInputLayout: void setHint(int)
com.getcapacitor.CapConfig: java.lang.String getStartPath()
com.getcapacitor.plugin.CapacitorCookieManager: void removeAllCookies()
androidx.activity.ComponentActivity: void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
com.getcapacitor.plugin.util.HttpRequestHandler: java.lang.Object readData(com.getcapacitor.plugin.util.ICapacitorHttpUrlConnection,com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: void close(java.io.FileDescriptor)
androidx.core.app.ComponentActivity: boolean shouldDumpInternalState(java.lang.String[])
com.getcapacitor.PluginCall: boolean isSaved()
com.google.android.material.chip.Chip: void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener)
com.google.android.material.textfield.TextInputLayout: int getErrorAccessibilityLiveRegion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.getcapacitor.Plugin: void sendRetainedArgumentsForEvent(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.Device$gattCallback$1: void onServicesDiscovered(android.bluetooth.BluetoothGatt,int)
com.capacitorjs.community.plugins.bluetoothle.CallbackResponse: boolean getSuccess()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
androidx.activity.ComponentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
org.apache.cordova.CordovaClientCertRequest: java.lang.String[] getKeyTypes()
com.getcapacitor.Bridge: java.util.List getWebViewListeners()
com.getcapacitor.WebViewLocalServer$PathHandler: WebViewLocalServer$PathHandler(java.lang.String,java.lang.String,int,java.lang.String,java.util.Map)
com.getcapacitor.cordova.CapacitorCordovaCookieManager: java.lang.String getCookie(java.lang.String)
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$connect$1: BluetoothLe$connect$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,com.getcapacitor.PluginCall)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
com.capacitorjs.community.plugins.bluetoothle.Device: void readRssi(long,kotlin.jvm.functions.Function1)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.getcapacitor.BridgeActivity: void onStart()
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode: void notifyOfFlush(org.apache.cordova.NativeToJsMessageQueue,boolean)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$writeWithoutResponse$1: BluetoothLe$writeWithoutResponse$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,com.getcapacitor.PluginCall)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
com.getcapacitor.Bridge: void logToJs(java.lang.String,java.lang.String)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.capacitorjs.community.plugins.bluetoothle.DeviceList: DeviceList()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
kotlin.random.Random: Random()
com.getcapacitor.CapConfig: java.lang.String getErrorPath()
com.getcapacitor.CapConfig: int getInt(java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.getcapacitor.PluginCall: boolean isKeptAlive()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setEnterpriseAuthenticationAppLinkPolicyEnabled(boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDark(int)
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.Fragment: java.lang.String getString(int)
androidx.activity.OnBackPressedDispatcher$Api34Impl: android.window.OnBackInvokedCallback createOnBackAnimationCallback(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
com.getcapacitor.plugin.CapacitorCookies: boolean isEnabled()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.appcompat.app.AppCompatActivity: void onLocalesChanged(androidx.core.os.LocaleListCompat)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$read$1: void invoke(com.capacitorjs.community.plugins.bluetoothle.CallbackResponse)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.fragment.app.DialogFragment: void onViewStateRestored(android.os.Bundle)
com.getcapacitor.Bridge: boolean isMinimumWebViewInstalled()
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
com.getcapacitor.PluginCall: com.getcapacitor.JSArray getArray(java.lang.String)
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.capacitorjs.plugins.camera.CameraPlugin: void openCamera(com.getcapacitor.PluginCall)
com.getcapacitor.PluginConfig: java.lang.String[] getArray(java.lang.String,java.lang.String[])
kotlin.jvm.internal.CallableReference$NoReceiver: java.lang.Object readResolve()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.getcapacitor.Bridge: void registerAllPlugins()
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void startNotifications(com.getcapacitor.PluginCall)
com.capacitorjs.community.plugins.bluetoothle.Device: void createBond(long,kotlin.jvm.functions.Function1)
com.capacitorjs.community.plugins.bluetoothle.Device: void requestMtu(int)
com.getcapacitor.Bridge: android.content.Context getContext()
com.capacitorjs.plugins.camera.CameraSettings: void setQuality(int)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1$1: SavedStateHandleSupport$savedStateHandlesVM$1$1()
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.capacitorjs.community.plugins.bluetoothle.Device: android.bluetooth.BluetoothGatt access$getBluetoothGatt$p(com.capacitorjs.community.plugins.bluetoothle.Device)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
org.apache.cordova.CordovaPlugin: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
com.getcapacitor.JSInjector: JSInjector(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
androidx.fragment.app.Fragment: void setExitTransition(java.lang.Object)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: android.bluetooth.le.ScanSettings getScanSettings(com.getcapacitor.PluginCall)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.fragment.app.DialogFragment: void onAttach(android.content.Context)
com.getcapacitor.WebViewLocalServer$LazyInputStream: WebViewLocalServer$LazyInputStream(com.getcapacitor.WebViewLocalServer$PathHandler)
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder setDisableRedirects(java.lang.Boolean)
com.getcapacitor.util.HostMask$Simple: boolean matches(java.lang.String)
com.getcapacitor.util.HostMask: boolean matches(java.lang.String)
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.fragment.app.Fragment: void registerForContextMenu(android.view.View)
com.capacitorjs.plugins.camera.CameraPlugin: com.getcapacitor.JSObject processPickedImages(android.net.Uri)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
com.getcapacitor.JSExport: java.lang.String getFilesContent(android.content.Context,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
com.getcapacitor.BridgeActivity: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
com.getcapacitor.Bridge$Builder: com.getcapacitor.Bridge$Builder addPluginInstances(java.util.List)
org.apache.cordova.CallbackContext: boolean isChangingThreads()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void clearProxyOverride(java.lang.Runnable,java.util.concurrent.Executor)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setBackgroundColor(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.ScanResponse: boolean getSuccess()
com.getcapacitor.BridgeActivity: void onRestart()
com.getcapacitor.plugin.CapacitorCookieManager: void put(java.net.URI,java.util.Map)
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnDismissListener access$100(androidx.fragment.app.DialogFragment)
com.google.android.material.textfield.TextInputLayout: void setEndIconScaleType(android.widget.ImageView$ScaleType)
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void enableRestrictSensitiveWebContent()
org.apache.cordova.CordovaInterfaceImpl: void startActivityForResult(org.apache.cordova.CordovaPlugin,android.content.Intent,int)
androidx.transition.ViewUtilsApi21$Api29Impl: void setAnimationMatrix(android.view.View,android.graphics.Matrix)
com.capacitorjs.plugins.camera.CameraPlugin: com.capacitorjs.plugins.camera.CameraResultType getResultType(java.lang.String)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.google.android.material.bottomsheet.BottomSheetDialogFragment: BottomSheetDialogFragment()
com.capacitorjs.community.plugins.bluetoothle.Device: void access$setCurrentMtu$p(com.capacitorjs.community.plugins.bluetoothle.Device,int)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
kotlin.collections.EmptyMap: EmptyMap()
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
org.apache.cordova.CordovaPlugin: void onRestoreStateForActivityResult(android.os.Bundle,org.apache.cordova.CallbackContext)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.getcapacitor.BridgeWebChromeClient: boolean isMediaCaptureSupported()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.getcapacitor.plugin.CapacitorCookieManager: java.util.Map get(java.net.URI,java.util.Map)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.activity.ComponentActivity: void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
com.getcapacitor.util.InternalUtils: InternalUtils()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.constraintlayout.helper.widget.Flow: void setVerticalStyle(int)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminate(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.capacitorjs.plugins.camera.CameraResultType: com.capacitorjs.plugins.camera.CameraResultType[] values()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.getcapacitor.JSExport: JSExport()
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
androidx.core.view.ViewCompat$Api30Impl: void setImportantForContentCapture(android.view.View,int)
androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)
com.getcapacitor.JSInjector: java.lang.String getScriptString()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
com.google.android.material.drawable.DrawableUtils$OutlineCompatR: void setPath(android.graphics.Outline,android.graphics.Path)
com.getcapacitor.Logger: void debug(java.lang.String,java.lang.String)
com.getcapacitor.WebViewLocalServer: java.lang.String getBasePath()
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void setDisableRedirects(boolean)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
org.apache.cordova.CordovaWebViewImpl: void loadUrl(java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setPaddingLeft(int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.getcapacitor.Bridge: void releaseCall(java.lang.String)
org.apache.cordova.CordovaWebViewImpl: void stopLoading()
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
com.capacitorjs.community.plugins.bluetoothle.Device: void resolve(java.lang.String,java.lang.String)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.getcapacitor.CapConfig: java.lang.String getServerUrl()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
org.apache.cordova.engine.SystemExposedJsApi: java.lang.String retrieveJsMessages(int,boolean)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.capacitorjs.plugins.camera.CameraPlugin: android.net.Uri getTempImage(android.net.Uri,java.io.ByteArrayOutputStream)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$startNotifications$1: java.lang.Object invoke(java.lang.Object)
com.getcapacitor.Plugin: void lambda$initializeActivityLaunchers$1(java.lang.reflect.Method,java.util.Map)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.getcapacitor.util.HostMask$Simple: com.getcapacitor.util.HostMask$Simple parse(java.lang.String)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: java.util.Map getHeaderFields()
com.google.android.material.internal.TouchObserverFrameLayout: TouchObserverFrameLayout(android.content.Context,android.util.AttributeSet)
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setAllowNavigation(java.lang.String[])
com.getcapacitor.JSValue: java.lang.String toString()
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.google.android.material.button.MaterialButton: int getIconSize()
com.google.android.material.motion.MaterialBackOrchestrator$Api33BackCallbackDelegate: void stopListeningForBackCallbacks(android.view.View)
com.capacitorjs.community.plugins.bluetoothle.Device$resolve$1: java.lang.Object invoke(java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
androidx.webkit.internal.ApiHelperForO: android.webkit.WebChromeClient getWebChromeClient(android.webkit.WebView)
com.getcapacitor.JSExport: java.lang.String getCordovaJS(android.content.Context)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateOutlinedDropDownMenuBackground()
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
com.capacitorjs.community.plugins.bluetoothle.DeviceList: android.bluetooth.BluetoothDevice getDevice(int)
com.getcapacitor.JSInjector: JSInjector(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$startNotifications$1: BluetoothLe$startNotifications$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,com.capacitorjs.community.plugins.bluetoothle.Device,kotlin.Pair)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementSourceNames()
com.capacitorjs.community.plugins.bluetoothle.DisplayStrings: java.lang.String getNoDeviceFound()
com.getcapacitor.FileUtils: boolean isExternalStorageDocument(android.net.Uri)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.getcapacitor.Bridge: java.lang.String getServerBasePath()
com.getcapacitor.cordova.MockCordovaWebViewImpl$CapacitorEvalBridgeMode: void lambda$onNativeToJsMessageAvailable$0(org.apache.cordova.NativeToJsMessageQueue)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
androidx.fragment.app.DialogFragment: void onDetach()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
com.getcapacitor.util.WebColor: WebColor()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
com.google.android.material.textfield.TextInputLayout: int getMinWidth()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: android.widget.ArrayAdapter access$getAdapter$p(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateFilledDropDownMenuBackground()
com.capacitorjs.community.plugins.bluetoothle.Device: boolean connectCallOngoing()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void handleStop()
androidx.fragment.app.Fragment: java.lang.Object getHost()
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(android.graphics.Path)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
com.getcapacitor.Plugin: void freeSavedCall()
com.getcapacitor.WebViewLocalServer$PathHandler: WebViewLocalServer$PathHandler()
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
com.getcapacitor.CapConfig: java.lang.String adjustMarginsForEdgeToEdge()
com.getcapacitor.plugin.CapacitorCookies: void getCookies(com.getcapacitor.PluginCall)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
com.google.android.material.bottomsheet.BottomSheetDialogFragment: void dismiss()
androidx.fragment.app.DialogFragment: boolean onHasView()
com.getcapacitor.Plugin: boolean hasPermission(java.lang.String)
org.apache.cordova.engine.SystemWebView: org.apache.cordova.CordovaWebView getCordovaWebView()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
org.apache.cordova.engine.SystemWebViewEngine: boolean goBack()
com.getcapacitor.FileUtils: java.lang.String getFileUrlForUri(android.content.Context,android.net.Uri)
com.getcapacitor.BridgeWebChromeClient: boolean showVideoCapturePicker(android.webkit.ValueCallback)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.getcapacitor.plugin.WebView: void getServerBasePath(com.getcapacitor.PluginCall)
org.apache.cordova.engine.SystemExposedJsApi: void setNativeToJsBridgeMode(int,int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
com.getcapacitor.MessageHandler: void legacySendResponseMessage(com.getcapacitor.PluginResult)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
com.google.android.material.checkbox.MaterialCheckBox: void setCheckedState(int)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
androidx.webkit.internal.ApiHelperForO: boolean getSafeBrowsingEnabled(android.webkit.WebSettings)
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
androidx.fragment.app.Fragment: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
androidx.constraintlayout.helper.widget.Flow: void setPaddingTop(int)
androidx.fragment.app.DialogFragment: DialogFragment()
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void getConnectedDevices(com.getcapacitor.PluginCall)
com.capacitorjs.plugins.camera.CameraPlugin: void returnDataUrl(com.getcapacitor.PluginCall,com.capacitorjs.plugins.camera.ExifWrapper,java.io.ByteArrayOutputStream)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void disconnect(com.getcapacitor.PluginCall)
com.capacitorjs.plugins.camera.CameraSource: com.capacitorjs.plugins.camera.CameraSource[] $values()
org.apache.cordova.CoreAndroid: void pluginInitialize()
com.capacitorjs.plugins.camera.CameraPlugin: void returnResult(com.getcapacitor.PluginCall,android.graphics.Bitmap,android.net.Uri)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getEnterpriseAuthenticationAppLinkPolicyEnabled()
androidx.core.app.ActivityCompat$Api31Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void writeWithoutResponse(com.getcapacitor.PluginCall)
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: com.getcapacitor.JSObject access$getScanResult(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,android.bluetooth.le.ScanResult)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
com.getcapacitor.Bridge: Bridge(androidx.appcompat.app.AppCompatActivity,android.webkit.WebView,java.util.List,com.getcapacitor.cordova.MockCordovaInterfaceImpl,org.apache.cordova.PluginManager,org.apache.cordova.CordovaPreferences,com.getcapacitor.CapConfig)
com.getcapacitor.Bridge: void triggerDocumentJSEvent(java.lang.String)
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
com.getcapacitor.plugin.CapacitorCookies: void load()
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
androidx.fragment.app.Fragment: void setAllowEnterTransitionOverlap(boolean)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
com.getcapacitor.PluginConfig: boolean isEmpty()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
com.google.android.material.chip.Chip: void setChipIconResource(int)
com.getcapacitor.PluginCall: void resolve()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.getcapacitor.JSValue: java.lang.Object toValue(com.getcapacitor.PluginCall,java.lang.String)
com.getcapacitor.WebViewLocalServer$PathHandler: int getStatusCode()
org.apache.cordova.CallbackContext: void error(int)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.google.android.material.textfield.TextInputLayout: void setBoxCollapsedPaddingTop(int)
com.getcapacitor.BridgeWebChromeClient: void lambda$onJsConfirm$7(android.webkit.JsResult,android.content.DialogInterface)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.getcapacitor.MessageHandler: MessageHandler(com.getcapacitor.Bridge,android.webkit.WebView,org.apache.cordova.PluginManager)
androidx.fragment.app.DialogFragment: void setCancelable(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setLoggingEnabled(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
com.capacitorjs.community.plugins.bluetoothle.Device$gattCallback$1: void onCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)
com.getcapacitor.PermissionState: java.lang.String toString()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.getcapacitor.Plugin: void handleOnRestart()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.getcapacitor.PluginMethodHandle: java.lang.String getName()
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
com.google.android.material.textfield.TextInputLayout: void setMinEms(int)
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface: void remove()
com.getcapacitor.InvalidPluginMethodException: InvalidPluginMethodException(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.capacitorjs.plugins.camera.CameraPlugin: void getPhoto(com.getcapacitor.PluginCall)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.getcapacitor.util.HostMask$Simple: HostMask$Simple(java.util.List)
androidx.fragment.app.Fragment: void performAttach()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
com.google.android.material.chip.Chip: float getChipMinHeight()
com.capacitorjs.plugins.camera.CameraSource: CameraSource(java.lang.String,int,java.lang.String)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.getcapacitor.Bridge: boolean isDeployDisabled()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
com.getcapacitor.PluginLoadException: PluginLoadException(java.lang.String,java.lang.Throwable)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void disable(com.getcapacitor.PluginCall)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getTracingController()
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
com.capacitorjs.community.plugins.bluetoothle.Device$gattCallback$1: void onConnectionStateChange(android.bluetooth.BluetoothGatt,int,int)
androidx.fragment.app.DialogFragment: boolean access$200(androidx.fragment.app.DialogFragment)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
org.apache.cordova.CordovaInterfaceImpl: CordovaInterfaceImpl(androidx.appcompat.app.AppCompatActivity)
com.google.android.material.chip.Chip: float getCloseIconSize()
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.getcapacitor.CapConfig: java.lang.String[] getArray(java.lang.String,java.lang.String[])
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.Device$gattCallback$1: void onDescriptorRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void setDoOutput(boolean)
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
com.getcapacitor.util.HostMask$Nothing: boolean matches(java.lang.String)
com.capacitorjs.plugins.camera.CameraPlugin: void openPhotos(com.getcapacitor.PluginCall,boolean)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextAlignment(android.view.View,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: java.lang.CharSequence getContainerTitle(android.view.accessibility.AccessibilityNodeInfo)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: java.io.InputStream getErrorStream()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void lambda$eval$0(java.lang.String,android.webkit.ValueCallback)
org.apache.cordova.CoreAndroid: java.lang.Object getBuildConfigValue(android.content.Context,java.lang.String)
androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
com.getcapacitor.BridgeWebChromeClient: void lambda$new$1(androidx.activity.result.ActivityResult)
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: boolean isTextSelectable(android.view.accessibility.AccessibilityNodeInfo)
androidx.transition.ViewUtilsApi22$Api29Impl: void setLeftTopRightBottom(android.view.View,int,int,int,int)
androidx.fragment.app.Fragment: int getPopEnterAnim()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.Fragment: void setAnimations(int,int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void createStateReceiver()
androidx.appcompat.widget.SearchView: int getInputType()
com.getcapacitor.BridgeWebChromeClient: void lambda$new$0(java.util.Map)
com.getcapacitor.PluginCall: com.getcapacitor.JSObject getData()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.TextInputLayout$LengthCounter getLengthCounter()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl: int getLayoutDirection(android.content.res.Configuration)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: void stopScanning()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
com.getcapacitor.Bridge: void onPause()
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.getcapacitor.Bridge: com.getcapacitor.App getApp()
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void connect()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
com.capacitorjs.plugins.camera.ImageUtils: android.graphics.Bitmap transform(android.graphics.Bitmap,android.graphics.Matrix)
com.capacitorjs.community.plugins.bluetoothle.Device$createBondStateReceiver$1: void onReceive(android.content.Context,android.content.Intent)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
com.getcapacitor.PluginCall: java.lang.String getString(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void handleResume(boolean)
com.getcapacitor.PluginHandle: void invoke(java.lang.String,com.getcapacitor.PluginCall)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: void setSupportLibraryVersion(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setIconPadding(int)
org.apache.cordova.CordovaPlugin: java.lang.Object onMessage(java.lang.String,java.lang.Object)
com.getcapacitor.plugin.CapacitorHttp: void get(com.getcapacitor.PluginCall)
com.getcapacitor.PluginHandle: PluginHandle(com.getcapacitor.Bridge,com.getcapacitor.Plugin)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void stopLoading()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.PorterDuff$Mode getButtonIconTintMode()
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.getcapacitor.Logger: boolean shouldLog()
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: boolean terminate()
com.capacitorjs.plugins.camera.ExifWrapper: com.getcapacitor.JSObject toJson()
com.getcapacitor.WebViewLocalServer$PathHandler: java.lang.String getCharset()
com.getcapacitor.PluginCall: void reject(java.lang.String,com.getcapacitor.JSObject)
org.apache.cordova.CordovaPlugin: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.getcapacitor.CapConfig: com.getcapacitor.PluginConfig getPluginConfiguration(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.Device: boolean refreshDeviceCache()
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: java.lang.String getHeaderField(java.lang.String)
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment$BottomSheetOnCanceledListener: void onCanceled()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
androidx.core.os.BuildCompat$Api30Impl: int getExtensionVersion(int)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonDrawable()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor,boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconMinSize(int)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.google.android.material.chip.Chip: void setChipIconVisible(int)
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
com.google.android.material.textfield.TextInputLayout: int getStartIconMinSize()
kotlin.random.Random$Default$Serialized: Random$Default$Serialized()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: java.util.HashMap access$getDeviceMap$p(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.getcapacitor.plugin.util.ICapacitorHttpUrlConnection: java.io.InputStream getInputStream()
com.getcapacitor.CapConfig: void loadConfigFromAssets(android.content.res.AssetManager,java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void read(com.getcapacitor.PluginCall)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$startNotifications$2: BluetoothLe$startNotifications$2(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,com.getcapacitor.PluginCall)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.getcapacitor.ServerPath: com.getcapacitor.ServerPath$PathType getType()
com.getcapacitor.Bridge: void triggerWindowJSEvent(java.lang.String,java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$readRssi$1: java.lang.Object invoke(java.lang.Object)
com.getcapacitor.cordova.MockCordovaWebViewImpl$CapacitorEvalBridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWillSuppressErrorPage(boolean)
androidx.appcompat.app.AppCompatActivity: void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
com.capacitorjs.community.plugins.bluetoothle.Device: void setConnectionTimeout(java.lang.String,java.lang.String,android.bluetooth.BluetoothGatt,long)
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.getcapacitor.plugin.CapacitorCookies: void lambda$getCookies$0(com.getcapacitor.PluginCall,java.lang.String)
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder setConnectTimeout(java.lang.Integer)
androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)
com.getcapacitor.PluginHandle: com.getcapacitor.Plugin loadInstance(com.getcapacitor.Plugin)
com.getcapacitor.CapacitorWebView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.getcapacitor.plugin.util.AssetUtil: android.net.Uri parse(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.Device: kotlin.jvm.functions.Function0 access$getOnDisconnect$p(com.capacitorjs.community.plugins.bluetoothle.Device)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$discoverServices$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
com.getcapacitor.App: void setAppRestoredListener(com.getcapacitor.App$AppRestoredListener)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)
com.getcapacitor.CapConfig: CapConfig()
com.getcapacitor.MessageHandler: void callCordovaPluginMethod(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalBias(float)
com.getcapacitor.plugin.CapacitorHttp$1: void run()
com.google.android.material.textfield.TextInputLayout: int getEndIconMinSize()
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
com.getcapacitor.WebViewLocalServer: android.webkit.WebResourceResponse handleCapacitorHttpRequest(android.webkit.WebResourceRequest)
com.getcapacitor.cordova.CapacitorCordovaCookieManager: CapacitorCordovaCookieManager(android.webkit.WebView)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.getcapacitor.JSExport: java.lang.String getMiscFileJS(java.util.ArrayList,android.content.Context)
com.capacitorjs.plugins.camera.CameraResultType: java.lang.String getType()
com.capacitorjs.plugins.camera.CameraPlugin: android.os.Bundle saveInstanceState()
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
com.google.android.material.checkbox.MaterialCheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com.getcapacitor.AndroidProtocolHandler: int getValueType(android.content.Context,int)
com.getcapacitor.BridgeWebChromeClient: void lambda$showImageCapturePicker$13(android.net.Uri,android.webkit.ValueCallback,androidx.activity.result.ActivityResult)
com.getcapacitor.plugin.CapacitorCookieManager: CapacitorCookieManager(java.net.CookieStore,java.net.CookiePolicy,com.getcapacitor.Bridge)
com.getcapacitor.Plugin: void pluginRequestAllPermissions()
com.getcapacitor.WebViewLocalServer: java.lang.String getMimeType(java.lang.String,java.io.InputStream)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.getcapacitor.PluginCall: void unavailable(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.fragment.app.Fragment: java.lang.String toString()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void handlePause(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(android.view.accessibility.AccessibilityNodeInfo,int,int)
com.capacitorjs.plugins.camera.CameraPlugin: androidx.activity.result.ActivityResultLauncher registerActivityResultLauncher(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRendererClient()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
com.google.android.material.chip.Chip: void setChecked(boolean)
com.getcapacitor.Bridge: void lambda$setServerAssetPath$5()
androidx.appcompat.widget.AppCompatSpinner$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: byte[] getAsArrayBuffer()
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder setUrlParams(com.getcapacitor.JSObject,boolean)
com.getcapacitor.WebViewLocalServer: int getStatusCode(java.io.InputStream,int)
com.getcapacitor.BridgeWebChromeClient: void showFilePicker(android.webkit.ValueCallback,android.webkit.WebChromeClient$FileChooserParams)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.getcapacitor.Plugin: void notifyListeners(java.lang.String,com.getcapacitor.JSObject,boolean)
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
com.google.android.material.internal.BaselineLayout: int getBaseline()
com.getcapacitor.BridgeActivity: void onSaveInstanceState(android.os.Bundle)
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
org.apache.cordova.CordovaPlugin: void requestPermissions(int)
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
com.getcapacitor.Bridge: com.getcapacitor.util.HostMask getAppAllowNavigationMask()
kotlin.random.Random$Default$Serialized: java.lang.Object readResolve()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.getcapacitor.JSExportException: JSExportException(java.lang.Throwable)
androidx.core.app.ActivityCompat$Api21Impl: void setExitSharedElementCallback(android.app.Activity,android.app.SharedElementCallback)
org.apache.cordova.CordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestLEScan$1: java.lang.Object invoke(java.lang.Object)
com.getcapacitor.Plugin: void lambda$initializeActivityLaunchers$0(java.lang.reflect.Method,androidx.activity.result.ActivityResult)
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setErrorPath(java.lang.String)
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.getcapacitor.Bridge: void reload()
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
com.getcapacitor.JSObject: com.getcapacitor.JSObject put(java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
com.getcapacitor.MessageHandler: void sendResponseMessage(com.getcapacitor.PluginCall,com.getcapacitor.PluginResult,com.getcapacitor.PluginResult)
com.getcapacitor.BridgeWebChromeClient: void lambda$onJsPrompt$8(android.widget.EditText,android.webkit.JsPromptResult,android.content.DialogInterface,int)
org.apache.cordova.CallbackContext: void success()
com.capacitorjs.plugins.camera.CameraPlugin: void lambda$openPhotos$4(com.getcapacitor.PluginCall,android.net.Uri)
com.getcapacitor.JSInjector: java.lang.String readAssetStream(java.io.InputStream)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
org.apache.cordova.engine.SystemWebViewEngine: void evaluateJavascript(java.lang.String,android.webkit.ValueCallback)
com.capacitorjs.plugins.camera.CameraPlugin: void handleOnDestroy()
com.getcapacitor.PluginCall: com.getcapacitor.JSObject getObject(java.lang.String,com.getcapacitor.JSObject)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.getcapacitor.cordova.MockCordovaWebViewImpl: android.view.View getView()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)
com.getcapacitor.Plugin: Plugin()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.getcapacitor.Bridge: com.getcapacitor.PluginCall getSavedCall(java.lang.String)
com.getcapacitor.CapConfig: java.lang.String getAndroidScheme()
com.google.android.material.checkbox.MaterialCheckBox: void setChecked(boolean)
androidx.activity.ComponentActivity: void ensureViewModelStore()
com.getcapacitor.util.HostMask$Util: HostMask$Util()
com.capacitorjs.plugins.camera.CameraResultType: com.capacitorjs.plugins.camera.CameraResultType valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()
com.getcapacitor.BridgeWebChromeClient: boolean isValidMsg(java.lang.String)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
org.apache.cordova.engine.SystemWebViewEngine: java.lang.String getUrl()
com.getcapacitor.PluginResult: com.getcapacitor.PluginResult put(java.lang.String,double)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestDevice$1: void invoke(com.capacitorjs.community.plugins.bluetoothle.ScanResponse)
org.apache.cordova.CordovaHttpAuthHandler: CordovaHttpAuthHandler(android.webkit.HttpAuthHandler)
androidx.activity.ComponentActivity: void onBackPressed()
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
com.getcapacitor.Bridge: boolean isNewBinary()
androidx.fragment.app.DialogFragment: android.app.Dialog requireDialog()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.ParcelFileDescriptor openFile(android.content.ContentProvider,android.net.Uri)
androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
com.google.android.material.appbar.MaterialToolbar: void setLogoScaleType(android.widget.ImageView$ScaleType)
com.getcapacitor.Logger: void info(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.google.android.material.button.MaterialButton: int getStrokeWidth()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder setHeaders(com.getcapacitor.JSObject)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestLEScan$2: java.lang.Object invoke(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: boolean access$getAllowDuplicates$p(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
com.getcapacitor.JSObject: com.getcapacitor.JSObject fromJSONObject(org.json.JSONObject)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.getcapacitor.CapConfig: java.lang.String getString(java.lang.String)
org.apache.cordova.CordovaWebViewImpl: void clearCache(boolean)
com.capacitorjs.plugins.camera.CameraSource: com.capacitorjs.plugins.camera.CameraSource[] values()
com.getcapacitor.UriMatcher: java.lang.Object match(android.net.Uri)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
org.apache.cordova.CallbackContext: java.lang.String getCallbackId()
org.apache.cordova.CoreAndroid: void onDestroy()
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
org.apache.cordova.NativeToJsMessageQueue$LoadUrlBridgeMode: NativeToJsMessageQueue$LoadUrlBridgeMode(org.apache.cordova.CordovaWebViewEngine,org.apache.cordova.CordovaInterface)
com.getcapacitor.Plugin: void requestPermissionForAlias(java.lang.String,com.getcapacitor.PluginCall,java.lang.String)
com.getcapacitor.Plugin: com.getcapacitor.PluginCall getSavedCall()
com.getcapacitor.plugin.CapacitorHttp: boolean isEnabled()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$discoverServices$1: BluetoothLe$discoverServices$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,com.getcapacitor.PluginCall)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.getcapacitor.PluginCall: boolean hasOption(java.lang.String)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void disconnect()
com.getcapacitor.PluginCall: void save()
org.apache.cordova.CordovaWebViewImpl: void handleResume(boolean)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: void showDeviceList$lambda$4$lambda$3(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner,android.content.DialogInterface)
com.getcapacitor.util.HostMask$Nothing: HostMask$Nothing()
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.fragment.app.Fragment: boolean isHidden()
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment: void onCancel(android.content.DialogInterface)
org.apache.cordova.CordovaInterfaceImpl: java.util.concurrent.ExecutorService getThreadPool()
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.getcapacitor.android.R: R()
androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getApkContentsSigners(android.content.pm.SigningInfo)
com.getcapacitor.CapConfig: java.lang.String getString(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
com.capacitorjs.plugins.camera.CameraPlugin: void returnBase64(com.getcapacitor.PluginCall,com.capacitorjs.plugins.camera.ExifWrapper,java.io.ByteArrayOutputStream)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
com.capacitorjs.plugins.camera.CameraPlugin: java.io.File getTempFile(android.net.Uri)
com.getcapacitor.JSInjector: java.io.InputStream getInjectedStream(java.io.InputStream)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
androidx.appcompat.app.AppCompatActivity: void onContentChanged()
com.getcapacitor.plugin.WebView: void setServerAssetPath(com.getcapacitor.PluginCall)
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestLEScan$1: void invoke(com.capacitorjs.community.plugins.bluetoothle.ScanResponse)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getGravityTextAlignment()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemColumnTitle(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
org.apache.cordova.CordovaPlugin: boolean onReceivedClientCertRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaClientCertRequest)
com.capacitorjs.community.plugins.bluetoothle.Device: void access$setBluetoothGatt$p(com.capacitorjs.community.plugins.bluetoothle.Device,android.bluetooth.BluetoothGatt)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setDefaultLocales(androidx.core.os.LocaleListCompat)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.google.android.material.chip.Chip: float getIconStartPadding()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl: void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource)
com.getcapacitor.AndroidProtocolHandler: java.io.InputStream openFile(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getBaseline()
com.getcapacitor.Bridge: void removeWebViewListener(com.getcapacitor.WebViewListener)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.getcapacitor.Plugin: android.content.Context getContext()
org.apache.cordova.engine.SystemWebViewEngine: SystemWebViewEngine(android.content.Context,org.apache.cordova.CordovaPreferences)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
com.capacitorjs.plugins.camera.CameraPlugin: void returnFileURI(com.getcapacitor.PluginCall,com.capacitorjs.plugins.camera.ExifWrapper,android.graphics.Bitmap,android.net.Uri,java.io.ByteArrayOutputStream)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementTargetNames()
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.activity.ComponentActivity: void initializeViewTreeOwners()
com.getcapacitor.CapacitorWebView: androidx.core.view.WindowInsetsCompat lambda$edgeToEdgeHandler$0(android.view.View,androidx.core.view.WindowInsetsCompat)
com.getcapacitor.Bridge: void triggerJSEvent(java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
com.getcapacitor.cordova.MockCordovaWebViewImpl: java.lang.String getUrl()
com.getcapacitor.WebViewLocalServer$LazyInputStream: java.io.InputStream handle()
com.google.android.material.chip.Chip: float getTextEndPadding()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedColor(int)
com.getcapacitor.ProcessedRoute: boolean isIgnoreAssetPath()
com.getcapacitor.PluginHandle: com.getcapacitor.annotation.CapacitorPlugin getPluginAnnotation()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.accessibility.AccessibilityNodeInfo)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
com.capacitorjs.community.plugins.bluetoothle.CallbackResponse: CallbackResponse(boolean,java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.getcapacitor.BridgeWebChromeClient: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)
androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
com.getcapacitor.Bridge: boolean shouldKeepRunning()
org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode: NativeToJsMessageQueue$OnlineEventsBridgeMode(org.apache.cordova.NativeToJsMessageQueue$OnlineEventsBridgeMode$OnlineEventsBridgeModeDelegate)
com.capacitorjs.plugins.camera.CameraSettings: void setSaveToGallery(boolean)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
org.apache.cordova.engine.SystemWebViewEngine: void clearCache()
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
com.getcapacitor.PluginCall: java.lang.Float getFloat(java.lang.String,java.lang.Float)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
com.getcapacitor.PluginCall: void reject(java.lang.String,java.lang.Exception,com.getcapacitor.JSObject)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
com.getcapacitor.JSObject: com.getcapacitor.JSObject put(java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
com.getcapacitor.plugin.util.AssetUtil: java.lang.String getBaseName(java.lang.String)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
com.getcapacitor.PluginCall: void unimplemented()
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values()
com.getcapacitor.AndroidProtocolHandler: java.io.InputStream openContentUrl(android.net.Uri)
com.getcapacitor.BridgeActivity: void onDestroy()
com.google.android.material.chip.Chip: void setAccessibilityClassName(java.lang.CharSequence)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
androidx.constraintlayout.helper.widget.Flow: void setVerticalGap(int)
com.getcapacitor.WebViewLocalServer$1: WebViewLocalServer$1(com.getcapacitor.WebViewLocalServer,java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setPaddingRight(int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.getcapacitor.Plugin: boolean hasListeners(java.lang.String)
com.getcapacitor.Plugin: com.getcapacitor.PluginConfig getConfig()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
com.getcapacitor.plugin.util.HttpRequestHandler: java.lang.String readStreamAsString(java.io.InputStream)
com.getcapacitor.CapConfig: int getMinHuaweiWebViewVersion()
com.getcapacitor.Bridge: com.getcapacitor.WebViewLocalServer getLocalServer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
org.apache.cordova.CallbackContext: void error(org.json.JSONObject)
com.getcapacitor.NativePlugin: java.lang.String[] permissions()
com.getcapacitor.PermissionState: com.getcapacitor.PermissionState[] $values()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$connect$1: java.lang.Object invoke(java.lang.Object)
com.getcapacitor.cordova.CapacitorCordovaCookieManager: void clearCookies()
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
com.getcapacitor.JSObject: org.json.JSONObject put(java.lang.String,int)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
androidx.fragment.app.Fragment: void setSharedElementNames(java.util.ArrayList,java.util.ArrayList)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
org.apache.cordova.CoreAndroid: void exitApp()
com.getcapacitor.CapConfig: java.lang.String getAppendedUserAgentString()
com.getcapacitor.plugin.util.HttpRequestHandler: java.lang.Boolean isDomainExcludedFromSSL(com.getcapacitor.Bridge,java.net.URL)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: void startScanning(java.util.List,android.bluetooth.le.ScanSettings,boolean,java.lang.String,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.getcapacitor.plugin.util.AssetUtil: java.lang.String getResourceBaseName(java.lang.String)
org.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList getAllowedRequests()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.getcapacitor.Bridge: void onStop()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
com.google.android.material.chip.Chip: void setLines(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo,long)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.apache.cordova.engine.SystemWebViewEngine: void clearHistory()
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
androidx.transition.ViewGroupUtils$Api29Impl: int getChildDrawingOrder(android.view.ViewGroup,int)
com.capacitorjs.community.plugins.bluetoothle.Device: void reject(java.lang.String,java.lang.String)
androidx.core.view.WindowCompat$Api30Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.getcapacitor.PluginCall: boolean isReleased()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.getcapacitor.cordova.MockCordovaInterfaceImpl: org.apache.cordova.CordovaPlugin getActivityResultCallback()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
androidx.transition.ObjectAnimatorUtils$Api21Impl: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.graphics.Path)
androidx.fragment.app.Fragment: void performLowMemory()
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
androidx.core.view.VelocityTrackerCompat$Api34Impl: boolean isAxisSupported(android.view.VelocityTracker,int)
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller()
androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: com.getcapacitor.JSObject getScanResult(android.bluetooth.le.ScanResult)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.fragment.app.Fragment: void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
com.getcapacitor.BridgeActivity: void onStop()
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
com.getcapacitor.PluginCall: java.lang.Long getLong(java.lang.String,java.lang.Long)
androidx.fragment.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
com.getcapacitor.FileUtils: boolean isMediaDocument(android.net.Uri)
org.apache.cordova.CordovaWebViewImpl: void hideCustomView()
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
org.apache.cordova.NativeToJsMessageQueue$NoOpBridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.getcapacitor.WebViewLocalServer: boolean isMainUrl(android.net.Uri)
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.getcapacitor.JSArray: JSArray(java.util.Collection)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
com.getcapacitor.util.PermissionHelper: java.lang.String[] getManifestPermissions(android.content.Context)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
com.getcapacitor.Bridge: void eval(java.lang.String,android.webkit.ValueCallback)
com.getcapacitor.JSExport: java.lang.String getPluginJS(java.util.Collection)
org.apache.cordova.CordovaPlugin: void onRequestPermissionResult(int,java.lang.String[],int[])
androidx.fragment.app.Fragment: int getNextTransition()
com.capacitorjs.community.plugins.bluetoothle.ConversionKt: java.lang.String bytesToString(byte[])
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment: void lambda$setupDialog$0(int,android.view.View)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalGap(int)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getEndIconScaleType()
com.google.android.material.checkbox.MaterialCheckBox: void setStateDescription(java.lang.CharSequence)
androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)
com.getcapacitor.PluginCall: java.lang.Float getFloat(java.lang.String)
com.getcapacitor.PluginResult: com.getcapacitor.PluginResult put(java.lang.String,java.util.Date)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.getcapacitor.WebViewLocalServer$LazyInputStream: int read(byte[],int,int)
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: com.capacitorjs.community.plugins.bluetoothle.DisplayStrings getDisplayStrings()
com.getcapacitor.BridgeActivity: void onNewIntent(android.content.Intent)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void isBonded(com.getcapacitor.PluginCall)
com.getcapacitor.Bridge: void setServerBasePath(java.lang.String)
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
androidx.fragment.app.Fragment: void startActivity(android.content.Intent)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.getcapacitor.plugin.util.HttpRequestHandler: HttpRequestHandler()
com.getcapacitor.plugin.util.HttpRequestHandler: com.getcapacitor.JSObject buildResponseHeaders(com.getcapacitor.plugin.util.CapacitorHttpUrlConnection)
androidx.activity.ComponentActivity: android.content.Context peekAvailableContext()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.getcapacitor.PluginConfig: java.lang.String[] getArray(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getMaxEms()
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: java.util.List getScanFilters(com.getcapacitor.PluginCall)
com.capacitorjs.plugins.camera.CameraPlugin: boolean checkCameraPermissions(com.getcapacitor.PluginCall)
org.apache.cordova.CordovaWebViewImpl: void showWebPage(java.lang.String,boolean,boolean,java.util.Map)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences,android.webkit.WebView)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.getcapacitor.Plugin: boolean isPermissionDeclared(java.lang.String)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
androidx.activity.Api34Impl: int swipeEdge(android.window.BackEvent)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$createBond$1: void invoke(com.capacitorjs.community.plugins.bluetoothle.CallbackResponse)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.getcapacitor.cordova.MockCordovaWebViewImpl: boolean isInitialized()
com.getcapacitor.plugin.CapacitorCookies: void deleteCookie(com.getcapacitor.PluginCall)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.core.app.ActivityCompat$Api31Impl: boolean isLaunchedFromBubble(android.app.Activity)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminateVisibility(boolean)
com.capacitorjs.community.plugins.bluetoothle.DisplayStrings: DisplayStrings(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.Fragment: android.content.Context getContext()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void clearCache(boolean)
com.getcapacitor.App: void fireRestoredResult(com.getcapacitor.PluginResult)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$writeDescriptor$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.getcapacitor.Bridge: void lambda$setServerBasePath$4()
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.fragment.app.Fragment: int hashCode()
com.getcapacitor.AppUUID: AppUUID()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
com.getcapacitor.PluginMethodHandle: PluginMethodHandle(java.lang.reflect.Method,com.getcapacitor.PluginMethod)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
androidx.activity.ComponentActivity: void removeOnNewIntentListener(androidx.core.util.Consumer)
com.getcapacitor.BridgeWebViewClient: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
com.getcapacitor.FileUtils: java.lang.String legacyPrimaryPath(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)
com.getcapacitor.plugin.util.AssetUtil: AssetUtil(android.content.Context)
com.getcapacitor.JSExport: java.lang.String getGlobalJS(android.content.Context,boolean,boolean)
org.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList getAllowedNavigations()
com.capacitorjs.community.plugins.bluetoothle.ConversionKt: byte[] stringToBytes(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
org.apache.cordova.CordovaClientCertRequest: CordovaClientCertRequest(android.webkit.ClientCertRequest)
androidx.fragment.app.Fragment: boolean isPostponed()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
androidx.appcompat.app.AppCompatActivity: void supportNavigateUpTo(android.content.Intent)
androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
androidx.appcompat.app.AppCompatActivity: void onPostResume()
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean,android.content.res.Configuration)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: void setTimeoutForStopScanning$lambda$5(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.getcapacitor.JSValue: java.lang.Object getValue()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$getOrCreateDevice$newDevice$1: java.lang.Object invoke()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
com.getcapacitor.AndroidProtocolHandler: java.io.InputStream openAsset(java.lang.String)
com.getcapacitor.Plugin: void setPluginHandle(com.getcapacitor.PluginHandle)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDarkBehavior(int)
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: com.getcapacitor.plugin.util.CapacitorHttpUrlConnection build()
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$createStateReceiver$1: BluetoothLe$createStateReceiver$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)
com.getcapacitor.FileUtils: java.lang.String getPathToNonPrimaryVolume(android.content.Context,java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: void showDeviceList()
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: java.io.InputStream getInputStream()
com.getcapacitor.Bridge: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$write$1: java.lang.Object invoke(java.lang.Object)
com.getcapacitor.util.InternalUtils: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,java.lang.String,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.getcapacitor.PluginConfig: org.json.JSONObject getConfigJSON()
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
androidx.fragment.app.Fragment: int getTargetRequestCode()
com.getcapacitor.plugin.util.AssetUtil: android.net.Uri getUriFromRemote(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
com.google.android.material.textfield.TextInputLayout: void setCursorColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
com.capacitorjs.community.plugins.bluetoothle.Device: void access$reject(com.capacitorjs.community.plugins.bluetoothle.Device,java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
com.getcapacitor.WebViewLocalServer: boolean isAllowedUrl(android.net.Uri)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: void setCloseIconSize(float)
com.getcapacitor.cordova.MockCordovaWebViewImpl: boolean backHistory()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void getDevices(com.getcapacitor.PluginCall)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
com.capacitorjs.plugins.camera.CameraSettings: boolean isAllowEditing()
com.getcapacitor.WebViewLocalServer: void hostFiles(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void initialize(com.getcapacitor.PluginCall)
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface: java.util.List getCookieInfo(java.lang.String)
com.getcapacitor.BridgeWebChromeClient: void onHideCustomView()
com.getcapacitor.CapConfig: boolean getBoolean(java.lang.String,boolean)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
com.google.android.material.textfield.TextInputLayout: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
org.apache.cordova.CallbackContext: void success(int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.getcapacitor.JSExport: java.lang.String generateMethodJS(com.getcapacitor.PluginHandle,com.getcapacitor.PluginMethodHandle)
com.capacitorjs.plugins.camera.ExifWrapper: void p(com.getcapacitor.JSObject,java.lang.String)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.getcapacitor.WebViewListener: WebViewListener()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.getcapacitor.BridgeWebChromeClient: android.net.Uri createImageFileUri()
org.apache.cordova.CordovaClientCertRequest: java.lang.String getHost()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setWebViewRendererClient(java.lang.reflect.InvocationHandler)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$stopNotifications$1: void invoke(com.capacitorjs.community.plugins.bluetoothle.CallbackResponse)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.getcapacitor.FileUtils: FileUtils()
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
com.getcapacitor.App: App()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestLEScan$2: BluetoothLe$requestLEScan$2(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe)
com.getcapacitor.plugin.util.MimeType: java.lang.String getValue()
androidx.webkit.internal.ApiHelperForP: boolean isTracing(android.webkit.TracingController)
com.capacitorjs.community.plugins.bluetoothle.Device: android.bluetooth.BluetoothDevice access$getDevice$p(com.capacitorjs.community.plugins.bluetoothle.Device)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
org.apache.cordova.engine.SystemWebViewEngine: boolean canGoBack()
com.getcapacitor.JSObject: com.getcapacitor.JSObject put(java.lang.String,boolean)
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setAlgorithmicDarkeningAllowed(boolean)
com.getcapacitor.Bridge: boolean launchIntent(android.net.Uri)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.activity.ComponentActivity: void removeMenuProvider(androidx.core.view.MenuProvider)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void createBond(com.getcapacitor.PluginCall)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner$scanCallback$1: DeviceScanner$scanCallback$1(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner)
com.getcapacitor.util.JSONUtils: org.json.JSONObject getDeepestObject(org.json.JSONObject,java.lang.String)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
org.apache.cordova.engine.SystemWebViewEngine: org.apache.cordova.ICordovaCookieManager getCookieManager()
com.getcapacitor.CapConfig: java.lang.String getHostname()
com.getcapacitor.PluginCall: void release(com.getcapacitor.Bridge)
com.getcapacitor.Bridge: void restoreInstanceState(android.os.Bundle)
com.getcapacitor.JSObject: java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$createBond$1: BluetoothLe$createBond$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,com.getcapacitor.PluginCall)
com.getcapacitor.Bridge: void onRestart()
androidx.activity.ComponentActivity: void removeOnConfigurationChangedListener(androidx.core.util.Consumer)
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
com.getcapacitor.plugin.util.AssetUtil: android.net.Uri getUriFromPath(java.lang.String)
com.getcapacitor.Plugin: boolean hasRequiredPermissions()
com.getcapacitor.JSArray: java.util.List toList()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
com.getcapacitor.PluginHandle: com.getcapacitor.Plugin getInstance()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
org.apache.cordova.engine.SystemWebViewEngine: SystemWebViewEngine(org.apache.cordova.engine.SystemWebView)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void runInitialization(com.getcapacitor.PluginCall)
org.apache.cordova.CordovaWebViewImpl: boolean backHistory()
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void writeFormDataRequestBody(java.lang.String,com.getcapacitor.JSArray)
com.getcapacitor.Bridge: com.getcapacitor.BridgeWebViewClient getWebViewClient()
com.getcapacitor.FileUtils: java.lang.String getPortablePath(android.content.Context,java.lang.String,android.net.Uri)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
com.getcapacitor.cordova.MockCordovaWebViewImpl: org.apache.cordova.CordovaResourceApi getResourceApi()
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: com.capacitorjs.community.plugins.bluetoothle.Device getDevice(com.getcapacitor.PluginCall)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo,boolean)
com.getcapacitor.Bridge: void injectScriptBeforeLoad(java.lang.String)
org.apache.cordova.CordovaPlugin: java.lang.Boolean shouldAllowNavigation(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
com.getcapacitor.MessageHandler: void lambda$legacySendResponseMessage$1(android.webkit.WebView,java.lang.String)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
org.apache.cordova.CordovaPlugin: android.net.Uri remapUri(android.net.Uri)
com.getcapacitor.WebViewLocalServer: android.webkit.WebResourceResponse handleProxyRequest(android.webkit.WebResourceRequest,com.getcapacitor.WebViewLocalServer$PathHandler)
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setWebContentsDebuggingEnabled(boolean)
com.getcapacitor.Bridge: java.lang.String getServerUrl()
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider)
com.getcapacitor.Plugin: com.getcapacitor.PluginHandle getPluginHandle()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
org.apache.cordova.engine.SystemWebView: SystemWebView(android.content.Context)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
org.apache.cordova.CordovaPlugin: void onReset()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.webkit.internal.ApiHelperForO: android.content.pm.PackageInfo getCurrentWebViewPackage()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent(android.view.accessibility.AccessibilityNodeInfo,int)
androidx.appcompat.app.AppCompatActivity: void setContentView(int)
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setOverriddenUserAgentString(java.lang.String)
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
com.getcapacitor.BridgeWebViewClient: BridgeWebViewClient(com.getcapacitor.Bridge)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.fragment.app.Fragment: void unregisterForContextMenu(android.view.View)
com.getcapacitor.annotation.Permission: java.lang.String alias()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setCursorErrorColor(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
org.apache.cordova.ResumeCallback: ResumeCallback(java.lang.String,org.apache.cordova.PluginManager)
androidx.fragment.app.DialogFragment: boolean getShowsDialog()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
com.getcapacitor.cordova.CapacitorCordovaCookieManager: void setCookie(java.lang.String,java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonIconDrawable()
com.getcapacitor.WebViewLocalServer$LollipopLazyInputStream: WebViewLocalServer$LollipopLazyInputStream(com.getcapacitor.WebViewLocalServer$PathHandler,android.webkit.WebResourceRequest)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.capacitorjs.plugins.camera.ImageUtils: android.graphics.Bitmap resize(android.graphics.Bitmap,int,int)
com.getcapacitor.WebViewLocalServer$LazyInputStream: int available()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment$1: CameraBottomSheetDialogFragment$1(com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment)
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: android.os.Handler access$getDialogHandler$p(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setHTML5mode(boolean)
com.capacitorjs.community.plugins.bluetoothle.Device: void createBondStateReceiver()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
org.apache.cordova.NativeToJsMessageQueue$BridgeMode: void notifyOfFlush(org.apache.cordova.NativeToJsMessageQueue,boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.getcapacitor.WebViewLocalServer$LazyInputStream: java.io.InputStream getInputStream()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.getcapacitor.Logger: java.lang.String tags(java.lang.String[])
com.getcapacitor.AppUUID: java.lang.String getAppUUID(androidx.appcompat.app.AppCompatActivity)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
com.getcapacitor.Bridge: int extractWebViewMajorVersion(android.content.pm.PackageManager,java.lang.String)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: int getType()
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.google.android.material.chip.Chip: void setGravity(int)
androidx.activity.ComponentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.CharSequence castToCharSequence(android.text.PrecomputedText)
com.capacitorjs.community.plugins.bluetoothle.Device$gattCallback$1: void onDescriptorWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.getcapacitor.PluginLoadException: PluginLoadException(java.lang.Throwable)
com.google.android.material.chip.Chip: java.lang.CharSequence getAccessibilityClassName()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
com.getcapacitor.PluginResult: com.getcapacitor.PluginResult put(java.lang.String,java.lang.Object)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
androidx.appcompat.app.AppCompatActivity: boolean onSupportNavigateUp()
androidx.fragment.app.Fragment: int getPopExitAnim()
com.getcapacitor.Bridge: void registerPlugin(java.lang.Class)
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: java.lang.String access$getTAG$cp()
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
org.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaResourceApi getResourceApi()
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
com.capacitorjs.plugins.camera.CameraSettings: void setHeight(int)
com.getcapacitor.BridgeWebViewClient: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setServerUrl(java.lang.String)
org.apache.cordova.CordovaWebViewImpl: org.apache.cordova.CordovaWebViewEngine getEngine()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
androidx.core.view.ViewCompat$Api30Impl: boolean isImportantForContentCapture(android.view.View)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: java.lang.String getDeviceId(com.getcapacitor.PluginCall)
com.getcapacitor.PluginCall: java.lang.String getMethodName()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebChromeClient getWebChromeClient()
org.apache.cordova.AllowListPlugin: java.lang.Boolean shouldAllowRequest(java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.getcapacitor.PluginHandle: com.getcapacitor.Plugin load()
com.getcapacitor.Bridge: void lambda$reload$6()
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
androidx.activity.Api34Impl: float touchX(android.window.BackEvent)
com.getcapacitor.JSValue: com.getcapacitor.JSArray toJSArray()
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
org.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,java.lang.String,org.apache.cordova.CallbackContext)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$startNotifications$1: void invoke(com.capacitorjs.community.plugins.bluetoothle.CallbackResponse)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.getcapacitor.FileUtils$Type: FileUtils$Type(java.lang.String,int,java.lang.String)
androidx.core.location.LocationManagerCompat$Api28Impl: java.lang.String getGnssHardwareModelName(android.location.LocationManager)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
com.getcapacitor.PluginResult: com.getcapacitor.PluginResult jsonPut(java.lang.String,java.lang.Object)
com.getcapacitor.JSValue: com.getcapacitor.JSObject toJSObject()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$writeDescriptor$1: void invoke(com.capacitorjs.community.plugins.bluetoothle.CallbackResponse)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.getcapacitor.plugin.CapacitorCookieManager: void setCookie(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.Device: int getMtu()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEditTextBoxBackground()
com.getcapacitor.Bridge$Builder: Bridge$Builder(androidx.appcompat.app.AppCompatActivity)
com.getcapacitor.Bridge: void setRouteProcessor(com.getcapacitor.RouteProcessor)
com.getcapacitor.Bridge: void loadWebView()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void stopLEScan(com.getcapacitor.PluginCall)
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
kotlin.collections.EmptySet: java.lang.Object readResolve()
com.getcapacitor.PluginCall: void setKeepAlive(java.lang.Boolean)
com.getcapacitor.Plugin: void requestPermissions(com.getcapacitor.PluginCall)
androidx.fragment.app.Fragment: void onResume()
com.google.android.material.button.MaterialButton: void setTextAlignment(int)
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
com.getcapacitor.MessageHandler: void postMessage(java.lang.String)
com.capacitorjs.plugins.camera.CameraPlugin: void showPrompt(com.getcapacitor.PluginCall)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$read$1: java.lang.Object invoke(java.lang.Object)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.getcapacitor.AppUUID: void regenerateAppUUID(androidx.appcompat.app.AppCompatActivity)
com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)
com.getcapacitor.Logger: void verbose(java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
org.apache.cordova.CordovaInterfaceImpl: void onCordovaInit(org.apache.cordova.PluginManager)
com.getcapacitor.JSExport: org.json.JSONObject createPluginMethodHeader(com.getcapacitor.PluginMethodHandle)
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
com.getcapacitor.BridgeWebChromeClient: void lambda$showVideoCapturePicker$14(android.webkit.ValueCallback,androidx.activity.result.ActivityResult)
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessageWithPayload(java.lang.reflect.InvocationHandler)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
androidx.transition.ViewUtilsApi21$Api29Impl: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void requestLEScan(com.getcapacitor.PluginCall)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLocale(android.content.res.Configuration,java.util.Locale)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
com.google.android.material.chip.Chip: float getChipEndPadding()
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$createStateReceiver$1: void onReceive(android.content.Context,android.content.Intent)
com.getcapacitor.plugin.util.HttpRequestHandler: com.getcapacitor.JSObject request(com.getcapacitor.PluginCall,java.lang.String,com.getcapacitor.Bridge)
com.getcapacitor.PluginConfig: java.lang.String getString(java.lang.String,java.lang.String)
com.getcapacitor.PluginCall: java.lang.String getString(java.lang.String)
com.getcapacitor.AppUUID: void writeUUID(androidx.appcompat.app.AppCompatActivity,java.lang.String)
com.getcapacitor.JSObject: JSObject(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
org.apache.cordova.AllowListPlugin: java.lang.Boolean shouldOpenExternalUrl(java.lang.String)
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: void addUrlParam(java.lang.StringBuilder,java.lang.String,java.lang.String,boolean)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCursorColor()
androidx.appcompat.app.AppCompatDelegate$Api33Impl: void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.getcapacitor.plugin.util.AssetUtil: int getResId(java.lang.String)
com.getcapacitor.JSObject: java.lang.String getString(java.lang.String,java.lang.String)
org.apache.cordova.CoreAndroid: void fireJavascriptEvent(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder setUrl(java.net.URL)
org.apache.cordova.CordovaWebViewImpl: void onNewIntent(android.content.Intent)
com.getcapacitor.Plugin: void notifyListeners(java.lang.String,com.getcapacitor.JSObject)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
com.getcapacitor.PluginResult: com.getcapacitor.PluginResult put(java.lang.String,int)
com.capacitorjs.community.plugins.bluetoothle.Device$Companion: Device$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.capacitorjs.plugins.camera.CameraPlugin: void pickImages(com.getcapacitor.PluginCall)
com.capacitorjs.community.plugins.bluetoothle.Device: void access$resolve(com.capacitorjs.community.plugins.bluetoothle.Device,java.lang.String,java.lang.String)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.fragment.app.DialogFragment: boolean isCancelable()
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
com.google.android.material.button.MaterialButton: void setPressed(boolean)
com.getcapacitor.PluginMethod: java.lang.String returnType()
com.google.android.material.internal.TouchObserverFrameLayout: void setOnTouchListener(android.view.View$OnTouchListener)
com.getcapacitor.Bridge: void onNewIntent(android.content.Intent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.getcapacitor.Bridge: java.lang.String getAppUrl()
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.capacitorjs.plugins.camera.CameraUtils: CameraUtils()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
com.capacitorjs.community.plugins.bluetoothle.DeviceKt: java.lang.Object popFirstMatch(java.util.concurrent.ConcurrentLinkedQueue,kotlin.jvm.functions.Function1)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.getcapacitor.plugin.CapacitorCookies: void clearCookies(com.getcapacitor.PluginCall)
com.getcapacitor.Plugin: void restoreState(android.os.Bundle)
com.getcapacitor.PluginCall: void resolve(com.getcapacitor.JSObject)
com.getcapacitor.plugin.util.AssetUtil: int getResourceID(android.content.Context,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.capacitorjs.community.plugins.bluetoothle.Device$gattCallback$1: void onCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,byte[],int)
com.getcapacitor.Logger: void error(java.lang.String,java.lang.String,java.lang.Throwable)
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment: void setupDialog(android.app.Dialog,int)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void loadUrl(java.lang.String)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
com.getcapacitor.PluginCall: java.lang.Double getDouble(java.lang.String)
org.apache.cordova.AllowListPlugin: void setAllowedIntents(org.apache.cordova.AllowList)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void writeRequestBody(java.lang.String)
com.getcapacitor.Bridge$1: Bridge$1(com.getcapacitor.Bridge)
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.capacitorjs.community.plugins.bluetoothle.Device: java.lang.String getId()
com.getcapacitor.PluginCall: void reject(java.lang.String,java.lang.String,com.getcapacitor.JSObject)
androidx.core.os.LocaleListCompat$Api21Impl: boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void readRssi(com.getcapacitor.PluginCall)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: java.lang.String getAsString()
com.getcapacitor.CapConfig: boolean isWebContentsDebuggingEnabled()
com.getcapacitor.plugin.CapacitorHttp: void http(com.getcapacitor.PluginCall,java.lang.String)
com.getcapacitor.BridgeWebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo(android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.getcapacitor.Bridge: androidx.fragment.app.Fragment getFragment()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: java.lang.Boolean assertBluetoothAdapter(com.getcapacitor.PluginCall)
org.apache.cordova.CallbackContext: void success(org.json.JSONArray)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: java.lang.String access$getNamePrefix$p(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
org.apache.cordova.CoreAndroid: void overrideBackbutton(boolean)
com.capacitorjs.community.plugins.bluetoothle.ScanResponse: java.lang.String getMessage()
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.getcapacitor.WebViewLocalServer: java.io.InputStream getJavaScriptInjectedStream(java.io.InputStream)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.getcapacitor.Bridge: void lambda$callPluginMethod$0(com.getcapacitor.PluginHandle,java.lang.String,com.getcapacitor.PluginCall)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarVisibility(boolean)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType: com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType[] $values()
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig create()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler getMessagePayload()
com.getcapacitor.JSExportException: JSExportException(java.lang.String,java.lang.Throwable)
com.google.android.material.button.MaterialButton: int getTextHeight()
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
com.capacitorjs.plugins.camera.CameraPlugin: android.content.Intent createEditIntent(android.net.Uri)
com.getcapacitor.cordova.MockCordovaWebViewImpl: org.apache.cordova.PluginManager getPluginManager()
com.getcapacitor.Bridge: void onDestroy()
org.apache.cordova.AllowListPlugin: org.apache.cordova.AllowList getAllowedIntents()
com.getcapacitor.Bridge: androidx.appcompat.app.AppCompatActivity getActivity()
com.getcapacitor.PluginManager: org.json.JSONArray parsePluginsJSON()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
com.getcapacitor.CapConfig: java.lang.String getOverriddenUserAgentString()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$write$1: void invoke(com.capacitorjs.community.plugins.bluetoothle.CallbackResponse)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
com.google.android.material.textfield.TextInputLayout: void setStartIconMinSize(int)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
org.apache.cordova.CordovaClientCertRequest: void proceed(java.security.PrivateKey,java.security.cert.X509Certificate[])
com.getcapacitor.plugin.util.ICapacitorHttpUrlConnection: java.io.InputStream getErrorStream()
com.capacitorjs.community.plugins.bluetoothle.Device: void connect(long,kotlin.jvm.functions.Function1)
org.apache.cordova.CordovaPlugin: java.lang.Boolean shouldAllowBridgeAccess(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getUniqueId(android.view.accessibility.AccessibilityNodeInfo)
androidx.transition.ViewGroupUtils$Api29Impl: void suppressLayout(android.view.ViewGroup,boolean)
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
com.capacitorjs.plugins.camera.CameraPlugin: void deleteImageFile()
com.getcapacitor.Bridge: void logPluginLoadException(java.lang.Class,java.lang.Exception)
com.google.android.material.chip.Chip: float getChipCornerRadius()
com.getcapacitor.cordova.MockCordovaWebViewImpl: MockCordovaWebViewImpl(android.content.Context)
com.getcapacitor.AppUUID: void assertAppUUID(androidx.appcompat.app.AppCompatActivity)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.getcapacitor.plugin.CapacitorHttp: void request(com.getcapacitor.PluginCall)
androidx.transition.Transition$Impl26: void setCurrentPlayTime(android.animation.Animator,long)
org.apache.cordova.CordovaPlugin: void onPause(boolean)
androidx.fragment.app.Fragment: boolean isResumed()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
com.capacitorjs.community.plugins.bluetoothle.Device: void discoverServices(long,kotlin.jvm.functions.Function1)
org.apache.cordova.CordovaPlugin: void onNewIntent(android.content.Intent)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
org.apache.cordova.CordovaInterfaceImpl: void setActivityResultRequestCode(int)
com.getcapacitor.CapConfig: boolean validateScheme(java.lang.String)
com.capacitorjs.plugins.camera.CameraPlugin: void writePhoto(java.io.File,java.io.InputStream)
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.getcapacitor.util.InternalUtils: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,java.lang.String)
com.getcapacitor.Bridge: void logInvalidPluginException(java.lang.Class)
com.getcapacitor.MessageHandler: void lambda$new$0(android.webkit.WebView,androidx.webkit.WebMessageCompat,android.net.Uri,boolean,androidx.webkit.JavaScriptReplyProxy)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void requestConnectionPriority(com.getcapacitor.PluginCall)
com.getcapacitor.CapConfig: CapConfig(android.content.res.AssetManager,org.json.JSONObject)
com.getcapacitor.FileUtils$Type: com.getcapacitor.FileUtils$Type valueOf(java.lang.String)
org.apache.cordova.CoreAndroid: void clearCache()
com.capacitorjs.community.plugins.bluetoothle.ConversionKt: int[] getHEX_LOOKUP_TABLE()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setTextLocale(android.widget.TextView,java.util.Locale)
org.apache.cordova.CordovaInterfaceImpl: boolean hasPermission(java.lang.String)
com.getcapacitor.PluginCall: void reject(java.lang.String,java.lang.Exception)
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager requireFragmentManager()
com.capacitorjs.community.plugins.bluetoothle.TimeoutHandler: android.os.Handler getHandler()
androidx.fragment.app.Fragment: boolean isVisible()
com.getcapacitor.Bridge: void onResume()
com.getcapacitor.App$AppRestoredListener: void onAppRestored(com.getcapacitor.PluginResult)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.getcapacitor.Bridge: void handleAppUrlLoadError(java.lang.Exception)
org.apache.cordova.CordovaPlugin: boolean onOverrideUrlLoading(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.getcapacitor.MessageHandler: void callPluginMethod(java.lang.String,java.lang.String,java.lang.String,com.getcapacitor.JSObject)
com.google.android.material.ripple.RippleUtils$RippleUtilsLollipop: android.graphics.drawable.Drawable createOvalRipple(android.content.Context,int)
com.getcapacitor.BridgeWebChromeClient: java.lang.String[] getValidTypes(java.lang.String[])
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
com.getcapacitor.plugin.util.HttpRequestHandler: com.getcapacitor.JSObject buildResponse(com.getcapacitor.plugin.util.CapacitorHttpUrlConnection)
com.getcapacitor.Bridge: com.getcapacitor.PluginHandle getPlugin(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.R: R()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererResponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$startNotifications$2: void invoke(com.capacitorjs.community.plugins.bluetoothle.CallbackResponse)
com.getcapacitor.CapConfig: java.lang.String getBackgroundColor()
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
org.apache.cordova.CordovaPlugin: void onStop()
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment$BottomSheetOnSelectedListener: void onSelected(int)
androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.getcapacitor.Bridge: java.lang.String getScheme()
com.getcapacitor.plugin.CapacitorHttp: void patch(com.getcapacitor.PluginCall)
com.getcapacitor.Bridge$Builder: com.getcapacitor.Bridge$Builder addWebViewListeners(java.util.List)
com.getcapacitor.PluginManager: java.util.List loadPluginClasses()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void enable(com.getcapacitor.PluginCall)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void setPaused(boolean)
com.getcapacitor.JSArray: JSArray()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.constraintlayout.widget.Barrier: void setType(int)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void addWebMessageListener(java.lang.String,java.lang.String[],java.lang.reflect.InvocationHandler)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: java.net.URL getURL()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
com.getcapacitor.Logger: void debug(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.activity.ComponentActivity: void addOnNewIntentListener(androidx.core.util.Consumer)
com.getcapacitor.PermissionState: com.getcapacitor.PermissionState valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.getcapacitor.plugin.CapacitorCookieManager: java.lang.String getCookieString(java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment: void setOptions(java.util.List,com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment$BottomSheetOnSelectedListener,com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment$BottomSheetOnCanceledListener)
com.getcapacitor.cordova.MockCordovaWebViewImpl: boolean isCustomViewShowing()
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
com.getcapacitor.ServerPath$PathType: ServerPath$PathType(java.lang.String,int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.core.app.ActivityCompat$Api21Impl: void postponeEnterTransition(android.app.Activity)
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater()
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.getcapacitor.WebViewLocalServer$PathHandler: java.io.InputStream handle(android.webkit.WebResourceRequest)
com.capacitorjs.plugins.camera.CameraSettings: void setResultType(com.capacitorjs.plugins.camera.CameraResultType)
com.getcapacitor.CapConfig: com.getcapacitor.CapConfig loadFromAssets(android.content.Context,java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void getMtu(com.getcapacitor.PluginCall)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void setRequestBody(com.getcapacitor.PluginCall,com.getcapacitor.JSValue,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.getcapacitor.plugin.CapacitorCookies: void setCookie(java.lang.String,java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.activity.ComponentActivity: void addOnTrimMemoryListener(androidx.core.util.Consumer)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.getcapacitor.Bridge: com.getcapacitor.PluginCall getPluginCallForLastActivity()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.getcapacitor.App: boolean isActive()
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()
org.apache.cordova.CordovaInterfaceImpl: void onSaveInstanceState(android.os.Bundle)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.getcapacitor.Plugin: void handleOnStart()
com.getcapacitor.WebViewLocalServer$PathHandler: java.lang.String getReasonPhrase()
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
com.getcapacitor.PluginCall: void unimplemented(java.lang.String)
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.getcapacitor.NativePlugin: int[] requestCodes()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(int)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.constraintlayout.widget.Barrier: int getType()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
androidx.fragment.app.Fragment: android.os.Bundle requireArguments()
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
com.capacitorjs.plugins.camera.CameraSettings: void setAllowEditing(boolean)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$readDescriptor$1: void invoke(com.capacitorjs.community.plugins.bluetoothle.CallbackResponse)
com.getcapacitor.PluginLoadException: PluginLoadException(java.lang.String)
com.getcapacitor.BridgeWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
androidx.webkit.internal.ApiHelperForP: void setDataDirectorySuffix(java.lang.String)
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
androidx.fragment.app.Fragment: void setReturnTransition(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void getServices(com.getcapacitor.PluginCall)
androidx.activity.Api34Impl: float progress(android.window.BackEvent)
com.getcapacitor.PluginConfig: int getInt(java.lang.String,int)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void showWebPage(java.lang.String,boolean,boolean,java.util.Map)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.getcapacitor.JSExportException: JSExportException(java.lang.String)
com.capacitorjs.plugins.camera.CameraSettings: void setShouldCorrectOrientation(boolean)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
androidx.core.app.ActivityCompat$Api32Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setZoomableWebView(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.google.android.material.textfield.MaterialAutoCompleteTextView: float getPopupElevation()
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextDirection(android.view.View,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: java.lang.String buildDefaultAcceptLanguageProperty()
com.getcapacitor.Bridge: void savePermissionCall(com.getcapacitor.PluginCall)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: void showDeviceList$lambda$4$lambda$2(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner,android.content.DialogInterface,int)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
androidx.fragment.app.Fragment: void setAllowReturnTransitionOverlap(boolean)
org.apache.cordova.CordovaWebViewImpl$EngineClient: void clearLoadTimeoutTimer()
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment$1: void onSlide(android.view.View,float)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.capacitorjs.plugins.camera.CameraPlugin: java.util.ArrayList getLegacyParcelableArrayList(android.os.Bundle,java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.Device: boolean isBonded()
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: com.getcapacitor.JSObject getBleDevice(android.bluetooth.BluetoothDevice)
com.getcapacitor.plugin.CapacitorCookies: void handleOnDestroy()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
com.getcapacitor.Plugin: void handleOnDestroy()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.getcapacitor.WebViewListener: void onPageStarted(android.webkit.WebView)
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
com.capacitorjs.plugins.camera.CameraSettings: int getHeight()
com.getcapacitor.BridgeWebChromeClient: java.io.File createImageFile(android.app.Activity)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getSuperButtonTintList()
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
com.getcapacitor.NativePlugin: java.lang.String name()
com.getcapacitor.annotation.CapacitorPlugin: int[] requestCodes()
com.getcapacitor.Plugin: void load()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.capacitorjs.community.plugins.bluetoothle.Device: boolean requestConnectionPriority(int)
com.getcapacitor.WebViewLocalServer: android.net.Uri parseAndVerifyUrl(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
com.getcapacitor.WebViewLocalServer$LazyInputStream: int read()
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)
org.apache.cordova.CordovaInterfaceImpl: void setActivityResultCallback(org.apache.cordova.CordovaPlugin)
com.getcapacitor.android.R$color: R$color()
com.google.android.material.button.MaterialButton: int getInsetTop()
com.getcapacitor.util.JSONUtils: org.json.JSONObject getObject(org.json.JSONObject,java.lang.String)
androidx.fragment.app.DialogFragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setAllowMixedContent(boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
com.getcapacitor.Bridge: void setPluginCallForLastActivity(com.getcapacitor.PluginCall)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
androidx.appcompat.app.ResourcesFlusher$Api16Impl: void clear(android.util.LongSparseArray)
com.google.android.material.chip.Chip: void setMaxWidth(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.getcapacitor.PluginCall: java.lang.String getCallbackId()
com.capacitorjs.plugins.camera.CameraSettings: CameraSettings()
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
androidx.fragment.app.Fragment: void performDetach()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean,android.content.res.Configuration)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
com.getcapacitor.cordova.MockCordovaWebViewImpl: java.lang.Object postMessage(java.lang.String,java.lang.Object)
com.capacitorjs.community.plugins.bluetoothle.ConversionKt: java.lang.String toHexString(byte[])
com.google.android.material.bottomsheet.BottomSheetDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$read$1: BluetoothLe$read$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,com.getcapacitor.PluginCall)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.getcapacitor.JSExport: java.lang.String getCordovaPluginsFileJS(android.content.Context)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
com.getcapacitor.CapConfig: com.getcapacitor.CapConfig loadFromFile(android.content.Context,java.lang.String)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
com.getcapacitor.util.HostMask$Any: HostMask$Any(java.util.List)
com.google.android.material.chip.Chip: void setMinLines(int)
com.getcapacitor.WebViewListener: void onReceivedHttpError(android.webkit.WebView)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.getcapacitor.PluginCall: void reject(java.lang.String,java.lang.String,java.lang.Exception,com.getcapacitor.JSObject)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDark()
androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setQueryFromAppProcessEnabled(android.view.accessibility.AccessibilityNodeInfo,android.view.View,boolean)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.getcapacitor.plugin.util.HttpRequestHandler: com.getcapacitor.JSObject buildResponse(com.getcapacitor.plugin.util.CapacitorHttpUrlConnection,com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void setRequestMethod(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType: com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.getcapacitor.PluginMethodHandle: java.lang.reflect.Method getMethod()
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.getcapacitor.PluginCall: void successCallback(com.getcapacitor.PluginResult)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.capacitorjs.community.plugins.bluetoothle.Device: java.lang.String access$getTAG$cp()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
org.apache.cordova.AllowListPlugin: AllowListPlugin()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void openLocationSettings(com.getcapacitor.PluginCall)
com.getcapacitor.JSArray: com.getcapacitor.JSArray from(java.lang.Object)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
com.getcapacitor.Plugin: void triggerPermissionCallback(java.lang.reflect.Method,java.util.Map)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
androidx.fragment.app.Fragment: void setRetainInstance(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
org.apache.cordova.AllowListPlugin: AllowListPlugin(org.xmlpull.v1.XmlPullParser)
com.getcapacitor.BridgeWebChromeClient: void lambda$onJsConfirm$6(android.webkit.JsResult,android.content.DialogInterface,int)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
org.apache.cordova.CordovaWebViewImpl: void clearCache()
com.capacitorjs.community.plugins.bluetoothle.TimeoutHandler: java.lang.String getKey()
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
androidx.appcompat.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()
com.getcapacitor.WebViewLocalServer$LollipopLazyInputStream: java.io.InputStream handle()
com.google.android.material.checkbox.MaterialCheckBox: void setErrorShown(boolean)
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.getcapacitor.BridgeWebChromeClient: void lambda$onJsAlert$3(android.webkit.JsResult,android.content.DialogInterface,int)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void setRequestBody(com.getcapacitor.PluginCall,com.getcapacitor.JSValue)
com.capacitorjs.plugins.camera.CameraPlugin: void processEditedImage(com.getcapacitor.PluginCall,androidx.activity.result.ActivityResult)
org.apache.cordova.CoreAndroid: void backHistory()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: long getLongVersionCode(android.content.pm.PackageInfo)
com.getcapacitor.util.JSONUtils: boolean getBoolean(org.json.JSONObject,java.lang.String,boolean)
com.google.android.material.chip.Chip: float getIconEndPadding()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)
com.getcapacitor.Bridge: void setWebViewClient(com.getcapacitor.BridgeWebViewClient)
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean)
com.getcapacitor.cordova.MockCordovaWebViewImpl: org.apache.cordova.CordovaWebViewEngine getEngine()
androidx.core.app.ActivityCompat$Api21Impl: void setEnterSharedElementCallback(android.app.Activity,android.app.SharedElementCallback)
androidx.constraintlayout.helper.widget.Flow: void setPadding(int)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestDevice$1: BluetoothLe$requestDevice$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,com.getcapacitor.PluginCall)
androidx.fragment.app.DialogFragment: int getTheme()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.getcapacitor.util.HostMask$Parser: com.getcapacitor.util.HostMask parse(java.lang.String)
com.getcapacitor.Bridge: com.getcapacitor.ServerPath getServerPath()
com.getcapacitor.CapConfig: java.lang.String[] getAllowNavigation()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
com.getcapacitor.Logger: void error(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$Companion: BluetoothLe$Companion()
com.getcapacitor.Plugin: com.getcapacitor.Bridge getBridge()
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
org.apache.cordova.engine.SystemWebViewEngine: void setPaused(boolean)
androidx.appcompat.app.AppCompatActivity: void setSupportActionBar(androidx.appcompat.widget.Toolbar)
com.getcapacitor.AndroidProtocolHandler: AndroidProtocolHandler(android.content.Context)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.getcapacitor.PermissionState: com.getcapacitor.PermissionState byState(java.lang.String)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void triggerDocumentEvent(java.lang.String)
com.getcapacitor.Plugin: void requestPermissionForAliases(java.lang.String[],com.getcapacitor.PluginCall,java.lang.String)
org.apache.cordova.engine.SystemWebViewEngine: android.view.View getView()
com.capacitorjs.community.plugins.bluetoothle.Device: void writeDescriptor(java.util.UUID,java.util.UUID,java.util.UUID,java.lang.String,long,kotlin.jvm.functions.Function1)
org.apache.cordova.PluginResult$Status: org.apache.cordova.PluginResult$Status[] values()
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler addDocumentStartJavaScript(java.lang.String,java.lang.String[])
com.getcapacitor.cordova.CapacitorCordovaCookieManager: void setCookiesEnabled(boolean)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
androidx.fragment.app.Fragment: int getEnterAnim()
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMaximumFlingVelocity(android.view.ViewConfiguration,int,int,int)
androidx.fragment.app.Fragment: boolean isRemoving()
com.capacitorjs.plugins.camera.CameraResultType: CameraResultType(java.lang.String,int,java.lang.String)
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder setUrlParams(com.getcapacitor.JSObject)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
androidx.fragment.app.Fragment: boolean getPopDirection()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
com.getcapacitor.CapConfig: com.getcapacitor.CapConfig loadDefault(android.content.Context)
org.apache.cordova.CordovaInterfaceImpl: android.content.Context getContext()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.getcapacitor.plugin.util.MimeType: com.getcapacitor.plugin.util.MimeType valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
com.getcapacitor.PluginCall: java.lang.String getPluginId()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$readRssi$1: void invoke(com.capacitorjs.community.plugins.bluetoothle.CallbackResponse)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
org.apache.cordova.AllowListPlugin: void setAllowedRequests(org.apache.cordova.AllowList)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.getcapacitor.Bridge: void lambda$eval$1(java.lang.String,android.webkit.ValueCallback)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
com.google.android.material.button.MaterialButton: int getInsetBottom()
com.getcapacitor.Bridge: void startActivityForPluginWithResult(com.getcapacitor.PluginCall,android.content.Intent,int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setAndroidScheme(java.lang.String)
com.capacitorjs.plugins.camera.CameraPlugin: void lambda$showPrompt$1(com.getcapacitor.PluginCall)
androidx.fragment.app.Fragment: void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
com.getcapacitor.Bridge$Builder: com.getcapacitor.Bridge create()
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
org.apache.cordova.CordovaPlugin: boolean onReceivedHttpAuthRequest(org.apache.cordova.CordovaWebView,org.apache.cordova.ICordovaHttpAuthHandler,java.lang.String,java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$disconnect$1: void invoke(com.capacitorjs.community.plugins.bluetoothle.CallbackResponse)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.getcapacitor.Plugin: android.os.Bundle saveInstanceState()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
com.getcapacitor.Plugin: void initializeActivityLaunchers()
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
com.getcapacitor.android.R$string: R$string()
androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
com.google.android.material.textfield.TextInputLayout: void setErrorAccessibilityLiveRegion(int)
com.getcapacitor.PluginHandle: java.util.Collection getMethods()
androidx.fragment.app.DialogFragment: android.view.View onFindViewById(int)
androidx.fragment.app.DialogFragment: int show(androidx.fragment.app.FragmentTransaction,java.lang.String)
com.getcapacitor.Plugin: void pluginRequestPermissions(java.lang.String[],int)
com.getcapacitor.PluginCall$PluginCallDataTypeException: PluginCall$PluginCallDataTypeException(com.getcapacitor.PluginCall,java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.Device: void setConnectionTimeout$lambda$3(com.capacitorjs.community.plugins.bluetoothle.Device,android.bluetooth.BluetoothGatt,java.lang.String,java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$Companion: BluetoothLe$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void onNewIntent(android.content.Intent)
androidx.webkit.internal.ApiHelperForP: boolean stop(android.webkit.TracingController,java.io.OutputStream,java.util.concurrent.Executor)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: CapacitorHttpUrlConnection(java.net.HttpURLConnection)
com.getcapacitor.Bridge: void execute(java.lang.Runnable)
com.getcapacitor.Bridge: com.getcapacitor.PluginHandle getPluginWithRequestCode(int)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonTintList()
org.apache.cordova.CordovaWebViewImpl: void clearHistory()
com.getcapacitor.CapConfig: boolean isZoomableWebView()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
androidx.core.app.ActivityCompat$Api21Impl: void startPostponedEnterTransition(android.app.Activity)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBar getSupportActionBar()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.getcapacitor.Logger: void loadConfig(com.getcapacitor.CapConfig)
com.getcapacitor.plugin.util.HttpRequestHandler: java.lang.String readStreamAsBase64(java.io.InputStream)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.getcapacitor.WebViewLocalServer$LazyInputStream: int read(byte[])
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
com.getcapacitor.CapConfig: boolean isMixedContentAllowed()
org.apache.cordova.CallbackContext: void error(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
com.getcapacitor.plugin.util.AssetUtil: int getResId(android.content.res.Resources,java.lang.String)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawableResource(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo,boolean)
com.capacitorjs.plugins.camera.R: R()
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextAlignment(android.view.View)
com.getcapacitor.BridgeWebChromeClient: void onPermissionRequest(android.webkit.PermissionRequest)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void setSSLSocketFactory(com.getcapacitor.Bridge)
org.apache.cordova.CordovaInterfaceImpl: void requestPermissions(org.apache.cordova.CordovaPlugin,int,java.lang.String[])
com.google.android.material.chip.Chip: void setIconStartPadding(float)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.content.FileProvider: FileProvider()
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
com.capacitorjs.community.plugins.bluetoothle.Device: java.util.List getServices()
com.capacitorjs.plugins.camera.CameraPlugin: void requestPermissions(com.getcapacitor.PluginCall)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestLEScan$1: BluetoothLe$requestLEScan$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,com.getcapacitor.PluginCall)
androidx.fragment.app.Fragment: android.os.Bundle getArguments()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
com.getcapacitor.JSExport: java.lang.String getCordovaPluginJS(android.content.Context)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void setRequestHeaders(com.getcapacitor.JSObject)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void connect(com.getcapacitor.PluginCall)
com.capacitorjs.community.plugins.bluetoothle.DeviceList: int getCount()
org.apache.cordova.CordovaWebViewImpl: android.content.Context getContext()
com.google.android.material.button.MaterialButton: int getIconPadding()
androidx.appcompat.app.AppCompatDelegate$Api33Impl: android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)
com.getcapacitor.PluginHandle: java.lang.Class getPluginClass()
com.capacitorjs.plugins.camera.CameraSettings: com.capacitorjs.plugins.camera.CameraSource getSource()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType: com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType parse(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
com.getcapacitor.plugin.CapacitorCookieManager: void setCookie(java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.appbar.MaterialToolbar: android.widget.ImageView$ScaleType getLogoScaleType()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$discoverServices$1: void invoke(com.capacitorjs.community.plugins.bluetoothle.CallbackResponse)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.getcapacitor.android.R$layout: R$layout()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void checkPermission(com.getcapacitor.PluginCall)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.capacitorjs.community.plugins.bluetoothle.Device$gattCallback$1: void onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,byte[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.getcapacitor.Plugin: java.lang.String getAppId()
androidx.fragment.app.DialogFragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: int getResponseCode()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
org.apache.cordova.CallbackContext: void success(byte[])
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCursorErrorColor()
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher access$100(androidx.activity.ComponentActivity)
org.apache.cordova.CordovaPlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)
com.getcapacitor.Bridge: void addWebViewListener(com.getcapacitor.WebViewListener)
org.apache.cordova.CallbackContext: boolean isFinished()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
org.apache.cordova.engine.SystemWebView: void setWebChromeClient(android.webkit.WebChromeClient)
com.capacitorjs.community.plugins.bluetoothle.Device$gattCallback$1: void onDescriptorRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int,byte[])
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.appcompat.view.ContextThemeWrapper$Api17Impl: android.content.Context createConfigurationContext(androidx.appcompat.view.ContextThemeWrapper,android.content.res.Configuration)
com.capacitorjs.plugins.camera.CameraSettings: com.capacitorjs.plugins.camera.CameraResultType getResultType()
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
org.apache.cordova.CordovaWebViewImpl: java.lang.String getUrl()
com.getcapacitor.PluginResult: com.getcapacitor.JSObject getWrappedResult()
androidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)
androidx.transition.ViewUtilsApi19$Api29Impl: void setTransitionAlpha(android.view.View,float)
androidx.constraintlayout.widget.Barrier: int getMargin()
org.apache.cordova.CordovaWebViewImpl: void setButtonPlumbedToJs(int,boolean)
com.getcapacitor.util.PermissionHelper: boolean hasDefinedPermissions(android.content.Context,java.lang.String[])
com.getcapacitor.JSObject: java.lang.String getString(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.Device: void access$cleanupCallbacksHandlerThread(com.capacitorjs.community.plugins.bluetoothle.Device)
androidx.fragment.app.DialogFragment: void setStyle(int,int)
kotlin.collections.EmptyMap: java.lang.Object readResolve()
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl: void onPointerCaptureChanged(android.view.Window$Callback,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
org.apache.cordova.CordovaInterfaceImpl: void onRequestPermissionResult(int,java.lang.String[],int[])
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
com.getcapacitor.JSObject: org.json.JSONObject put(java.lang.String,boolean)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getSigningCertificateHistory(android.content.pm.SigningInfo)
com.getcapacitor.Bridge: java.lang.String pluginName(java.lang.Class)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()
com.capacitorjs.plugins.camera.ExifWrapper: void copyExif(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.transition.ViewUtilsApi19$Api29Impl: float getTransitionAlpha(android.view.View)
org.apache.cordova.engine.SystemWebView: SystemWebView(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.getcapacitor.JSObject: java.lang.Boolean getBool(java.lang.String)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.google.android.material.checkbox.MaterialCheckBox: java.lang.CharSequence getErrorAccessibilityLabel()
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$stopNotifications$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
org.apache.cordova.CordovaWebViewImpl: void showCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback)
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
org.apache.cordova.CordovaClientCertRequest: void ignore()
com.getcapacitor.Plugin: androidx.activity.result.ActivityResultLauncher getActivityLauncherOrReject(com.getcapacitor.PluginCall,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
com.capacitorjs.community.plugins.bluetoothle.Device: void cleanupCallbacksHandlerThread()
com.getcapacitor.App: void setStatusChangeListener(com.getcapacitor.App$AppStatusChangeListener)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
androidx.constraintlayout.helper.widget.Flow: void setPaddingBottom(int)
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface: void onPostMessage(android.webkit.WebView,java.lang.reflect.InvocationHandler,android.net.Uri,boolean,java.lang.reflect.InvocationHandler)
com.getcapacitor.Plugin: void requestAllPermissions(com.getcapacitor.PluginCall,java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getMinEms()
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void setConnectTimeout(int)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: void showDeviceList$lambda$4(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.getcapacitor.FileUtils: java.lang.String readFileFromDisk(java.io.File)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: int getMaxLines(android.widget.TextView)
com.getcapacitor.Bridge: void registerPluginInstances(com.getcapacitor.Plugin[])
com.google.android.material.internal.ClippableRoundedCornerLayout: float getCornerRadius()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface: java.lang.Object getOrCreatePeer(java.util.concurrent.Callable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
com.capacitorjs.plugins.camera.CameraUtils: java.io.File createImageFile(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl)
com.getcapacitor.Logger: com.getcapacitor.Logger getInstance()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.getcapacitor.plugin.CapacitorCookieManager: java.net.HttpCookie[] getCookies(java.lang.String)
com.dexmobile.app.MainActivity: MainActivity()
com.getcapacitor.ProcessedRoute: void setIgnoreAssetPath(boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getWillSuppressErrorPage()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.getcapacitor.WebViewListener: boolean onRenderProcessGone(android.webkit.WebView,android.webkit.RenderProcessGoneDetail)
com.capacitorjs.community.plugins.bluetoothle.DisplayStrings: java.lang.String getCancel()
androidx.fragment.app.Fragment: boolean getUserVisibleHint()
org.apache.cordova.NativeToJsMessageQueue$NoOpBridgeMode: NativeToJsMessageQueue$NoOpBridgeMode()
com.getcapacitor.util.JSONUtils: java.lang.String[] getArray(org.json.JSONObject,java.lang.String,java.lang.String[])
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
com.getcapacitor.util.HostMask$Any: com.getcapacitor.util.HostMask$Any parse(java.lang.String[])
com.getcapacitor.BridgeWebViewClient: boolean onRenderProcessGone(android.webkit.WebView,android.webkit.RenderProcessGoneDetail)
com.capacitorjs.community.plugins.bluetoothle.Device: void disconnect(long,kotlin.jvm.functions.Function1)
org.apache.cordova.CordovaWebViewImpl: void handlePause(boolean)
com.getcapacitor.WebViewLocalServer: void createHostingDetails()
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(java.lang.String[])
com.getcapacitor.ServerPath: ServerPath(com.getcapacitor.ServerPath$PathType,java.lang.String)
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
org.apache.cordova.CordovaPlugin: org.apache.cordova.CordovaResourceApi$OpenForReadResult handleOpenForRead(android.net.Uri)
com.capacitorjs.plugins.camera.ImageUtils: int getOrientation(android.content.Context,android.net.Uri)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(int)
com.getcapacitor.Plugin: void removeListener(com.getcapacitor.PluginCall)
com.google.android.material.textfield.TextInputLayout: void setStartIconScaleType(android.widget.ImageView$ScaleType)
com.getcapacitor.plugin.util.HttpRequestHandler: java.lang.Object parseJSON(java.lang.String)
org.apache.cordova.AllowListPlugin: void pluginInitialize()
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: kotlin.jvm.functions.Function1 access$getScanResultCallback$p(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner)
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
org.apache.cordova.CoreAndroid: void overrideButton(java.lang.String,boolean)
com.google.android.material.textfield.TextInputLayout: void setLengthCounter(com.google.android.material.textfield.TextInputLayout$LengthCounter)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.getcapacitor.PluginInvocationException: PluginInvocationException(java.lang.String,java.lang.Throwable)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
org.apache.cordova.CordovaWebViewImpl: boolean canGoBack()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.getcapacitor.plugin.CapacitorCookieManager: void removeSessionCookies()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.getcapacitor.Bridge: void lambda$triggerJSEvent$2(java.lang.String)
androidx.core.app.ActivityCompat$Api21Impl: void finishAfterTransition(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
androidx.appcompat.app.AppCompatActivity: android.content.Intent getSupportParentActivityIntent()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.capacitorjs.community.plugins.bluetoothle.Device: void access$requestMtu(com.capacitorjs.community.plugins.bluetoothle.Device,int)
com.getcapacitor.WebViewLocalServer: void register(android.net.Uri,com.getcapacitor.WebViewLocalServer$PathHandler)
com.google.android.material.button.MaterialButtonToggleGroup: void setEnabled(boolean)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner$Companion: DeviceScanner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.getcapacitor.plugin.util.AssetUtil: android.graphics.Bitmap getIconFromUri(android.net.Uri)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(float,float)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
com.getcapacitor.plugin.CapacitorHttp: void post(com.getcapacitor.PluginCall)
com.capacitorjs.plugins.camera.CameraResultType: com.capacitorjs.plugins.camera.CameraResultType[] $values()
androidx.fragment.app.Fragment: java.lang.Object requireHost()
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWebAuthnSupport(int)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void writeObjectRequestBody(com.getcapacitor.JSObject)
com.getcapacitor.ServerPath$PathType: com.getcapacitor.ServerPath$PathType[] $values()
com.getcapacitor.Bridge: boolean onActivityResult(int,int,android.content.Intent)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.getcapacitor.plugin.CapacitorHttp: void delete(com.getcapacitor.PluginCall)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.getcapacitor.InvalidPluginException: InvalidPluginException(java.lang.String)
com.getcapacitor.PluginResult: java.lang.String toString()
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
androidx.fragment.app.DialogFragment: void onStop()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: com.getcapacitor.JSObject getProperties(android.bluetooth.BluetoothGattCharacteristic)
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.getcapacitor.plugin.util.AssetUtil: android.net.Uri getUriFromFile(java.io.File)
com.getcapacitor.WebViewLocalServer$PathHandler: java.util.Map getResponseHeaders()
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
com.getcapacitor.PluginCall: java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
com.getcapacitor.CapConfig: org.json.JSONObject getObject(java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
androidx.fragment.app.Fragment: void postponeEnterTransition()
com.getcapacitor.PluginCall: java.lang.Double getDouble(java.lang.String,java.lang.Double)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
androidx.fragment.app.Fragment: void noteStateNotSaved()
org.apache.cordova.engine.SystemWebViewEngine: SystemWebViewEngine(org.apache.cordova.engine.SystemWebView,org.apache.cordova.CordovaPreferences)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: boolean onCreate()
com.getcapacitor.plugin.util.AssetUtil: java.lang.String getPkgName(android.content.res.Resources)
com.getcapacitor.Plugin: java.lang.Boolean shouldOverrideLoad(android.net.Uri)
com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder: com.getcapacitor.plugin.util.HttpRequestHandler$HttpURLConnectionBuilder openConnection()
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void stopEnabledNotifications(com.getcapacitor.PluginCall)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebViewClient getWebViewClient()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.google.android.material.button.MaterialButton: void setToggleCheckedStateOnClick(boolean)
androidx.fragment.app.Fragment: boolean isDetached()
com.getcapacitor.Bridge: void logToJs(java.lang.String)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
com.getcapacitor.WebViewLocalServer$PathHandler: java.lang.String getEncoding()
org.apache.cordova.CordovaPlugin: void onStart()
androidx.fragment.app.Fragment: void restoreChildFragmentState()
com.getcapacitor.AndroidProtocolHandler: int getFieldId(android.content.Context,java.lang.String,java.lang.String)
com.getcapacitor.PluginCall: void reject(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
com.getcapacitor.Plugin: void startActivityForResult(com.getcapacitor.PluginCall,android.content.Intent,int)
com.google.android.material.chip.Chip: void setMaxLines(int)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
kotlin.jvm.internal.Lambda: int getArity()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.getcapacitor.Bridge: com.getcapacitor.RouteProcessor getRouteProcessor()
com.getcapacitor.util.PermissionHelper: java.lang.String[] getUndefinedPermissions(android.content.Context,java.lang.String[])
com.google.android.material.motion.MaterialBackOrchestrator$Api33BackCallbackDelegate: void startListeningForBackCallbacks(com.google.android.material.motion.MaterialBackHandler,android.view.View,boolean)
com.getcapacitor.Plugin: void addListener(com.getcapacitor.PluginCall)
com.capacitorjs.community.plugins.bluetoothle.Device$Companion: Device$Companion()
androidx.fragment.app.Fragment: boolean hasOptionsMenu()
androidx.webkit.internal.ApiHelperForO: android.webkit.WebViewClient getWebViewClient(android.webkit.WebView)
com.capacitorjs.community.plugins.bluetoothle.ConversionKt: byte hexToByte(java.lang.String)
com.getcapacitor.BridgeActivity: void onPause()
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
org.apache.cordova.CallbackContext: void success(java.lang.String)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.fragment.app.Fragment: void setTargetFragment(androidx.fragment.app.Fragment,int)
com.capacitorjs.plugins.camera.CameraSettings: boolean isShouldCorrectOrientation()
androidx.fragment.app.DialogFragment: androidx.activity.ComponentDialog requireComponentDialog()
org.apache.cordova.NativeToJsMessageQueue$EvalBridgeMode: void onNativeToJsMessageAvailable(org.apache.cordova.NativeToJsMessageQueue)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.getcapacitor.util.HostMask$Parser: com.getcapacitor.util.HostMask parse(java.lang.String[])
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
org.apache.cordova.CoreAndroid: void clearHistory()
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.getcapacitor.Bridge: java.lang.String pluginId(java.lang.Class)
androidx.fragment.app.Fragment: void setReenterTransition(java.lang.Object)
com.getcapacitor.PluginCall: com.getcapacitor.JSObject getObject(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.Device$reject$1: java.lang.Boolean invoke(com.capacitorjs.community.plugins.bluetoothle.TimeoutHandler)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
com.capacitorjs.plugins.camera.CameraUtils: java.lang.String getLogTag()
com.getcapacitor.BridgeWebChromeClient: void showMediaCaptureOrFilePicker(android.webkit.ValueCallback,android.webkit.WebChromeClient$FileChooserParams,boolean)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabelResource(int)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void handleDestroy()
com.getcapacitor.WebViewLocalServer: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
com.getcapacitor.PluginCall: com.getcapacitor.JSArray getArray(java.lang.String,com.getcapacitor.JSArray)
kotlin.collections.EmptyList: EmptyList()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: com.capacitorjs.community.plugins.bluetoothle.Device getOrCreateDevice(com.getcapacitor.PluginCall)
com.getcapacitor.plugin.CapacitorHttp: CapacitorHttp()
androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: void stopScanning$lambda$0(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean isAlgorithmicDarkeningAllowed()
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getActualTextAlignment()
androidx.activity.ComponentActivity: void removeOnTrimMemoryListener(androidx.core.util.Consumer)
com.getcapacitor.plugin.util.AssetUtil: void copyFile(java.io.InputStream,java.io.FileOutputStream)
com.getcapacitor.annotation.Permission: java.lang.String[] strings()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.Object createRangeInfo(int,float,float,float)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$connect$1: void invoke(com.capacitorjs.community.plugins.bluetoothle.CallbackResponse)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$startNotifications$2: java.lang.Object invoke(java.lang.Object)
androidx.webkit.internal.ApiHelperForP: void start(android.webkit.TracingController,androidx.webkit.TracingConfig)
com.getcapacitor.cordova.MockCordovaWebViewImpl: void lambda$triggerDocumentEvent$1(java.lang.String)
com.getcapacitor.WebViewListener: void onPageLoaded(android.webkit.WebView)
com.capacitorjs.plugins.camera.ImageUtils: ImageUtils()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setCaptureInput(boolean)
androidx.activity.ComponentActivity: void invalidateMenu()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessage(java.lang.String)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.getcapacitor.Bridge: void callPluginMethod(java.lang.String,java.lang.String,com.getcapacitor.PluginCall)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
com.getcapacitor.Bridge: java.util.Set getAllowedOriginRules()
com.capacitorjs.plugins.camera.CameraBottomSheetDialogFragment: void setTitle(java.lang.String)
com.getcapacitor.android.R$style: R$style()
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setPluginsConfiguration(org.json.JSONObject)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: com.getcapacitor.JSObject access$getBleDevice(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,android.bluetooth.BluetoothDevice)
com.getcapacitor.Plugin: java.lang.String getLogTag()
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.activity.ComponentActivity: androidx.activity.FullyDrawnReporter getFullyDrawnReporter()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$writeWithoutResponse$1: void invoke(com.capacitorjs.community.plugins.bluetoothle.CallbackResponse)
com.getcapacitor.ProcessedRoute: java.lang.String getPath()
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.capacitorjs.community.plugins.bluetoothle.ScanResponse: android.bluetooth.BluetoothDevice getDevice()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.getcapacitor.PluginCall: java.lang.Integer getInt(java.lang.String,java.lang.Integer)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
androidx.core.view.ViewCompat$Api29Impl: void setContentCaptureSession(android.view.View,androidx.core.view.contentcapture.ContentCaptureSessionCompat)
com.getcapacitor.util.HostMask$Parser: HostMask$Parser()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$getOrCreateDevice$newDevice$1: void invoke()
com.getcapacitor.Bridge: com.getcapacitor.CapConfig getConfig()
com.getcapacitor.BridgeActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setAppendedUserAgentString(java.lang.String)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLayoutDirection(android.content.res.Configuration,java.util.Locale)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
com.getcapacitor.BridgeWebChromeClient$ActivityResultListener: void onActivityResult(androidx.activity.result.ActivityResult)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.getcapacitor.Plugin: void handleOnActivityResult(int,int,android.content.Intent)
com.google.android.material.textfield.MaterialAutoCompleteTextView: android.content.res.ColorStateList getSimpleItemSelectedRippleColor()
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
androidx.constraintlayout.helper.widget.Flow: Flow(android.content.Context,android.util.AttributeSet)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestDevice$1: java.lang.Object invoke(java.lang.Object)
org.apache.cordova.CordovaPlugin: java.lang.String getServiceName()
com.google.android.material.chip.Chip: void setCheckable(boolean)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.getcapacitor.BridgeWebChromeClient: void lambda$onJsAlert$4(android.webkit.JsResult,android.content.DialogInterface)
com.getcapacitor.ProcessedRoute: void setAsset(boolean)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.getcapacitor.Bridge$Builder: Bridge$Builder(androidx.fragment.app.Fragment)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void onDisconnect(java.lang.String)
com.getcapacitor.PluginHandle: void indexMethods(java.lang.Class)
org.apache.cordova.CordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface)
com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
com.google.android.material.bottomsheet.BottomSheetDialogFragment: void access$100(com.google.android.material.bottomsheet.BottomSheetDialogFragment)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.getcapacitor.JSArray: JSArray(java.lang.Object)
com.getcapacitor.BridgeWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.fragment.app.FragmentActivity: void onResumeFragments()
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setHostname(java.lang.String)
androidx.constraintlayout.widget.Barrier: void setMargin(int)
com.getcapacitor.Plugin: void removeEventListener(java.lang.String,com.getcapacitor.PluginCall)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalAlign(int)
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
androidx.activity.ComponentActivity: void addOnConfigurationChangedListener(androidx.core.util.Consumer)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
com.capacitorjs.community.plugins.bluetoothle.Device: void access$setConnectionState$p(com.capacitorjs.community.plugins.bluetoothle.Device,int)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.capacitorjs.plugins.camera.CameraPlugin: void doShow(com.getcapacitor.PluginCall)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void isEnabled(com.getcapacitor.PluginCall)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.getcapacitor.JSObject: com.getcapacitor.JSObject getJSObject(java.lang.String,com.getcapacitor.JSObject)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: kotlin.Triple getDescriptor(com.getcapacitor.PluginCall)
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.getcapacitor.Logger: Logger()
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
androidx.core.view.ViewCompat$Api30Impl: int getImportantForContentCapture(android.view.View)
com.getcapacitor.Plugin: void removeAllListeners()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
com.getcapacitor.util.HostMask$Util: boolean matches(java.lang.String,java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalStyle(int)
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
com.getcapacitor.BridgeWebChromeClient: boolean onShowFileChooser(android.webkit.WebView,android.webkit.ValueCallback,android.webkit.WebChromeClient$FileChooserParams)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
com.getcapacitor.JSObject: com.getcapacitor.JSObject put(java.lang.String,java.lang.Object)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
com.capacitorjs.plugins.camera.CameraPlugin: void getLimitedLibraryPhotos(com.getcapacitor.PluginCall)
com.getcapacitor.plugin.util.MimeType: com.getcapacitor.plugin.util.MimeType[] $values()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
com.getcapacitor.Bridge: java.lang.String getErrorUrl()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.getcapacitor.Bridge: void setAllowedOriginRules()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.capacitorjs.community.plugins.bluetoothle.Device$gattCallback$1: void onMtuChanged(android.bluetooth.BluetoothGatt,int,int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
androidx.fragment.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)
com.getcapacitor.annotation.CapacitorPlugin: com.getcapacitor.annotation.Permission[] permissions()
com.getcapacitor.ProcessedRoute: ProcessedRoute()
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: java.util.ArrayList access$getDeviceStrings$p(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: BluetoothLe()
com.getcapacitor.Bridge: com.getcapacitor.PluginCall getPermissionCall(java.lang.String)
com.getcapacitor.Bridge: void saveCall(com.getcapacitor.PluginCall)
com.getcapacitor.InvalidPluginMethodException: InvalidPluginMethodException(java.lang.Throwable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
androidx.activity.Api34Impl: android.window.BackEvent createOnBackEvent(float,float,float,int)
com.capacitorjs.community.plugins.bluetoothle.Device: void write(java.util.UUID,java.util.UUID,java.lang.String,int,long,kotlin.jvm.functions.Function1)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean isTracing()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.getcapacitor.CapConfig: int getMinWebViewVersion()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void openAppSettings(com.getcapacitor.PluginCall)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.getcapacitor.CapConfig$Builder: com.getcapacitor.CapConfig$Builder setUseLegacyBridge(boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.getcapacitor.Logger: void warn(java.lang.String)
com.capacitorjs.plugins.camera.CameraPlugin: void processPickedImage(android.net.Uri,com.getcapacitor.PluginCall)
com.getcapacitor.Logger: void verbose(java.lang.String,java.lang.String)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
com.google.android.material.chip.Chip: void setChipTextResource(int)
androidx.constraintlayout.helper.widget.Flow: void setVerticalBias(float)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.getcapacitor.JSObject: org.json.JSONObject put(java.lang.String,double)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void getBondedDevices(com.getcapacitor.PluginCall)
androidx.fragment.app.Fragment: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.getcapacitor.BridgeActivity: void registerPlugin(java.lang.Class)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
org.apache.cordova.CordovaPlugin: boolean hasPermisssion()
org.apache.cordova.ResumeCallback: void sendPluginResult(org.apache.cordova.PluginResult)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
com.getcapacitor.util.WebColor: int parseColor(java.lang.String)
com.capacitorjs.plugins.camera.CameraPlugin: void load()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.activity.ComponentActivity: void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
com.getcapacitor.PluginResult: PluginResult(com.getcapacitor.JSObject)
org.apache.cordova.CordovaWebViewImpl: void loadUrlIntoView(java.lang.String,boolean)
androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
androidx.appcompat.app.AppCompatActivity: boolean supportShouldUpRecreateTask(android.content.Intent)
com.getcapacitor.plugin.CapacitorCookieManager: CapacitorCookieManager(com.getcapacitor.Bridge)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.getcapacitor.plugin.util.HttpRequestHandler$ResponseType: HttpRequestHandler$ResponseType(java.lang.String,int,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
org.apache.cordova.CordovaInterfaceImpl: void requestPermission(org.apache.cordova.CordovaPlugin,int,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setTextSelectable(android.view.accessibility.AccessibilityNodeInfo,boolean)
androidx.fragment.app.DialogFragment: void dismissNow()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
com.capacitorjs.plugins.camera.CameraPlugin: android.graphics.Bitmap prepareBitmap(android.graphics.Bitmap,android.net.Uri,com.capacitorjs.plugins.camera.ExifWrapper)
com.getcapacitor.util.PermissionHelper: boolean hasDefinedPermission(android.content.Context,java.lang.String)
androidx.activity.ComponentActivity: void reportFullyDrawn()
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int)
androidx.fragment.app.Fragment: void performResume()
androidx.fragment.app.Fragment: java.lang.String getTag()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void write(com.getcapacitor.PluginCall)
com.getcapacitor.JSObject: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
androidx.fragment.app.Fragment: void onPause()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
com.getcapacitor.PluginCall: void reject(java.lang.String)
com.getcapacitor.PluginConfig: boolean getBoolean(java.lang.String,boolean)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
com.google.android.material.appbar.MaterialToolbar: java.lang.Integer getNavigationIconTint()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void loadUrlIntoView(java.lang.String,boolean)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
com.getcapacitor.CapConfig: boolean isLoggingEnabled()
com.getcapacitor.cordova.MockCordovaWebViewImpl: void init(org.apache.cordova.CordovaInterface,java.util.List,org.apache.cordova.CordovaPreferences)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean stop(java.io.OutputStream,java.util.concurrent.Executor)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])
androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentContainer createFragmentContainer()
com.getcapacitor.PluginResult: com.getcapacitor.PluginResult put(java.lang.String,long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setUniqueId(android.view.accessibility.AccessibilityNodeInfo,java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$readRssi$1: BluetoothLe$readRssi$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,com.getcapacitor.PluginCall)
androidx.core.os.LocaleListCompat$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void isLocationEnabled(com.getcapacitor.PluginCall)
com.capacitorjs.community.plugins.bluetoothle.Device: boolean access$connectCallOngoing(com.capacitorjs.community.plugins.bluetoothle.Device)
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner: com.capacitorjs.community.plugins.bluetoothle.DeviceList access$getDeviceList$p(com.capacitorjs.community.plugins.bluetoothle.DeviceScanner)
com.getcapacitor.BridgeWebChromeClient: void lambda$onPermissionRequest$2(android.webkit.PermissionRequest,java.lang.Boolean)
androidx.appcompat.app.AppCompatActivity: void onSupportContentChanged()
com.getcapacitor.Plugin: void handleOnResume()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat buildCollectionItemInfoCompat(boolean,int,int,int,int,boolean,java.lang.String,java.lang.String)
com.getcapacitor.PluginCall: void reject(java.lang.String,java.lang.String,java.lang.Exception)
com.capacitorjs.plugins.camera.CameraPlugin: android.net.Uri saveImage(android.net.Uri,java.io.InputStream)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
org.apache.cordova.CordovaWebViewImpl: boolean isCustomViewShowing()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasMultipleSigners(android.content.pm.SigningInfo)
com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)
com.getcapacitor.PluginConfig: java.lang.String getString(java.lang.String)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: java.lang.String toLanguageTag(java.util.Locale)
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.getcapacitor.BridgeWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)
com.getcapacitor.Bridge: void registerPlugins(java.lang.Class[])
org.apache.cordova.CordovaInterfaceImpl: java.lang.Object onMessage(java.lang.String,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.getcapacitor.UriMatcher: void addURI(java.lang.String,java.lang.String,java.lang.String,java.lang.Object)
androidx.transition.ViewUtilsApi23$Api29Impl: void setTransitionVisibility(android.view.View,int)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
com.getcapacitor.PluginCall: java.lang.Long getLong(java.lang.String)
com.getcapacitor.Plugin: void pluginRequestPermission(java.lang.String,int)
com.getcapacitor.util.PermissionHelper: boolean hasPermissions(android.content.Context,java.lang.String[])
com.capacitorjs.community.plugins.bluetoothle.Device$resolve$1: Device$resolve$1(java.lang.String)
androidx.fragment.app.DialogFragment: android.app.Dialog access$000(androidx.fragment.app.DialogFragment)
androidx.fragment.app.Fragment: void setSharedElementEnterTransition(java.lang.Object)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
androidx.transition.Transition$Impl26: long getTotalDuration(android.animation.Animator)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProxyController()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$writeDescriptor$1: BluetoothLe$writeDescriptor$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,com.getcapacitor.PluginCall)
com.getcapacitor.util.HostMask$Util: java.util.List splitAndReverse(java.lang.String)
com.capacitorjs.plugins.camera.CameraSettings: boolean isShouldResize()
androidx.fragment.app.Fragment: void setPopDirection(boolean)
com.getcapacitor.BridgeWebChromeClient: void lambda$onJsConfirm$5(android.webkit.JsResult,android.content.DialogInterface,int)
com.getcapacitor.Bridge: void lambda$triggerJSEvent$3(java.lang.String)
com.getcapacitor.WebViewLocalServer$1: java.io.InputStream handle(android.net.Uri)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.getcapacitor.PluginHandle: java.lang.String getId()
com.getcapacitor.MessageHandler: void lambda$callCordovaPluginMethod$2(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.button.MaterialButton: void setIconResource(int)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
com.getcapacitor.plugin.CapacitorCookieManager: java.lang.String getSanitizedDomain(java.lang.String)
com.capacitorjs.plugins.camera.CameraPlugin: void openPhotos(com.getcapacitor.PluginCall)
androidx.activity.ComponentActivity: void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
com.capacitorjs.plugins.camera.CameraPlugin: void processPickedImage(com.getcapacitor.PluginCall,androidx.activity.result.ActivityResult)
com.getcapacitor.JSObject: JSObject(org.json.JSONObject,java.lang.String[])
org.apache.cordova.CordovaWebViewImpl$EngineClient: boolean onNavigationAttempt(java.lang.String)
com.getcapacitor.BridgeActivity: void onDetachedFromWindow()
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.getcapacitor.Plugin: void execute(java.lang.Runnable)
com.getcapacitor.Bridge: void onStart()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void requestDevice(com.getcapacitor.PluginCall)
com.capacitorjs.community.plugins.bluetoothle.Device: void read(java.util.UUID,java.util.UUID,long,kotlin.jvm.functions.Function1)
com.getcapacitor.BridgeWebChromeClient: BridgeWebChromeClient(com.getcapacitor.Bridge)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.getcapacitor.Plugin: void removeAllListeners(com.getcapacitor.PluginCall)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
androidx.fragment.app.DialogFragment: void onActivityCreated(android.os.Bundle)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl: boolean isInLayout(android.view.View)
androidx.appcompat.app.AppCompatActivity: void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
com.getcapacitor.PluginCall: void errorCallback(java.lang.String)
com.capacitorjs.plugins.camera.CameraPlugin: void showCamera(com.getcapacitor.PluginCall)
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonIconTintList()
org.apache.cordova.PluginResult$Status: org.apache.cordova.PluginResult$Status valueOf(java.lang.String)
com.getcapacitor.WebViewListener: void onReceivedError(android.webkit.WebView)
com.getcapacitor.plugin.CapacitorCookieManager: java.net.HttpCookie getCookie(java.lang.String,java.lang.String)
com.getcapacitor.plugin.CapacitorHttp$1: CapacitorHttp$1(com.getcapacitor.plugin.CapacitorHttp,com.getcapacitor.PluginCall,java.lang.String)
com.capacitorjs.plugins.camera.CameraPlugin: void lambda$showPrompt$0(com.getcapacitor.PluginCall,int)
com.getcapacitor.util.JSONUtils: java.lang.String getDeepestKey(java.lang.String)
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.getcapacitor.WebViewLocalServer: void registerUriForScheme(java.lang.String,com.getcapacitor.WebViewLocalServer$PathHandler,java.lang.String)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
com.getcapacitor.cordova.MockCordovaWebViewImpl$CapacitorEvalBridgeMode: MockCordovaWebViewImpl$CapacitorEvalBridgeMode(android.webkit.WebView,org.apache.cordova.CordovaInterface)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.capacitorjs.community.plugins.bluetoothle.Device$reject$1: java.lang.Object invoke(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)
androidx.appcompat.app.AppCompatActivity: void supportInvalidateOptionsMenu()
org.apache.cordova.CordovaHttpAuthHandler: void cancel()
com.getcapacitor.Plugin: androidx.activity.result.ActivityResultLauncher getPermissionLauncherOrReject(com.getcapacitor.PluginCall,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
com.getcapacitor.cordova.MockCordovaInterfaceImpl: boolean handlePermissionResult(int,java.lang.String[],int[])
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.transition.TransitionUtils$Api28Impl: android.graphics.Bitmap createBitmap(android.graphics.Picture)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.Fragment: androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.fragment.app.Fragment: void setFocusedView(android.view.View)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$disconnect$1: BluetoothLe$disconnect$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,com.capacitorjs.community.plugins.bluetoothle.Device,com.getcapacitor.PluginCall)
androidx.fragment.app.DialogFragment: void setShowsDialog(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void openBluetoothSettings(com.getcapacitor.PluginCall)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$getOrCreateDevice$newDevice$1: BluetoothLe$getOrCreateDevice$newDevice$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,java.lang.String)
com.getcapacitor.AppUUID: java.lang.String readUUID(androidx.appcompat.app.AppCompatActivity)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
com.capacitorjs.community.plugins.bluetoothle.Device$gattCallback$1: void onCharacteristicWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertCookieManager(java.lang.Object)
com.getcapacitor.PluginInvocationException: PluginInvocationException(java.lang.Throwable)
org.apache.cordova.engine.SystemWebViewEngine: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaInterface,org.apache.cordova.CordovaWebViewEngine$Client,org.apache.cordova.CordovaResourceApi,org.apache.cordova.PluginManager,org.apache.cordova.NativeToJsMessageQueue)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$readDescriptor$1: BluetoothLe$readDescriptor$1(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,com.getcapacitor.PluginCall)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.capacitorjs.community.plugins.bluetoothle.Device: boolean isConnected()
com.capacitorjs.community.plugins.bluetoothle.DeviceScanner$Companion: DeviceScanner$Companion()
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void access$notifyListeners(com.capacitorjs.community.plugins.bluetoothle.BluetoothLe,java.lang.String,com.getcapacitor.JSObject)
org.apache.cordova.CoreAndroid: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.CallbackContext)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatSpinner$Api23Impl: void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe$requestLEScan$2: void invoke(android.bluetooth.le.ScanResult)
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.capacitorjs.plugins.camera.CameraSettings: int getWidth()
androidx.fragment.app.Fragment: float getPostOnViewCreatedAlpha()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.getcapacitor.plugin.util.CapacitorHttpUrlConnection: void setReadTimeout(int)
com.getcapacitor.Bridge: void registerPluginInstance(com.getcapacitor.Plugin)
com.getcapacitor.PluginConfig: org.json.JSONObject getObject(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawable(android.graphics.drawable.Drawable)
com.getcapacitor.WebViewLocalServer: boolean isLocalFile(android.net.Uri)
com.getcapacitor.CapConfig: boolean isInputCaptured()
com.getcapacitor.Bridge: boolean isDevMode()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.material.checkbox.MaterialCheckBox: void setCenterIfNoTextEnabled(boolean)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.capacitorjs.community.plugins.bluetoothle.BluetoothLe: void handleRequestEnableResult(com.getcapacitor.PluginCall,androidx.activity.result.ActivityResult)
com.google.android.material.textfield.MaterialAutoCompleteTextView: android.content.res.ColorStateList getDropDownBackgroundTintList()
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
androidx.fragment.app.Fragment: void setPostOnViewCreatedAlpha(float)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getStartIconScaleType()
com.getcapacitor.util.JSONUtils: JSONUtils()
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
com.getcapacitor.CapacitorWebView: void edgeToEdgeHandler(com.getcapacitor.Bridge)
